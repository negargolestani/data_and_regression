2020-10-18 16:54:43,957:INFO:PyCaret Regression Module
2020-10-18 16:54:43,957:INFO:version 2.1.2
2020-10-18 16:54:43,957:INFO:Initializing setup()
2020-10-18 16:54:43,957:INFO:USI: 2622
2020-10-18 16:54:43,958:INFO:setup(data=(406000, 41), target=target, train_size=0.7, sampling=False, sample_estimator=None, categorical_features=None, categorical_imputation=constant, ordinal_features=None,
                    high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, date_features=None, ignore_features=None, normalize=True,
                    normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear,
                    pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05,
                    remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=False, create_clusters=False, cluster_iter=20,
                    polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None,
                    group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, transform_target=False,
                    transform_target_method=box-cox, data_split_shuffle=True, folds_shuffle=False, n_jobs=-1, html=True, session_id=0, log_experiment=False,
                    experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False)
2020-10-18 16:54:43,959:INFO:Checking environment
2020-10-18 16:54:43,959:INFO:python_version: 3.7.6
2020-10-18 16:54:43,959:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 16:54:43,959:INFO:machine: AMD64
2020-10-18 16:54:43,960:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 16:54:43,960:INFO:Memory: svmem(total=16969158656, available=6054936576, percent=64.3, used=10914222080, free=6054936576)
2020-10-18 16:54:43,960:INFO:Physical Core: 4
2020-10-18 16:54:43,960:INFO:Logical Core: 8
2020-10-18 16:54:43,960:INFO:Checking libraries
2020-10-18 16:54:43,960:INFO:pd==1.1.3
2020-10-18 16:54:43,960:INFO:numpy==1.18.1
2020-10-18 16:54:43,961:INFO:sklearn==0.23.2
2020-10-18 16:54:44,054:INFO:xgboost==0.90
2020-10-18 16:54:44,084:INFO:lightgbm==2.3.1
2020-10-18 16:54:44,187:INFO:catboost==0.24.2
2020-10-18 16:54:45,873:INFO:mlflow==1.11.0
2020-10-18 16:54:45,874:INFO:Checking Exceptions
2020-10-18 16:54:45,874:INFO:Preloading libraries
2020-10-18 16:54:45,874:INFO:Preparing display monitor
2020-10-18 16:54:45,890:INFO:Importing libraries
2020-10-18 16:54:47,488:INFO:Declaring global variables
2020-10-18 16:54:47,488:INFO:Copying data for preprocessing
2020-10-18 16:54:47,780:INFO:Declaring preprocessing parameters
2020-10-18 16:54:47,780:INFO:Importing preprocessing module
2020-10-18 16:54:48,892:INFO:Creating preprocessing pipeline
2020-10-18 16:55:23,250:INFO:Preprocessing pipeline created successfully
2020-10-18 16:55:23,251:INFO:No inverse transformer found
2020-10-18 16:55:23,251:INFO:Creating grid variables
2020-10-18 16:55:23,364:INFO:Creating global containers
2020-10-18 16:55:24,080:INFO:create_model_container: 0
2020-10-18 16:55:24,081:INFO:master_model_container: 0
2020-10-18 16:55:24,081:INFO:display_container: 0
2020-10-18 16:55:24,081:INFO:setup() succesfully completed......................................
2020-10-18 17:07:00,326:INFO:PyCaret Regression Module
2020-10-18 17:07:00,326:INFO:version 2.1.2
2020-10-18 17:07:00,326:INFO:Initializing setup()
2020-10-18 17:07:00,326:INFO:USI: 1c77
2020-10-18 17:07:00,326:INFO:setup(data=(406000, 41), target=target, train_size=0.7, sampling=False, sample_estimator=None, categorical_features=None, categorical_imputation=constant, ordinal_features=None,
                    high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, date_features=None, ignore_features=None, normalize=True,
                    normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear,
                    pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05,
                    remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=False, create_clusters=False, cluster_iter=20,
                    polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None,
                    group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, transform_target=False,
                    transform_target_method=box-cox, data_split_shuffle=True, folds_shuffle=False, n_jobs=-1, html=True, session_id=0, log_experiment=False,
                    experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False)
2020-10-18 17:07:00,326:INFO:Checking environment
2020-10-18 17:07:00,327:INFO:python_version: 3.7.6
2020-10-18 17:07:00,327:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 17:07:00,327:INFO:machine: AMD64
2020-10-18 17:07:00,327:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 17:07:00,327:INFO:Memory: svmem(total=16969158656, available=5478068224, percent=67.7, used=11491090432, free=5478068224)
2020-10-18 17:07:00,327:INFO:Physical Core: 4
2020-10-18 17:07:00,327:INFO:Logical Core: 8
2020-10-18 17:07:00,327:INFO:Checking libraries
2020-10-18 17:07:00,327:INFO:pd==1.1.3
2020-10-18 17:07:00,327:INFO:numpy==1.18.1
2020-10-18 17:07:00,327:INFO:sklearn==0.23.2
2020-10-18 17:07:00,327:INFO:xgboost==0.90
2020-10-18 17:07:00,327:INFO:lightgbm==2.3.1
2020-10-18 17:07:00,327:INFO:catboost==0.24.2
2020-10-18 17:07:00,328:INFO:mlflow==1.11.0
2020-10-18 17:07:00,328:INFO:Checking Exceptions
2020-10-18 17:07:00,328:INFO:Preloading libraries
2020-10-18 17:07:00,328:INFO:Preparing display monitor
2020-10-18 17:07:00,335:INFO:Importing libraries
2020-10-18 17:07:00,348:INFO:Declaring global variables
2020-10-18 17:07:00,348:INFO:Copying data for preprocessing
2020-10-18 17:07:00,639:INFO:Declaring preprocessing parameters
2020-10-18 17:07:00,639:INFO:Importing preprocessing module
2020-10-18 17:07:00,639:INFO:Creating preprocessing pipeline
2020-10-18 17:07:36,258:INFO:Preprocessing pipeline created successfully
2020-10-18 17:07:36,259:INFO:No inverse transformer found
2020-10-18 17:07:36,259:INFO:Creating grid variables
2020-10-18 17:07:36,339:INFO:Creating global containers
2020-10-18 17:07:36,826:INFO:create_model_container: 0
2020-10-18 17:07:36,826:INFO:master_model_container: 0
2020-10-18 17:07:36,827:INFO:display_container: 0
2020-10-18 17:07:36,827:INFO:setup() succesfully completed......................................
2020-10-18 17:14:28,927:INFO:PyCaret Regression Module
2020-10-18 17:14:28,927:INFO:version 2.1.2
2020-10-18 17:14:28,927:INFO:Initializing setup()
2020-10-18 17:14:28,928:INFO:USI: 588d
2020-10-18 17:14:28,928:INFO:setup(data=(406000, 41), target=target, train_size=0.7, sampling=False, sample_estimator=None, categorical_features=None, categorical_imputation=constant, ordinal_features=None,
                    high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, date_features=None, ignore_features=None, normalize=True,
                    normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear,
                    pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05,
                    remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=False, create_clusters=False, cluster_iter=20,
                    polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None,
                    group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, transform_target=False,
                    transform_target_method=box-cox, data_split_shuffle=True, folds_shuffle=False, n_jobs=-1, html=True, session_id=0, log_experiment=False,
                    experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False)
2020-10-18 17:14:28,928:INFO:Checking environment
2020-10-18 17:14:28,928:INFO:python_version: 3.7.6
2020-10-18 17:14:28,928:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 17:14:28,928:INFO:machine: AMD64
2020-10-18 17:14:28,929:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 17:14:28,929:INFO:Memory: svmem(total=16969158656, available=4642381824, percent=72.6, used=12326776832, free=4642381824)
2020-10-18 17:14:28,929:INFO:Physical Core: 4
2020-10-18 17:14:28,929:INFO:Logical Core: 8
2020-10-18 17:14:28,929:INFO:Checking libraries
2020-10-18 17:14:28,929:INFO:pd==1.1.3
2020-10-18 17:14:28,929:INFO:numpy==1.18.1
2020-10-18 17:14:28,930:INFO:sklearn==0.23.2
2020-10-18 17:14:28,961:INFO:xgboost==0.90
2020-10-18 17:14:28,981:INFO:lightgbm==2.3.1
2020-10-18 17:14:29,052:INFO:catboost==0.24.2
2020-10-18 17:14:30,745:INFO:mlflow==1.11.0
2020-10-18 17:14:30,746:INFO:Checking Exceptions
2020-10-18 17:14:30,746:INFO:Preloading libraries
2020-10-18 17:14:30,746:INFO:Preparing display monitor
2020-10-18 17:14:30,759:INFO:Importing libraries
2020-10-18 17:14:31,965:INFO:Declaring global variables
2020-10-18 17:14:31,966:INFO:Copying data for preprocessing
2020-10-18 17:14:32,224:INFO:Declaring preprocessing parameters
2020-10-18 17:14:32,224:INFO:Importing preprocessing module
2020-10-18 17:14:33,072:INFO:Creating preprocessing pipeline
2020-10-18 17:15:02,508:INFO:Preprocessing pipeline created successfully
2020-10-18 17:15:02,508:INFO:No inverse transformer found
2020-10-18 17:15:02,509:INFO:Creating grid variables
2020-10-18 17:15:02,578:INFO:Creating global containers
2020-10-18 17:15:03,045:INFO:create_model_container: 0
2020-10-18 17:15:03,045:INFO:master_model_container: 0
2020-10-18 17:15:03,045:INFO:display_container: 0
2020-10-18 17:15:03,045:INFO:setup() succesfully completed......................................
2020-10-18 17:18:20,309:INFO:PyCaret Supervised Module
2020-10-18 17:18:20,310:INFO:ML Usecase: regression
2020-10-18 17:18:20,310:INFO:version 2.2.0
2020-10-18 17:18:20,310:INFO:Initializing setup()
2020-10-18 17:18:20,310:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 17:18:20,310:INFO:Checking environment
2020-10-18 17:18:20,310:INFO:python_version: 3.7.6
2020-10-18 17:18:20,310:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 17:18:20,310:INFO:machine: AMD64
2020-10-18 17:18:20,310:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 17:18:20,311:INFO:Memory: svmem(total=16969158656, available=8462061568, percent=50.1, used=8507097088, free=8462061568)
2020-10-18 17:18:20,311:INFO:Physical Core: 4
2020-10-18 17:18:20,311:INFO:Logical Core: 8
2020-10-18 17:18:20,311:INFO:Checking libraries
2020-10-18 17:18:20,311:INFO:pd==1.1.3
2020-10-18 17:18:20,311:INFO:numpy==1.18.1
2020-10-18 17:18:20,311:INFO:sklearn==0.23.2
2020-10-18 17:18:21,084:INFO:xgboost==1.2.1
2020-10-18 17:18:21,084:INFO:lightgbm==2.3.1
2020-10-18 17:18:21,103:INFO:catboost==0.24.2
2020-10-18 17:18:22,119:INFO:mlflow==1.11.0
2020-10-18 17:18:22,120:INFO:Checking Exceptions
2020-10-18 17:18:22,120:INFO:Declaring global variables
2020-10-18 17:18:22,120:INFO:USI: 8ff8
2020-10-18 17:18:22,120:INFO:pycaret_globals: {'gpu_param', 'master_model_container', 'prep_pipe', 'transform_target_param', 'exp_name_log', 'imputation_classifier', '_internal_pipeline', 'y', 'display_container', '_all_models_internal', 'imputation_regressor', 'data_before_preprocess', 'y_test', 'stratify_param', '_all_models', 'logging_param', 'X_test', '_gpu_n_jobs_param', '_ml_usecase', 'X_train', 'X', 'transform_target_method_param', 'pycaret_globals', 'fold_param', 'create_model_container', 'log_plots_param', 'USI', 'fix_imbalance_method_param', 'fold_shuffle_param', 'y_train', 'iterative_imputation_iters_param', 'fold_generator', 'experiment__', 'seed', '_all_metrics', 'n_jobs_param', 'html_param', 'fold_groups_param', 'fix_imbalance_param', 'target_param'}
2020-10-18 17:18:22,120:INFO:Preparing display monitor
2020-10-18 17:18:22,120:INFO:Importing libraries
2020-10-18 17:18:22,120:INFO:Copying data for preprocessing
2020-10-18 17:18:22,360:INFO:Declaring preprocessing parameters
2020-10-18 17:18:22,691:INFO:Creating preprocessing pipeline
2020-10-18 17:18:25,419:INFO:Preprocessing pipeline created successfully
2020-10-18 17:18:25,419:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-18 17:18:25,419:INFO:Creating global containers
2020-10-18 17:18:25,420:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-18 17:18:42,528:INFO:Creating grid variables
2020-10-18 17:18:42,590:INFO:create_model_container: 0
2020-10-18 17:18:42,590:INFO:master_model_container: 0
2020-10-18 17:18:42,590:INFO:display_container: 0
2020-10-18 17:18:42,597:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-18 17:18:42,597:INFO:setup() succesfully completed......................................
2020-10-18 17:20:49,117:INFO:Initializing compare_models()
2020-10-18 17:20:49,118:INFO:compare_models(include=['dt', 'rf', 'xgboost', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-18 17:20:49,118:INFO:Checking exceptions
2020-10-18 17:20:49,118:INFO:Preparing display monitor
2020-10-18 17:20:49,119:INFO:Preparing display monitor
2020-10-18 17:20:49,179:INFO:Initializing Decision Tree Regressor
2020-10-18 17:20:49,179:INFO:Total runtime is 0.0 minutes
2020-10-18 17:20:49,201:INFO:SubProcess create_model() called ==================================
2020-10-18 17:20:49,201:INFO:Initializing create_model()
2020-10-18 17:20:49,202:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002291DF27D08>, kwargs={})
2020-10-18 17:20:49,202:INFO:Checking exceptions
2020-10-18 17:20:49,202:INFO:Importing libraries
2020-10-18 17:20:49,203:INFO:Copying training dataset
2020-10-18 17:20:49,217:INFO:Defining folds
2020-10-18 17:20:49,217:INFO:Declaring metric variables
2020-10-18 17:20:49,235:INFO:Importing untrained model
2020-10-18 17:20:49,252:INFO:Decision Tree Regressor Imported succesfully
2020-10-18 17:20:49,285:INFO:Starting cross validation
2020-10-18 17:20:49,295:INFO:Cross validating with n_jobs=-1
2020-10-18 17:21:48,050:INFO:PyCaret Supervised Module
2020-10-18 17:21:48,050:INFO:ML Usecase: regression
2020-10-18 17:21:48,051:INFO:version 2.2.0
2020-10-18 17:21:48,051:INFO:Initializing setup()
2020-10-18 17:21:48,051:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 17:21:48,051:INFO:Checking environment
2020-10-18 17:21:48,051:INFO:python_version: 3.7.6
2020-10-18 17:21:48,051:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 17:21:48,051:INFO:machine: AMD64
2020-10-18 17:21:48,052:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 17:21:48,052:INFO:Memory: svmem(total=16969158656, available=7181828096, percent=57.7, used=9787330560, free=7181828096)
2020-10-18 17:21:48,052:INFO:Physical Core: 4
2020-10-18 17:21:48,052:INFO:Logical Core: 8
2020-10-18 17:21:48,053:INFO:Checking libraries
2020-10-18 17:21:48,053:INFO:pd==1.1.3
2020-10-18 17:21:48,053:INFO:numpy==1.18.1
2020-10-18 17:21:48,053:INFO:sklearn==0.23.2
2020-10-18 17:21:48,680:INFO:xgboost==1.2.1
2020-10-18 17:21:48,680:INFO:lightgbm==2.3.1
2020-10-18 17:21:48,699:INFO:catboost==0.24.2
2020-10-18 17:21:49,625:INFO:mlflow==1.11.0
2020-10-18 17:21:49,625:INFO:Checking Exceptions
2020-10-18 17:21:49,626:INFO:Declaring global variables
2020-10-18 17:21:49,626:INFO:USI: 2a1c
2020-10-18 17:21:49,626:INFO:pycaret_globals: {'fold_param', '_all_models_internal', 'fold_groups_param', 'n_jobs_param', 'target_param', 'create_model_container', '_all_models', 'experiment__', 'transform_target_param', 'X', '_all_metrics', 'y', 'display_container', 'transform_target_method_param', 'data_before_preprocess', 'gpu_param', 'imputation_classifier', 'y_train', 'fix_imbalance_method_param', 'X_train', 'stratify_param', '_gpu_n_jobs_param', 'logging_param', 'X_test', '_internal_pipeline', 'fold_shuffle_param', 'y_test', 'fold_generator', 'USI', 'exp_name_log', '_ml_usecase', 'html_param', 'seed', 'fix_imbalance_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'iterative_imputation_iters_param', 'master_model_container', 'pycaret_globals'}
2020-10-18 17:21:49,626:INFO:Preparing display monitor
2020-10-18 17:21:49,626:INFO:Importing libraries
2020-10-18 17:21:49,626:INFO:Copying data for preprocessing
2020-10-18 17:21:49,841:INFO:Declaring preprocessing parameters
2020-10-18 17:21:50,134:INFO:Creating preprocessing pipeline
2020-10-18 17:21:52,753:INFO:Preprocessing pipeline created successfully
2020-10-18 17:21:52,753:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-18 17:21:52,753:INFO:Creating global containers
2020-10-18 17:21:52,756:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-18 17:22:09,001:INFO:Creating grid variables
2020-10-18 17:22:09,063:INFO:create_model_container: 0
2020-10-18 17:22:09,063:INFO:master_model_container: 0
2020-10-18 17:22:09,063:INFO:display_container: 0
2020-10-18 17:22:09,072:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-18 17:22:09,073:INFO:setup() succesfully completed......................................
2020-10-18 17:22:10,439:INFO:Initializing compare_models()
2020-10-18 17:22:10,439:INFO:compare_models(include=['lr', 'svm', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-18 17:22:10,439:INFO:Checking exceptions
2020-10-18 17:22:10,439:INFO:Preparing display monitor
2020-10-18 17:22:10,440:INFO:Preparing display monitor
2020-10-18 17:22:10,513:INFO:Initializing Linear Regression
2020-10-18 17:22:10,514:INFO:Total runtime is 1.6645590464274088e-05 minutes
2020-10-18 17:22:10,533:INFO:SubProcess create_model() called ==================================
2020-10-18 17:22:10,534:INFO:Initializing create_model()
2020-10-18 17:22:10,535:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0B5EC8388>, kwargs={})
2020-10-18 17:22:10,535:INFO:Checking exceptions
2020-10-18 17:22:10,536:INFO:Importing libraries
2020-10-18 17:22:10,537:INFO:Copying training dataset
2020-10-18 17:22:10,553:INFO:Defining folds
2020-10-18 17:22:10,553:INFO:Declaring metric variables
2020-10-18 17:22:10,574:INFO:Importing untrained model
2020-10-18 17:22:10,589:INFO:Linear Regression Imported succesfully
2020-10-18 17:22:10,616:INFO:Starting cross validation
2020-10-18 17:22:10,625:INFO:Cross validating with n_jobs=-1
2020-10-18 17:22:21,199:INFO:Calculating mean and std
2020-10-18 17:22:21,200:INFO:Creating metrics dataframe
2020-10-18 17:22:21,205:INFO:Uploading results into container
2020-10-18 17:22:21,206:INFO:Uploading model into container now
2020-10-18 17:22:21,206:INFO:create_model_container: 1
2020-10-18 17:22:21,206:INFO:master_model_container: 1
2020-10-18 17:22:21,206:INFO:display_container: 1
2020-10-18 17:22:21,207:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-18 17:22:21,207:INFO:create_model() succesfully completed......................................
2020-10-18 17:22:21,334:INFO:SubProcess create_model() end ==================================
2020-10-18 17:22:21,335:INFO:Creating metrics dataframe
2020-10-18 17:22:21,369:INFO:Initializing Support Vector Regression
2020-10-18 17:22:21,369:INFO:Total runtime is 0.18094967206319174 minutes
2020-10-18 17:22:21,384:INFO:SubProcess create_model() called ==================================
2020-10-18 17:22:21,384:INFO:Initializing create_model()
2020-10-18 17:22:21,384:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0B5EC8388>, kwargs={})
2020-10-18 17:22:21,384:INFO:Checking exceptions
2020-10-18 17:22:21,384:INFO:Importing libraries
2020-10-18 17:22:21,385:INFO:Copying training dataset
2020-10-18 17:22:21,394:INFO:Defining folds
2020-10-18 17:22:21,395:INFO:Declaring metric variables
2020-10-18 17:22:21,410:INFO:Importing untrained model
2020-10-18 17:22:21,432:INFO:Support Vector Regression Imported succesfully
2020-10-18 17:22:21,467:INFO:Starting cross validation
2020-10-18 17:22:21,468:INFO:Cross validating with n_jobs=-1
2020-10-18 17:22:30,310:INFO:Calculating mean and std
2020-10-18 17:22:30,312:INFO:Creating metrics dataframe
2020-10-18 17:22:30,320:INFO:Uploading results into container
2020-10-18 17:22:30,320:INFO:Uploading model into container now
2020-10-18 17:22:30,320:INFO:create_model_container: 2
2020-10-18 17:22:30,320:INFO:master_model_container: 2
2020-10-18 17:22:30,320:INFO:display_container: 1
2020-10-18 17:22:30,321:INFO:SVR(C=1.0, cache_size=200, coef0=0.0, degree=3, epsilon=0.1, gamma='scale',
    kernel='rbf', max_iter=-1, shrinking=True, tol=0.001, verbose=False)
2020-10-18 17:22:30,322:INFO:create_model() succesfully completed......................................
2020-10-18 17:22:30,426:INFO:SubProcess create_model() end ==================================
2020-10-18 17:22:30,426:INFO:Creating metrics dataframe
2020-10-18 17:22:30,447:INFO:Initializing K Neighbors Regressor
2020-10-18 17:22:30,447:INFO:Total runtime is 0.33223719596862794 minutes
2020-10-18 17:22:30,461:INFO:SubProcess create_model() called ==================================
2020-10-18 17:22:30,461:INFO:Initializing create_model()
2020-10-18 17:22:30,461:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0B5EC8388>, kwargs={})
2020-10-18 17:22:30,462:INFO:Checking exceptions
2020-10-18 17:22:30,462:INFO:Importing libraries
2020-10-18 17:22:30,462:INFO:Copying training dataset
2020-10-18 17:22:30,473:INFO:Defining folds
2020-10-18 17:22:30,473:INFO:Declaring metric variables
2020-10-18 17:22:30,487:INFO:Importing untrained model
2020-10-18 17:22:30,505:INFO:K Neighbors Regressor Imported succesfully
2020-10-18 17:22:30,539:INFO:Starting cross validation
2020-10-18 17:22:30,540:INFO:Cross validating with n_jobs=-1
2020-10-18 17:22:54,379:INFO:Calculating mean and std
2020-10-18 17:22:54,380:INFO:Creating metrics dataframe
2020-10-18 17:22:54,388:INFO:Uploading results into container
2020-10-18 17:22:54,388:INFO:Uploading model into container now
2020-10-18 17:22:54,388:INFO:create_model_container: 3
2020-10-18 17:22:54,388:INFO:master_model_container: 3
2020-10-18 17:22:54,388:INFO:display_container: 1
2020-10-18 17:22:54,389:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-18 17:22:54,389:INFO:create_model() succesfully completed......................................
2020-10-18 17:22:54,507:INFO:SubProcess create_model() end ==================================
2020-10-18 17:22:54,508:INFO:Creating metrics dataframe
2020-10-18 17:22:54,535:INFO:Initializing Decision Tree Regressor
2020-10-18 17:22:54,535:INFO:Total runtime is 0.7337140878041586 minutes
2020-10-18 17:22:54,550:INFO:SubProcess create_model() called ==================================
2020-10-18 17:22:54,551:INFO:Initializing create_model()
2020-10-18 17:22:54,551:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0B5EC8388>, kwargs={})
2020-10-18 17:22:54,551:INFO:Checking exceptions
2020-10-18 17:22:54,551:INFO:Importing libraries
2020-10-18 17:22:54,552:INFO:Copying training dataset
2020-10-18 17:22:54,561:INFO:Defining folds
2020-10-18 17:22:54,561:INFO:Declaring metric variables
2020-10-18 17:22:54,575:INFO:Importing untrained model
2020-10-18 17:22:54,594:INFO:Decision Tree Regressor Imported succesfully
2020-10-18 17:22:54,629:INFO:Starting cross validation
2020-10-18 17:22:54,630:INFO:Cross validating with n_jobs=-1
2020-10-18 17:23:28,375:INFO:Calculating mean and std
2020-10-18 17:23:28,377:INFO:Creating metrics dataframe
2020-10-18 17:23:28,382:INFO:Uploading results into container
2020-10-18 17:23:28,382:INFO:Uploading model into container now
2020-10-18 17:23:28,382:INFO:create_model_container: 4
2020-10-18 17:23:28,382:INFO:master_model_container: 4
2020-10-18 17:23:28,382:INFO:display_container: 1
2020-10-18 17:23:28,383:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-18 17:23:28,383:INFO:create_model() succesfully completed......................................
2020-10-18 17:23:28,480:INFO:SubProcess create_model() end ==================================
2020-10-18 17:23:28,480:INFO:Creating metrics dataframe
2020-10-18 17:23:28,498:INFO:Initializing Random Forest Regressor
2020-10-18 17:23:28,499:INFO:Total runtime is 1.2997677485148111 minutes
2020-10-18 17:23:28,509:INFO:SubProcess create_model() called ==================================
2020-10-18 17:23:28,510:INFO:Initializing create_model()
2020-10-18 17:23:28,510:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0B5EC8388>, kwargs={})
2020-10-18 17:23:28,510:INFO:Checking exceptions
2020-10-18 17:23:28,510:INFO:Importing libraries
2020-10-18 17:23:28,510:INFO:Copying training dataset
2020-10-18 17:23:28,519:INFO:Defining folds
2020-10-18 17:23:28,520:INFO:Declaring metric variables
2020-10-18 17:23:28,528:INFO:Importing untrained model
2020-10-18 17:23:28,541:INFO:Random Forest Regressor Imported succesfully
2020-10-18 17:23:28,569:INFO:Starting cross validation
2020-10-18 17:23:28,569:INFO:Cross validating with n_jobs=-1
2020-10-18 17:46:24,440:INFO:Calculating mean and std
2020-10-18 17:46:24,478:INFO:Creating metrics dataframe
2020-10-18 17:46:24,516:INFO:Uploading results into container
2020-10-18 17:46:24,517:INFO:Uploading model into container now
2020-10-18 17:46:24,518:INFO:create_model_container: 5
2020-10-18 17:46:24,518:INFO:master_model_container: 5
2020-10-18 17:46:24,519:INFO:display_container: 1
2020-10-18 17:46:24,522:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-18 17:46:24,522:INFO:create_model() succesfully completed......................................
2020-10-18 17:46:25,270:INFO:SubProcess create_model() end ==================================
2020-10-18 17:46:25,270:INFO:Creating metrics dataframe
2020-10-18 17:46:25,313:INFO:Initializing Extra Trees Regressor
2020-10-18 17:46:25,313:INFO:Total runtime is 24.24667007525762 minutes
2020-10-18 17:46:25,325:INFO:SubProcess create_model() called ==================================
2020-10-18 17:46:25,326:INFO:Initializing create_model()
2020-10-18 17:46:25,326:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0B5EC8388>, kwargs={})
2020-10-18 17:46:25,326:INFO:Checking exceptions
2020-10-18 17:46:25,326:INFO:Importing libraries
2020-10-18 17:46:25,327:INFO:Copying training dataset
2020-10-18 17:46:25,418:INFO:Defining folds
2020-10-18 17:46:25,418:INFO:Declaring metric variables
2020-10-18 17:46:25,431:INFO:Importing untrained model
2020-10-18 17:46:25,448:INFO:Extra Trees Regressor Imported succesfully
2020-10-18 17:46:25,486:INFO:Starting cross validation
2020-10-18 17:46:25,487:INFO:Cross validating with n_jobs=-1
2020-10-18 18:00:06,768:INFO:Calculating mean and std
2020-10-18 18:00:06,877:INFO:Creating metrics dataframe
2020-10-18 18:00:06,985:INFO:Uploading results into container
2020-10-18 18:00:06,985:INFO:Uploading model into container now
2020-10-18 18:00:06,986:INFO:create_model_container: 6
2020-10-18 18:00:06,986:INFO:master_model_container: 6
2020-10-18 18:00:06,986:INFO:display_container: 1
2020-10-18 18:00:06,995:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-18 18:00:06,995:INFO:create_model() succesfully completed......................................
2020-10-18 18:00:08,247:INFO:SubProcess create_model() end ==================================
2020-10-18 18:00:08,247:INFO:Creating metrics dataframe
2020-10-18 18:00:08,294:INFO:Initializing MLP Regressor
2020-10-18 18:00:08,294:INFO:Total runtime is 37.96303227345149 minutes
2020-10-18 18:00:08,309:INFO:SubProcess create_model() called ==================================
2020-10-18 18:00:08,310:INFO:Initializing create_model()
2020-10-18 18:00:08,310:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0B5EC8388>, kwargs={})
2020-10-18 18:00:08,310:INFO:Checking exceptions
2020-10-18 18:00:08,310:INFO:Importing libraries
2020-10-18 18:00:08,310:INFO:Copying training dataset
2020-10-18 18:00:08,468:INFO:Defining folds
2020-10-18 18:00:08,468:INFO:Declaring metric variables
2020-10-18 18:00:08,478:INFO:Importing untrained model
2020-10-18 18:00:08,488:INFO:MLP Regressor Imported succesfully
2020-10-18 18:00:08,515:INFO:Starting cross validation
2020-10-18 18:00:08,515:INFO:Cross validating with n_jobs=-1
2020-10-18 18:01:35,879:INFO:Calculating mean and std
2020-10-18 18:01:35,881:INFO:Creating metrics dataframe
2020-10-18 18:01:35,886:INFO:Uploading results into container
2020-10-18 18:01:35,887:INFO:Uploading model into container now
2020-10-18 18:01:35,887:INFO:create_model_container: 7
2020-10-18 18:01:35,887:INFO:master_model_container: 7
2020-10-18 18:01:35,887:INFO:display_container: 1
2020-10-18 18:01:35,890:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-18 18:01:35,890:INFO:create_model() succesfully completed......................................
2020-10-18 18:01:36,003:INFO:SubProcess create_model() end ==================================
2020-10-18 18:01:36,004:INFO:Creating metrics dataframe
2020-10-18 18:01:36,036:INFO:Initializing Light Gradient Boosting Machine
2020-10-18 18:01:36,036:INFO:Total runtime is 39.42539127667745 minutes
2020-10-18 18:01:36,049:INFO:SubProcess create_model() called ==================================
2020-10-18 18:01:36,049:INFO:Initializing create_model()
2020-10-18 18:01:36,049:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0B5EC8388>, kwargs={})
2020-10-18 18:01:36,050:INFO:Checking exceptions
2020-10-18 18:01:36,050:INFO:Importing libraries
2020-10-18 18:01:36,050:INFO:Copying training dataset
2020-10-18 18:01:36,061:INFO:Defining folds
2020-10-18 18:01:36,061:INFO:Declaring metric variables
2020-10-18 18:01:36,070:INFO:Importing untrained model
2020-10-18 18:01:36,080:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-18 18:01:36,102:INFO:Starting cross validation
2020-10-18 18:01:36,102:INFO:Cross validating with n_jobs=-1
2020-10-18 18:01:52,715:INFO:Calculating mean and std
2020-10-18 18:01:52,716:INFO:Creating metrics dataframe
2020-10-18 18:01:52,722:INFO:Uploading results into container
2020-10-18 18:01:52,723:INFO:Uploading model into container now
2020-10-18 18:01:52,723:INFO:create_model_container: 8
2020-10-18 18:01:52,723:INFO:master_model_container: 8
2020-10-18 18:01:52,723:INFO:display_container: 1
2020-10-18 18:01:52,724:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-18 18:01:52,724:INFO:create_model() succesfully completed......................................
2020-10-18 18:01:52,841:INFO:SubProcess create_model() end ==================================
2020-10-18 18:01:52,842:INFO:Creating metrics dataframe
2020-10-18 18:01:52,867:INFO:Initializing CatBoost Regressor
2020-10-18 18:01:52,867:INFO:Total runtime is 39.70590875148773 minutes
2020-10-18 18:01:52,880:INFO:SubProcess create_model() called ==================================
2020-10-18 18:01:52,881:INFO:Initializing create_model()
2020-10-18 18:01:52,881:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0B5EC8388>, kwargs={})
2020-10-18 18:01:52,881:INFO:Checking exceptions
2020-10-18 18:01:52,881:INFO:Importing libraries
2020-10-18 18:01:52,881:INFO:Copying training dataset
2020-10-18 18:01:52,892:INFO:Defining folds
2020-10-18 18:01:52,892:INFO:Declaring metric variables
2020-10-18 18:01:52,904:INFO:Importing untrained model
2020-10-18 18:01:52,922:INFO:CatBoost Regressor Imported succesfully
2020-10-18 18:01:52,948:INFO:Starting cross validation
2020-10-18 18:01:52,949:INFO:Cross validating with n_jobs=-1
2020-10-18 18:06:51,544:INFO:Calculating mean and std
2020-10-18 18:06:51,545:INFO:Creating metrics dataframe
2020-10-18 18:06:51,553:INFO:Uploading results into container
2020-10-18 18:06:51,553:INFO:Uploading model into container now
2020-10-18 18:06:51,553:INFO:create_model_container: 9
2020-10-18 18:06:51,553:INFO:master_model_container: 9
2020-10-18 18:06:51,554:INFO:display_container: 1
2020-10-18 18:06:51,554:INFO:<catboost.core.CatBoostRegressor object at 0x000001B0B5EB9DC8>
2020-10-18 18:06:51,554:INFO:create_model() succesfully completed......................................
2020-10-18 18:06:51,674:INFO:SubProcess create_model() end ==================================
2020-10-18 18:06:51,674:INFO:Creating metrics dataframe
2020-10-18 18:06:51,735:INFO:Initializing create_model()
2020-10-18 18:06:51,735:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-18 18:06:51,735:INFO:Checking exceptions
2020-10-18 18:06:51,736:INFO:Importing libraries
2020-10-18 18:06:51,736:INFO:Copying training dataset
2020-10-18 18:06:51,747:INFO:Defining folds
2020-10-18 18:06:51,748:INFO:Declaring metric variables
2020-10-18 18:06:51,748:INFO:Importing untrained model
2020-10-18 18:06:51,748:INFO:Declaring custom model
2020-10-18 18:06:51,749:INFO:Extra Trees Regressor Imported succesfully
2020-10-18 18:06:51,749:INFO:Cross validation set to False
2020-10-18 18:06:51,749:INFO:Fitting Model
2020-10-18 18:07:54,409:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-18 18:07:54,409:INFO:create_models() succesfully completed......................................
2020-10-18 18:07:54,576:INFO:create_model_container: 9
2020-10-18 18:07:54,577:INFO:master_model_container: 9
2020-10-18 18:07:54,577:INFO:display_container: 1
2020-10-18 18:07:54,577:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-18 18:07:54,577:INFO:compare_models() succesfully completed......................................
2020-10-18 18:08:18,253:INFO:PyCaret Supervised Module
2020-10-18 18:08:18,253:INFO:ML Usecase: regression
2020-10-18 18:08:18,253:INFO:version 2.2.0
2020-10-18 18:08:18,253:INFO:Initializing setup()
2020-10-18 18:08:18,253:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 18:08:18,253:INFO:Checking environment
2020-10-18 18:08:18,253:INFO:python_version: 3.7.6
2020-10-18 18:08:18,253:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 18:08:18,254:INFO:machine: AMD64
2020-10-18 18:08:18,254:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 18:08:18,254:INFO:Memory: svmem(total=16969158656, available=8142938112, percent=52.0, used=8826220544, free=8142938112)
2020-10-18 18:08:18,254:INFO:Physical Core: 4
2020-10-18 18:08:18,254:INFO:Logical Core: 8
2020-10-18 18:08:18,255:INFO:Checking libraries
2020-10-18 18:08:18,255:INFO:pd==1.1.3
2020-10-18 18:08:18,255:INFO:numpy==1.18.1
2020-10-18 18:08:18,255:INFO:sklearn==0.23.2
2020-10-18 18:08:18,255:INFO:xgboost==1.2.1
2020-10-18 18:08:18,255:INFO:lightgbm==2.3.1
2020-10-18 18:08:18,255:INFO:catboost==0.24.2
2020-10-18 18:08:18,255:INFO:mlflow==1.11.0
2020-10-18 18:08:18,255:INFO:Checking Exceptions
2020-10-18 18:08:18,256:INFO:Declaring global variables
2020-10-18 18:08:18,256:INFO:USI: 75e0
2020-10-18 18:08:18,256:INFO:pycaret_globals: {'fold_param', '_all_models_internal', 'fold_groups_param', 'n_jobs_param', 'target_param', 'create_model_container', '_all_models', 'experiment__', 'transform_target_param', 'X', '_all_metrics', 'y', 'display_container', 'transform_target_method_param', 'data_before_preprocess', 'gpu_param', 'imputation_classifier', 'y_train', 'fix_imbalance_method_param', 'X_train', 'stratify_param', '_gpu_n_jobs_param', 'logging_param', 'X_test', '_internal_pipeline', 'fold_shuffle_param', 'y_test', 'fold_generator', 'USI', 'exp_name_log', '_ml_usecase', 'html_param', 'seed', 'fix_imbalance_param', 'prep_pipe', 'log_plots_param', 'imputation_regressor', 'iterative_imputation_iters_param', 'master_model_container', 'pycaret_globals'}
2020-10-18 18:08:18,256:INFO:Preparing display monitor
2020-10-18 18:08:18,256:INFO:Importing libraries
2020-10-18 18:08:18,256:INFO:Copying data for preprocessing
2020-10-18 18:08:18,492:INFO:Declaring preprocessing parameters
2020-10-18 18:08:18,793:INFO:Creating preprocessing pipeline
2020-10-18 18:08:21,621:INFO:Preprocessing pipeline created successfully
2020-10-18 18:08:21,622:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-18 18:08:21,622:INFO:Creating global containers
2020-10-18 18:08:21,622:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-18 18:08:39,165:INFO:Creating grid variables
2020-10-18 18:08:39,241:INFO:create_model_container: 0
2020-10-18 18:08:39,241:INFO:master_model_container: 0
2020-10-18 18:08:39,241:INFO:display_container: 0
2020-10-18 18:08:39,247:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-18 18:08:39,247:INFO:setup() succesfully completed......................................
2020-10-18 18:08:39,410:INFO:Initializing compare_models()
2020-10-18 18:08:39,410:INFO:compare_models(include=['lr', 'svm', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-18 18:08:39,410:INFO:Checking exceptions
2020-10-18 18:08:39,410:INFO:Preparing display monitor
2020-10-18 18:08:39,410:INFO:Preparing display monitor
2020-10-18 18:08:39,455:INFO:Initializing Linear Regression
2020-10-18 18:08:39,455:INFO:Total runtime is 0.0 minutes
2020-10-18 18:08:39,475:INFO:SubProcess create_model() called ==================================
2020-10-18 18:08:39,475:INFO:Initializing create_model()
2020-10-18 18:08:39,475:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0C85BF908>, kwargs={})
2020-10-18 18:08:39,476:INFO:Checking exceptions
2020-10-18 18:08:39,476:INFO:Importing libraries
2020-10-18 18:08:39,476:INFO:Copying training dataset
2020-10-18 18:08:39,486:INFO:Defining folds
2020-10-18 18:08:39,486:INFO:Declaring metric variables
2020-10-18 18:08:39,497:INFO:Importing untrained model
2020-10-18 18:08:39,514:INFO:Linear Regression Imported succesfully
2020-10-18 18:08:39,543:INFO:Starting cross validation
2020-10-18 18:08:39,544:INFO:Cross validating with n_jobs=-1
2020-10-18 18:08:40,437:INFO:Calculating mean and std
2020-10-18 18:08:40,439:INFO:Creating metrics dataframe
2020-10-18 18:08:40,445:INFO:Uploading results into container
2020-10-18 18:08:40,445:INFO:Uploading model into container now
2020-10-18 18:08:40,445:INFO:create_model_container: 1
2020-10-18 18:08:40,445:INFO:master_model_container: 1
2020-10-18 18:08:40,445:INFO:display_container: 1
2020-10-18 18:08:40,446:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-18 18:08:40,446:INFO:create_model() succesfully completed......................................
2020-10-18 18:08:40,569:INFO:SubProcess create_model() end ==================================
2020-10-18 18:08:40,569:INFO:Creating metrics dataframe
2020-10-18 18:08:40,602:INFO:Initializing Support Vector Regression
2020-10-18 18:08:40,602:INFO:Total runtime is 0.01911557118097941 minutes
2020-10-18 18:08:40,617:INFO:SubProcess create_model() called ==================================
2020-10-18 18:08:40,617:INFO:Initializing create_model()
2020-10-18 18:08:40,617:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B0C85BF908>, kwargs={})
2020-10-18 18:08:40,617:INFO:Checking exceptions
2020-10-18 18:08:40,618:INFO:Importing libraries
2020-10-18 18:08:40,618:INFO:Copying training dataset
2020-10-18 18:08:40,628:INFO:Defining folds
2020-10-18 18:08:40,628:INFO:Declaring metric variables
2020-10-18 18:08:40,639:INFO:Importing untrained model
2020-10-18 18:08:40,652:INFO:Support Vector Regression Imported succesfully
2020-10-18 18:08:40,679:INFO:Starting cross validation
2020-10-18 18:08:40,680:INFO:Cross validating with n_jobs=-1
2020-10-18 19:22:07,848:INFO:PyCaret Supervised Module
2020-10-18 19:22:07,849:INFO:ML Usecase: regression
2020-10-18 19:22:07,849:INFO:version 2.2.0
2020-10-18 19:22:07,849:INFO:Initializing setup()
2020-10-18 19:22:07,849:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 19:22:07,849:INFO:Checking environment
2020-10-18 19:22:07,849:INFO:python_version: 3.7.6
2020-10-18 19:22:07,849:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 19:22:07,850:INFO:machine: AMD64
2020-10-18 19:22:07,850:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 19:22:07,850:INFO:Memory: svmem(total=16969158656, available=7911374848, percent=53.4, used=9057783808, free=7911374848)
2020-10-18 19:22:07,850:INFO:Physical Core: 4
2020-10-18 19:22:07,850:INFO:Logical Core: 8
2020-10-18 19:22:07,850:INFO:Checking libraries
2020-10-18 19:22:07,850:INFO:pd==1.1.3
2020-10-18 19:22:07,851:INFO:numpy==1.18.1
2020-10-18 19:22:07,851:INFO:sklearn==0.23.2
2020-10-18 19:22:10,881:INFO:xgboost==1.2.1
2020-10-18 19:22:10,882:INFO:lightgbm==2.3.1
2020-10-18 19:22:11,051:INFO:catboost==0.24.2
2020-10-18 19:22:20,316:INFO:mlflow==1.11.0
2020-10-18 19:22:20,317:INFO:Checking Exceptions
2020-10-18 19:22:20,317:INFO:Declaring global variables
2020-10-18 19:22:20,317:INFO:USI: 2a23
2020-10-18 19:22:20,318:INFO:pycaret_globals: {'html_param', 'fold_groups_param', 'log_plots_param', 'X_train', 'y', 'y_train', 'transform_target_method_param', '_ml_usecase', 'imputation_regressor', 'y_test', '_all_metrics', '_internal_pipeline', 'master_model_container', '_gpu_n_jobs_param', 'exp_name_log', 'display_container', 'imputation_classifier', 'seed', 'stratify_param', 'transform_target_param', 'fix_imbalance_method_param', 'fold_shuffle_param', 'fold_param', 'X', 'fix_imbalance_param', 'USI', 'gpu_param', '_all_models_internal', 'target_param', 'n_jobs_param', 'create_model_container', 'X_test', 'iterative_imputation_iters_param', 'fold_generator', 'prep_pipe', '_all_models', 'experiment__', 'logging_param', 'pycaret_globals', 'data_before_preprocess'}
2020-10-18 19:22:20,318:INFO:Preparing display monitor
2020-10-18 19:22:20,318:INFO:Importing libraries
2020-10-18 19:22:20,318:INFO:Copying data for preprocessing
2020-10-18 19:22:21,061:INFO:Declaring preprocessing parameters
2020-10-18 19:22:22,029:INFO:Creating preprocessing pipeline
2020-10-18 19:22:31,238:INFO:Preprocessing pipeline created successfully
2020-10-18 19:22:31,238:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-18 19:22:31,239:INFO:Creating global containers
2020-10-18 19:22:31,277:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-18 19:23:17,916:INFO:Creating grid variables
2020-10-18 19:23:18,024:INFO:create_model_container: 0
2020-10-18 19:23:18,024:INFO:master_model_container: 0
2020-10-18 19:23:18,024:INFO:display_container: 0
2020-10-18 19:23:18,035:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-18 19:23:18,035:INFO:setup() succesfully completed......................................
2020-10-18 19:23:18,242:INFO:Initializing compare_models()
2020-10-18 19:23:18,247:INFO:compare_models(include=['lr', 'svm', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-18 19:23:18,247:INFO:Checking exceptions
2020-10-18 19:23:18,247:INFO:Preparing display monitor
2020-10-18 19:23:18,248:INFO:Preparing display monitor
2020-10-18 19:23:18,415:INFO:Initializing Linear Regression
2020-10-18 19:23:18,415:INFO:Total runtime is 0.0 minutes
2020-10-18 19:23:18,431:INFO:SubProcess create_model() called ==================================
2020-10-18 19:23:18,431:INFO:Initializing create_model()
2020-10-18 19:23:18,431:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002214EC457C8>, kwargs={})
2020-10-18 19:23:18,432:INFO:Checking exceptions
2020-10-18 19:23:18,432:INFO:Importing libraries
2020-10-18 19:23:18,432:INFO:Copying training dataset
2020-10-18 19:23:18,446:INFO:Defining folds
2020-10-18 19:23:18,446:INFO:Declaring metric variables
2020-10-18 19:23:18,461:INFO:Importing untrained model
2020-10-18 19:23:18,476:INFO:Linear Regression Imported succesfully
2020-10-18 19:23:18,505:INFO:Starting cross validation
2020-10-18 19:23:18,522:INFO:Cross validating with n_jobs=-1
2020-10-18 19:24:09,631:INFO:Calculating mean and std
2020-10-18 19:24:09,634:INFO:Creating metrics dataframe
2020-10-18 19:24:09,642:INFO:Uploading results into container
2020-10-18 19:24:09,642:INFO:Uploading model into container now
2020-10-18 19:24:09,643:INFO:create_model_container: 1
2020-10-18 19:24:09,643:INFO:master_model_container: 1
2020-10-18 19:24:09,643:INFO:display_container: 1
2020-10-18 19:24:09,643:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-18 19:24:09,643:INFO:create_model() succesfully completed......................................
2020-10-18 19:24:09,847:INFO:SubProcess create_model() end ==================================
2020-10-18 19:24:09,847:INFO:Creating metrics dataframe
2020-10-18 19:24:09,903:INFO:Initializing Support Vector Regression
2020-10-18 19:24:09,904:INFO:Total runtime is 0.8581396023432414 minutes
2020-10-18 19:24:09,935:INFO:SubProcess create_model() called ==================================
2020-10-18 19:24:09,935:INFO:Initializing create_model()
2020-10-18 19:24:09,935:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002214EC457C8>, kwargs={})
2020-10-18 19:24:09,936:INFO:Checking exceptions
2020-10-18 19:24:09,936:INFO:Importing libraries
2020-10-18 19:24:09,936:INFO:Copying training dataset
2020-10-18 19:24:09,950:INFO:Defining folds
2020-10-18 19:24:09,950:INFO:Declaring metric variables
2020-10-18 19:24:09,966:INFO:Importing untrained model
2020-10-18 19:24:09,981:INFO:Support Vector Regression Imported succesfully
2020-10-18 19:24:10,011:INFO:Starting cross validation
2020-10-18 19:24:10,012:INFO:Cross validating with n_jobs=-1
2020-10-18 22:18:16,920:INFO:PyCaret Supervised Module
2020-10-18 22:18:16,921:INFO:ML Usecase: regression
2020-10-18 22:18:16,921:INFO:version 2.2.0
2020-10-18 22:18:16,921:INFO:Initializing setup()
2020-10-18 22:18:16,921:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 22:18:16,921:INFO:Checking environment
2020-10-18 22:18:16,921:INFO:python_version: 3.7.6
2020-10-18 22:18:16,921:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 22:18:16,921:INFO:machine: AMD64
2020-10-18 22:18:16,922:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 22:18:16,922:INFO:Memory: svmem(total=16969158656, available=5541089280, percent=67.3, used=11428069376, free=5541089280)
2020-10-18 22:18:16,922:INFO:Physical Core: 4
2020-10-18 22:18:16,922:INFO:Logical Core: 8
2020-10-18 22:18:16,922:INFO:Checking libraries
2020-10-18 22:18:16,922:INFO:pd==1.1.3
2020-10-18 22:18:16,922:INFO:numpy==1.18.1
2020-10-18 22:18:16,922:INFO:sklearn==0.23.2
2020-10-18 22:18:19,731:INFO:xgboost==1.2.1
2020-10-18 22:18:19,731:INFO:lightgbm==2.3.1
2020-10-18 22:18:19,750:INFO:catboost==0.24.2
2020-10-18 22:18:29,919:INFO:mlflow==1.11.0
2020-10-18 22:18:29,920:INFO:Checking Exceptions
2020-10-18 22:18:29,920:INFO:Declaring global variables
2020-10-18 22:18:29,920:INFO:USI: e9ed
2020-10-18 22:18:29,920:INFO:pycaret_globals: {'fix_imbalance_method_param', 'master_model_container', 'transform_target_method_param', 'exp_name_log', '_all_models', 'prep_pipe', 'imputation_classifier', 'y_train', 'USI', 'create_model_container', 'gpu_param', 'fold_param', 'iterative_imputation_iters_param', 'log_plots_param', 'X_train', 'target_param', 'stratify_param', 'seed', 'fold_groups_param', 'fold_generator', 'fix_imbalance_param', '_gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'html_param', 'y_test', 'y', 'experiment__', 'fold_shuffle_param', 'logging_param', 'X', 'pycaret_globals', '_all_models_internal', 'n_jobs_param', '_internal_pipeline', '_all_metrics', 'X_test', 'data_before_preprocess', 'display_container', 'imputation_regressor'}
2020-10-18 22:18:29,921:INFO:Preparing display monitor
2020-10-18 22:18:29,921:INFO:Importing libraries
2020-10-18 22:18:29,921:INFO:Copying data for preprocessing
2020-10-18 22:18:30,512:INFO:Declaring preprocessing parameters
2020-10-18 22:18:31,198:INFO:Creating preprocessing pipeline
2020-10-18 22:18:38,097:INFO:Preprocessing pipeline created successfully
2020-10-18 22:18:38,097:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-18 22:18:38,097:INFO:Creating global containers
2020-10-18 22:18:38,107:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-18 22:19:20,104:INFO:Creating grid variables
2020-10-18 22:19:20,257:INFO:create_model_container: 0
2020-10-18 22:19:20,257:INFO:master_model_container: 0
2020-10-18 22:19:20,257:INFO:display_container: 0
2020-10-18 22:19:20,267:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-18 22:19:20,267:INFO:setup() succesfully completed......................................
2020-10-18 22:19:20,491:INFO:Initializing compare_models()
2020-10-18 22:19:20,491:INFO:compare_models(include=['lr', 'svm', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-18 22:19:20,491:INFO:Checking exceptions
2020-10-18 22:19:20,492:INFO:Preparing display monitor
2020-10-18 22:19:20,492:INFO:Preparing display monitor
2020-10-18 22:19:20,547:INFO:Initializing Linear Regression
2020-10-18 22:19:20,547:INFO:Total runtime is 0.0 minutes
2020-10-18 22:19:20,563:INFO:SubProcess create_model() called ==================================
2020-10-18 22:19:20,563:INFO:Initializing create_model()
2020-10-18 22:19:20,563:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001CE83933AC8>, kwargs={})
2020-10-18 22:19:20,564:INFO:Checking exceptions
2020-10-18 22:19:20,564:INFO:Importing libraries
2020-10-18 22:19:20,564:INFO:Copying training dataset
2020-10-18 22:19:20,583:INFO:Defining folds
2020-10-18 22:19:20,583:INFO:Declaring metric variables
2020-10-18 22:19:20,598:INFO:Importing untrained model
2020-10-18 22:19:20,613:INFO:Linear Regression Imported succesfully
2020-10-18 22:19:20,646:INFO:Starting cross validation
2020-10-18 22:19:20,656:INFO:Cross validating with n_jobs=-1
2020-10-18 22:19:49,083:INFO:Calculating mean and std
2020-10-18 22:19:49,085:INFO:Creating metrics dataframe
2020-10-18 22:19:49,093:INFO:Uploading results into container
2020-10-18 22:19:49,094:INFO:Uploading model into container now
2020-10-18 22:19:49,094:INFO:create_model_container: 1
2020-10-18 22:19:49,094:INFO:master_model_container: 1
2020-10-18 22:19:49,094:INFO:display_container: 1
2020-10-18 22:19:49,094:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-18 22:19:49,094:INFO:create_model() succesfully completed......................................
2020-10-18 22:19:49,338:INFO:SubProcess create_model() end ==================================
2020-10-18 22:19:49,339:INFO:Creating metrics dataframe
2020-10-18 22:19:49,402:INFO:Initializing Support Vector Regression
2020-10-18 22:19:49,403:INFO:Total runtime is 0.4809311707814535 minutes
2020-10-18 22:19:49,419:INFO:SubProcess create_model() called ==================================
2020-10-18 22:19:49,419:INFO:Initializing create_model()
2020-10-18 22:19:49,419:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001CE83933AC8>, kwargs={})
2020-10-18 22:19:49,419:INFO:Checking exceptions
2020-10-18 22:19:49,420:INFO:Importing libraries
2020-10-18 22:19:49,420:INFO:Copying training dataset
2020-10-18 22:19:49,436:INFO:Defining folds
2020-10-18 22:19:49,436:INFO:Declaring metric variables
2020-10-18 22:19:49,450:INFO:Importing untrained model
2020-10-18 22:19:49,463:INFO:Support Vector Regression Imported succesfully
2020-10-18 22:19:49,492:INFO:Starting cross validation
2020-10-18 22:19:49,493:INFO:Cross validating with n_jobs=-1
2020-10-18 22:45:00,563:INFO:PyCaret Supervised Module
2020-10-18 22:45:00,563:INFO:ML Usecase: regression
2020-10-18 22:45:00,563:INFO:version 2.2.0
2020-10-18 22:45:00,563:INFO:Initializing setup()
2020-10-18 22:45:00,563:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 22:45:00,563:INFO:Checking environment
2020-10-18 22:45:00,564:INFO:python_version: 3.7.6
2020-10-18 22:45:00,564:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 22:45:00,564:INFO:machine: AMD64
2020-10-18 22:45:00,564:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 22:45:00,564:INFO:Memory: svmem(total=16969158656, available=4652445696, percent=72.6, used=12316712960, free=4652445696)
2020-10-18 22:45:00,565:INFO:Physical Core: 4
2020-10-18 22:45:00,565:INFO:Logical Core: 8
2020-10-18 22:45:00,565:INFO:Checking libraries
2020-10-18 22:45:00,565:INFO:pd==1.1.3
2020-10-18 22:45:00,565:INFO:numpy==1.18.1
2020-10-18 22:45:00,565:INFO:sklearn==0.23.2
2020-10-18 22:45:04,799:INFO:xgboost==1.2.1
2020-10-18 22:45:04,799:INFO:lightgbm==2.3.1
2020-10-18 22:45:04,819:INFO:catboost==0.24.2
2020-10-18 22:45:16,892:INFO:mlflow==1.11.0
2020-10-18 22:45:16,893:INFO:Checking Exceptions
2020-10-18 22:45:16,893:INFO:Declaring global variables
2020-10-18 22:45:16,893:INFO:USI: b38a
2020-10-18 22:45:16,894:INFO:pycaret_globals: {'y', 'X_train', 'target_param', '_ml_usecase', 'stratify_param', 'prep_pipe', '_gpu_n_jobs_param', 'exp_name_log', 'y_train', 'log_plots_param', 'gpu_param', 'master_model_container', 'imputation_regressor', 'fix_imbalance_method_param', 'create_model_container', 'pycaret_globals', '_internal_pipeline', 'fold_shuffle_param', 'USI', 'transform_target_method_param', 'X_test', 'experiment__', 'X', 'display_container', 'data_before_preprocess', 'logging_param', 'fold_groups_param', '_all_models_internal', '_all_models', 'fix_imbalance_param', 'n_jobs_param', 'html_param', '_all_metrics', 'y_test', 'iterative_imputation_iters_param', 'seed', 'fold_generator', 'transform_target_param', 'fold_param', 'imputation_classifier'}
2020-10-18 22:45:16,894:INFO:Preparing display monitor
2020-10-18 22:45:16,894:INFO:Importing libraries
2020-10-18 22:45:16,894:INFO:Copying data for preprocessing
2020-10-18 22:45:17,682:INFO:Declaring preprocessing parameters
2020-10-18 22:45:18,656:INFO:Creating preprocessing pipeline
2020-10-18 22:45:28,056:INFO:Preprocessing pipeline created successfully
2020-10-18 22:45:28,057:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-18 22:45:28,057:INFO:Creating global containers
2020-10-18 22:45:28,090:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-18 22:46:08,314:INFO:Creating grid variables
2020-10-18 22:46:08,460:INFO:create_model_container: 0
2020-10-18 22:46:08,461:INFO:master_model_container: 0
2020-10-18 22:46:08,461:INFO:display_container: 0
2020-10-18 22:46:08,471:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-18 22:46:08,471:INFO:setup() succesfully completed......................................
2020-10-18 22:46:08,705:INFO:Initializing compare_models()
2020-10-18 22:46:08,705:INFO:compare_models(include=['lr', 'svm', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-18 22:46:08,705:INFO:Checking exceptions
2020-10-18 22:46:08,706:INFO:Preparing display monitor
2020-10-18 22:46:08,706:INFO:Preparing display monitor
2020-10-18 22:46:08,812:INFO:Initializing Linear Regression
2020-10-18 22:46:08,812:INFO:Total runtime is 0.0 minutes
2020-10-18 22:46:08,828:INFO:SubProcess create_model() called ==================================
2020-10-18 22:46:08,828:INFO:Initializing create_model()
2020-10-18 22:46:08,829:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000023327853CC8>, kwargs={})
2020-10-18 22:46:08,829:INFO:Checking exceptions
2020-10-18 22:46:08,829:INFO:Importing libraries
2020-10-18 22:46:08,829:INFO:Copying training dataset
2020-10-18 22:46:08,848:INFO:Defining folds
2020-10-18 22:46:08,848:INFO:Declaring metric variables
2020-10-18 22:46:08,862:INFO:Importing untrained model
2020-10-18 22:46:08,875:INFO:Linear Regression Imported succesfully
2020-10-18 22:46:08,910:INFO:Starting cross validation
2020-10-18 22:46:08,919:INFO:Cross validating with n_jobs=-1
2020-10-18 22:46:52,300:INFO:Calculating mean and std
2020-10-18 22:46:52,302:INFO:Creating metrics dataframe
2020-10-18 22:46:52,311:INFO:Uploading results into container
2020-10-18 22:46:52,311:INFO:Uploading model into container now
2020-10-18 22:46:52,311:INFO:create_model_container: 1
2020-10-18 22:46:52,311:INFO:master_model_container: 1
2020-10-18 22:46:52,311:INFO:display_container: 1
2020-10-18 22:46:52,312:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-18 22:46:52,312:INFO:create_model() succesfully completed......................................
2020-10-18 22:46:52,536:INFO:SubProcess create_model() end ==================================
2020-10-18 22:46:52,537:INFO:Creating metrics dataframe
2020-10-18 22:46:52,571:INFO:Initializing Support Vector Regression
2020-10-18 22:46:52,572:INFO:Total runtime is 0.7293343504269918 minutes
2020-10-18 22:46:52,587:INFO:SubProcess create_model() called ==================================
2020-10-18 22:46:52,588:INFO:Initializing create_model()
2020-10-18 22:46:52,588:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000023327853CC8>, kwargs={})
2020-10-18 22:46:52,589:INFO:Checking exceptions
2020-10-18 22:46:52,589:INFO:Importing libraries
2020-10-18 22:46:52,589:INFO:Copying training dataset
2020-10-18 22:46:52,605:INFO:Defining folds
2020-10-18 22:46:52,605:INFO:Declaring metric variables
2020-10-18 22:46:52,619:INFO:Importing untrained model
2020-10-18 22:46:52,633:INFO:Support Vector Regression Imported succesfully
2020-10-18 22:46:52,661:INFO:Starting cross validation
2020-10-18 22:46:52,662:INFO:Cross validating with n_jobs=-1
2020-10-18 23:02:31,834:INFO:PyCaret Supervised Module
2020-10-18 23:02:31,836:INFO:ML Usecase: regression
2020-10-18 23:02:31,837:INFO:version 2.2.0
2020-10-18 23:02:31,839:INFO:Initializing setup()
2020-10-18 23:02:31,840:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 23:02:31,841:INFO:Checking environment
2020-10-18 23:02:31,842:INFO:python_version: 3.7.6
2020-10-18 23:02:31,843:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 23:02:31,843:INFO:machine: AMD64
2020-10-18 23:02:31,844:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 23:02:31,845:INFO:Memory: svmem(total=16969158656, available=4956508160, percent=70.8, used=12012650496, free=4956508160)
2020-10-18 23:02:31,846:INFO:Physical Core: 4
2020-10-18 23:02:31,847:INFO:Logical Core: 8
2020-10-18 23:02:31,848:INFO:Checking libraries
2020-10-18 23:02:31,849:INFO:pd==1.1.3
2020-10-18 23:02:31,850:INFO:numpy==1.18.1
2020-10-18 23:02:31,850:INFO:sklearn==0.23.2
2020-10-18 23:02:41,800:INFO:xgboost==1.2.1
2020-10-18 23:02:41,802:INFO:lightgbm==2.3.1
2020-10-18 23:02:41,872:INFO:catboost==0.24.2
2020-10-18 23:02:54,502:WARNING:mlflow not found
2020-10-18 23:02:54,504:INFO:Checking Exceptions
2020-10-18 23:02:54,506:INFO:Declaring global variables
2020-10-18 23:02:54,507:INFO:USI: e0b7
2020-10-18 23:02:54,558:INFO:pycaret_globals: {'stratify_param', '_gpu_n_jobs_param', 'imputation_classifier', 'display_container', 'transform_target_param', 'fold_shuffle_param', 'USI', 'y_train', 'html_param', 'target_param', 'transform_target_method_param', 'pycaret_globals', '_internal_pipeline', 'master_model_container', 'seed', 'y_test', 'fix_imbalance_method_param', 'experiment__', 'data_before_preprocess', 'fold_param', 'fix_imbalance_param', 'y', '_all_metrics', '_ml_usecase', 'fold_generator', 'prep_pipe', '_all_models', 'fold_groups_param', 'logging_param', 'X_test', 'iterative_imputation_iters_param', 'exp_name_log', 'create_model_container', 'gpu_param', '_all_models_internal', 'X_train', 'X', 'imputation_regressor', 'n_jobs_param', 'log_plots_param'}
2020-10-18 23:02:54,559:INFO:Preparing display monitor
2020-10-18 23:02:54,560:INFO:Importing libraries
2020-10-18 23:02:54,561:INFO:Copying data for preprocessing
2020-10-18 23:07:58,509:INFO:PyCaret Supervised Module
2020-10-18 23:07:58,511:INFO:ML Usecase: regression
2020-10-18 23:07:58,512:INFO:version 2.2.0
2020-10-18 23:07:58,514:INFO:Initializing setup()
2020-10-18 23:07:58,515:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 23:07:58,516:INFO:Checking environment
2020-10-18 23:07:58,517:INFO:python_version: 3.7.6
2020-10-18 23:07:58,519:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 23:07:58,520:INFO:machine: AMD64
2020-10-18 23:07:58,521:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 23:07:58,522:INFO:Memory: svmem(total=16969158656, available=5009068032, percent=70.5, used=11960090624, free=5009068032)
2020-10-18 23:07:58,524:INFO:Physical Core: 4
2020-10-18 23:07:58,526:INFO:Logical Core: 8
2020-10-18 23:07:58,527:INFO:Checking libraries
2020-10-18 23:07:58,529:INFO:pd==1.1.3
2020-10-18 23:07:58,530:INFO:numpy==1.18.1
2020-10-18 23:07:58,531:INFO:sklearn==0.23.2
2020-10-18 23:08:08,928:INFO:xgboost==1.2.1
2020-10-18 23:08:08,930:INFO:lightgbm==2.3.1
2020-10-18 23:08:08,996:INFO:catboost==0.24.2
2020-10-18 23:08:22,596:WARNING:mlflow not found
2020-10-18 23:08:22,599:INFO:Checking Exceptions
2020-10-18 23:08:22,600:INFO:Declaring global variables
2020-10-18 23:08:22,601:INFO:USI: 2428
2020-10-18 23:08:22,602:INFO:pycaret_globals: {'USI', 'gpu_param', 'html_param', 'y', 'iterative_imputation_iters_param', '_all_models_internal', 'n_jobs_param', 'experiment__', 'X', 'prep_pipe', 'create_model_container', 'seed', 'target_param', '_internal_pipeline', 'fold_generator', 'display_container', 'y_train', '_ml_usecase', 'transform_target_param', 'fold_shuffle_param', 'fix_imbalance_param', 'log_plots_param', 'pycaret_globals', 'transform_target_method_param', 'stratify_param', 'exp_name_log', 'logging_param', 'fold_param', 'fold_groups_param', '_gpu_n_jobs_param', 'fix_imbalance_method_param', '_all_models', 'X_train', 'imputation_classifier', 'X_test', 'data_before_preprocess', 'master_model_container', 'y_test', 'imputation_regressor', '_all_metrics'}
2020-10-18 23:08:22,602:INFO:Preparing display monitor
2020-10-18 23:08:22,603:INFO:Importing libraries
2020-10-18 23:08:22,604:INFO:Copying data for preprocessing
2020-10-18 23:09:13,102:INFO:PyCaret Supervised Module
2020-10-18 23:09:13,104:INFO:ML Usecase: regression
2020-10-18 23:09:13,105:INFO:version 2.2.0
2020-10-18 23:09:13,106:INFO:Initializing setup()
2020-10-18 23:09:13,107:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 23:09:13,108:INFO:Checking environment
2020-10-18 23:09:13,109:INFO:python_version: 3.7.6
2020-10-18 23:09:13,111:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 23:09:13,112:INFO:machine: AMD64
2020-10-18 23:09:13,114:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 23:09:13,115:INFO:Memory: svmem(total=16969158656, available=4762140672, percent=71.9, used=12207017984, free=4762140672)
2020-10-18 23:09:13,174:INFO:Physical Core: 4
2020-10-18 23:09:13,176:INFO:Logical Core: 8
2020-10-18 23:09:13,177:INFO:Checking libraries
2020-10-18 23:09:13,178:INFO:pd==1.1.3
2020-10-18 23:09:13,179:INFO:numpy==1.18.1
2020-10-18 23:09:13,180:INFO:sklearn==0.23.2
2020-10-18 23:09:13,180:INFO:xgboost==1.2.1
2020-10-18 23:09:13,181:INFO:lightgbm==2.3.1
2020-10-18 23:09:13,182:INFO:catboost==0.24.2
2020-10-18 23:09:13,183:INFO:mlflow==1.11.0
2020-10-18 23:09:13,183:INFO:Checking Exceptions
2020-10-18 23:09:13,184:INFO:Declaring global variables
2020-10-18 23:09:13,185:INFO:USI: 7e6b
2020-10-18 23:09:13,186:INFO:pycaret_globals: {'USI', 'gpu_param', 'html_param', 'y', 'iterative_imputation_iters_param', '_all_models_internal', 'n_jobs_param', 'experiment__', 'X', 'prep_pipe', 'create_model_container', 'seed', 'target_param', '_internal_pipeline', 'fold_generator', 'display_container', 'y_train', '_ml_usecase', 'transform_target_param', 'fold_shuffle_param', 'fix_imbalance_param', 'log_plots_param', 'pycaret_globals', 'transform_target_method_param', 'stratify_param', 'exp_name_log', 'logging_param', 'fold_param', 'fold_groups_param', '_gpu_n_jobs_param', 'fix_imbalance_method_param', '_all_models', 'X_train', 'imputation_classifier', 'X_test', 'data_before_preprocess', 'master_model_container', 'y_test', 'imputation_regressor', '_all_metrics'}
2020-10-18 23:09:13,187:INFO:Preparing display monitor
2020-10-18 23:09:13,257:INFO:Importing libraries
2020-10-18 23:09:13,258:INFO:Copying data for preprocessing
2020-10-18 23:09:14,388:INFO:Declaring preprocessing parameters
2020-10-18 23:09:15,821:INFO:Creating preprocessing pipeline
2020-10-18 23:09:24,226:INFO:Preprocessing pipeline created successfully
2020-10-18 23:09:24,228:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-18 23:09:24,230:INFO:Creating global containers
2020-10-18 23:09:24,233:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-18 23:10:26,046:INFO:Creating grid variables
2020-10-18 23:10:26,204:INFO:create_model_container: 0
2020-10-18 23:10:26,205:INFO:master_model_container: 0
2020-10-18 23:10:26,206:INFO:display_container: 0
2020-10-18 23:10:26,219:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-18 23:10:26,221:INFO:setup() succesfully completed......................................
2020-10-18 23:10:26,507:INFO:Initializing compare_models()
2020-10-18 23:10:26,509:INFO:compare_models(include=['lr', 'knn', 'dt', 'svm', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-18 23:10:26,510:INFO:Checking exceptions
2020-10-18 23:10:26,511:INFO:Preparing display monitor
2020-10-18 23:10:26,513:INFO:Preparing display monitor
2020-10-18 23:10:26,567:INFO:Initializing Linear Regression
2020-10-18 23:10:26,568:INFO:Total runtime is 1.6637643178304036e-05 minutes
2020-10-18 23:10:26,583:INFO:SubProcess create_model() called ==================================
2020-10-18 23:10:26,584:INFO:Initializing create_model()
2020-10-18 23:10:26,585:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000019C62519B48>, kwargs={})
2020-10-18 23:10:26,586:INFO:Checking exceptions
2020-10-18 23:10:26,587:INFO:Importing libraries
2020-10-18 23:10:26,587:INFO:Copying training dataset
2020-10-18 23:10:26,605:INFO:Defining folds
2020-10-18 23:10:26,606:INFO:Declaring metric variables
2020-10-18 23:10:26,622:INFO:Importing untrained model
2020-10-18 23:10:26,641:INFO:Linear Regression Imported succesfully
2020-10-18 23:10:26,670:INFO:Starting cross validation
2020-10-18 23:10:26,679:INFO:Cross validating with n_jobs=-1
2020-10-18 23:11:20,115:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2020-10-18 23:11:20,132:WARNING:Traceback (most recent call last):
  File "C:\Users\mixil\AppData\Roaming\Python\Python37\site-packages\pycaret\internal\tabular.py", line 2135, in compare_models
    refit=False,
  File "C:\Users\mixil\AppData\Roaming\Python\Python37\site-packages\pycaret\internal\tabular.py", line 3064, in create_model_supervised
    error_score=0,
  File "C:\Users\mixil\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\mixil\anaconda3\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "C:\Users\mixil\anaconda3\lib\site-packages\joblib\parallel.py", line 1017, in __call__
    self.retrieve()
  File "C:\Users\mixil\anaconda3\lib\site-packages\joblib\parallel.py", line 909, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\mixil\anaconda3\lib\site-packages\joblib\_parallel_backends.py", line 562, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\mixil\anaconda3\lib\concurrent\futures\_base.py", line 430, in result
    self._condition.wait(timeout)
  File "C:\Users\mixil\anaconda3\lib\threading.py", line 296, in wait
    waiter.acquire()
KeyboardInterrupt

2020-10-18 23:11:20,134:INFO:Initializing create_model()
2020-10-18 23:11:20,135:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000019C62519B48>, kwargs={})
2020-10-18 23:11:20,136:INFO:Checking exceptions
2020-10-18 23:11:20,138:INFO:Importing libraries
2020-10-18 23:11:20,139:INFO:Copying training dataset
2020-10-18 23:11:20,163:INFO:Defining folds
2020-10-18 23:11:20,164:INFO:Declaring metric variables
2020-10-18 23:11:20,178:INFO:Importing untrained model
2020-10-18 23:11:20,193:INFO:Linear Regression Imported succesfully
2020-10-18 23:11:20,227:INFO:Starting cross validation
2020-10-18 23:11:20,228:INFO:Cross validating with n_jobs=-1
2020-10-18 23:12:13,836:INFO:Calculating mean and std
2020-10-18 23:12:13,840:INFO:Creating metrics dataframe
2020-10-18 23:12:13,849:INFO:Uploading results into container
2020-10-18 23:12:13,850:INFO:Uploading model into container now
2020-10-18 23:12:13,851:INFO:create_model_container: 1
2020-10-18 23:12:13,852:INFO:master_model_container: 1
2020-10-18 23:12:13,852:INFO:display_container: 1
2020-10-18 23:12:13,854:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-18 23:12:13,854:INFO:create_model() succesfully completed......................................
2020-10-18 23:12:14,141:INFO:SubProcess create_model() end ==================================
2020-10-18 23:12:14,143:INFO:Creating metrics dataframe
2020-10-18 23:12:14,187:INFO:Initializing K Neighbors Regressor
2020-10-18 23:12:14,188:INFO:Total runtime is 1.793688944975535 minutes
2020-10-18 23:12:14,214:INFO:SubProcess create_model() called ==================================
2020-10-18 23:12:14,216:INFO:Initializing create_model()
2020-10-18 23:12:14,216:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000019C62519B48>, kwargs={})
2020-10-18 23:12:14,217:INFO:Checking exceptions
2020-10-18 23:12:14,218:INFO:Importing libraries
2020-10-18 23:12:14,219:INFO:Copying training dataset
2020-10-18 23:12:14,235:INFO:Defining folds
2020-10-18 23:12:14,236:INFO:Declaring metric variables
2020-10-18 23:12:14,263:INFO:Importing untrained model
2020-10-18 23:12:14,278:INFO:K Neighbors Regressor Imported succesfully
2020-10-18 23:12:14,313:INFO:Starting cross validation
2020-10-18 23:12:14,315:INFO:Cross validating with n_jobs=-1
2020-10-18 23:27:30,177:INFO:PyCaret Supervised Module
2020-10-18 23:27:30,177:INFO:ML Usecase: regression
2020-10-18 23:27:30,177:INFO:version 2.2.0
2020-10-18 23:27:30,177:INFO:Initializing setup()
2020-10-18 23:27:30,177:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 23:27:30,177:INFO:Checking environment
2020-10-18 23:27:30,177:INFO:python_version: 3.7.6
2020-10-18 23:27:30,177:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 23:27:30,177:INFO:machine: AMD64
2020-10-18 23:27:30,178:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 23:27:30,178:INFO:Memory: svmem(total=16969158656, available=9928990720, percent=41.5, used=7040167936, free=9928990720)
2020-10-18 23:27:30,178:INFO:Physical Core: 4
2020-10-18 23:27:30,178:INFO:Logical Core: 8
2020-10-18 23:27:30,178:INFO:Checking libraries
2020-10-18 23:27:30,178:INFO:pd==1.1.3
2020-10-18 23:27:30,178:INFO:numpy==1.18.1
2020-10-18 23:27:30,178:INFO:sklearn==0.23.2
2020-10-18 23:27:30,552:INFO:xgboost==1.2.1
2020-10-18 23:27:30,552:INFO:lightgbm==2.3.1
2020-10-18 23:27:30,563:INFO:catboost==0.24.2
2020-10-18 23:27:31,107:INFO:mlflow==1.11.0
2020-10-18 23:27:31,108:INFO:Checking Exceptions
2020-10-18 23:27:31,108:INFO:Declaring global variables
2020-10-18 23:27:31,108:INFO:USI: cd69
2020-10-18 23:27:31,108:INFO:pycaret_globals: {'fold_generator', 'imputation_regressor', 'y_train', 'html_param', 'fix_imbalance_param', '_ml_usecase', 'exp_name_log', 'fix_imbalance_method_param', 'gpu_param', 'fold_groups_param', 'transform_target_param', 'iterative_imputation_iters_param', 'pycaret_globals', 'seed', 'prep_pipe', 'logging_param', 'imputation_classifier', 'create_model_container', 'master_model_container', 'X_test', '_all_models', 'y', '_all_metrics', 'y_test', 'USI', 'n_jobs_param', '_gpu_n_jobs_param', 'data_before_preprocess', 'X_train', 'display_container', '_all_models_internal', 'fold_shuffle_param', '_internal_pipeline', 'experiment__', 'transform_target_method_param', 'log_plots_param', 'X', 'target_param', 'stratify_param', 'fold_param'}
2020-10-18 23:27:31,108:INFO:Preparing display monitor
2020-10-18 23:27:31,108:INFO:Importing libraries
2020-10-18 23:27:31,108:INFO:Copying data for preprocessing
2020-10-18 23:27:31,396:INFO:Declaring preprocessing parameters
2020-10-18 23:27:31,656:INFO:Creating preprocessing pipeline
2020-10-18 23:27:33,656:INFO:Preprocessing pipeline created successfully
2020-10-18 23:27:33,657:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-18 23:27:33,657:INFO:Creating global containers
2020-10-18 23:27:33,658:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-18 23:27:46,350:INFO:Creating grid variables
2020-10-18 23:27:46,434:INFO:create_model_container: 0
2020-10-18 23:27:46,434:INFO:master_model_container: 0
2020-10-18 23:27:46,434:INFO:display_container: 0
2020-10-18 23:27:46,438:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-18 23:27:46,438:INFO:setup() succesfully completed......................................
2020-10-18 23:27:56,835:INFO:Initializing compare_models()
2020-10-18 23:27:56,835:INFO:compare_models(include=['lr', 'knn', 'dt', 'svm', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-18 23:27:56,835:INFO:Checking exceptions
2020-10-18 23:27:56,835:INFO:Preparing display monitor
2020-10-18 23:27:56,836:INFO:Preparing display monitor
2020-10-18 23:27:56,865:INFO:Initializing Linear Regression
2020-10-18 23:27:56,865:INFO:Total runtime is 0.0 minutes
2020-10-18 23:27:56,875:INFO:SubProcess create_model() called ==================================
2020-10-18 23:27:56,875:INFO:Initializing create_model()
2020-10-18 23:27:56,875:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B784A37248>, kwargs={})
2020-10-18 23:27:56,875:INFO:Checking exceptions
2020-10-18 23:27:56,875:INFO:Importing libraries
2020-10-18 23:27:56,875:INFO:Copying training dataset
2020-10-18 23:27:56,883:INFO:Defining folds
2020-10-18 23:27:56,883:INFO:Declaring metric variables
2020-10-18 23:27:56,891:INFO:Importing untrained model
2020-10-18 23:27:56,900:INFO:Linear Regression Imported succesfully
2020-10-18 23:27:56,918:INFO:Starting cross validation
2020-10-18 23:27:56,924:INFO:Cross validating with n_jobs=-1
2020-10-18 23:28:01,478:INFO:Calculating mean and std
2020-10-18 23:28:01,479:INFO:Creating metrics dataframe
2020-10-18 23:28:01,483:INFO:Uploading results into container
2020-10-18 23:28:01,483:INFO:Uploading model into container now
2020-10-18 23:28:01,483:INFO:create_model_container: 1
2020-10-18 23:28:01,483:INFO:master_model_container: 1
2020-10-18 23:28:01,483:INFO:display_container: 1
2020-10-18 23:28:01,483:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-18 23:28:01,483:INFO:create_model() succesfully completed......................................
2020-10-18 23:28:01,586:INFO:SubProcess create_model() end ==================================
2020-10-18 23:28:01,586:INFO:Creating metrics dataframe
2020-10-18 23:28:01,605:INFO:Initializing K Neighbors Regressor
2020-10-18 23:28:01,605:INFO:Total runtime is 0.07900599241256714 minutes
2020-10-18 23:28:01,613:INFO:SubProcess create_model() called ==================================
2020-10-18 23:28:01,614:INFO:Initializing create_model()
2020-10-18 23:28:01,614:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B784A37248>, kwargs={})
2020-10-18 23:28:01,614:INFO:Checking exceptions
2020-10-18 23:28:01,614:INFO:Importing libraries
2020-10-18 23:28:01,614:INFO:Copying training dataset
2020-10-18 23:28:01,622:INFO:Defining folds
2020-10-18 23:28:01,623:INFO:Declaring metric variables
2020-10-18 23:28:01,630:INFO:Importing untrained model
2020-10-18 23:28:01,640:INFO:K Neighbors Regressor Imported succesfully
2020-10-18 23:28:01,658:INFO:Starting cross validation
2020-10-18 23:28:01,658:INFO:Cross validating with n_jobs=-1
2020-10-18 23:28:25,332:INFO:Calculating mean and std
2020-10-18 23:28:25,334:INFO:Creating metrics dataframe
2020-10-18 23:28:25,339:INFO:Uploading results into container
2020-10-18 23:28:25,339:INFO:Uploading model into container now
2020-10-18 23:28:25,340:INFO:create_model_container: 2
2020-10-18 23:28:25,340:INFO:master_model_container: 2
2020-10-18 23:28:25,340:INFO:display_container: 1
2020-10-18 23:28:25,340:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-18 23:28:25,340:INFO:create_model() succesfully completed......................................
2020-10-18 23:28:25,442:INFO:SubProcess create_model() end ==================================
2020-10-18 23:28:25,442:INFO:Creating metrics dataframe
2020-10-18 23:28:25,458:INFO:Initializing Decision Tree Regressor
2020-10-18 23:28:25,458:INFO:Total runtime is 0.47655241489410405 minutes
2020-10-18 23:28:25,466:INFO:SubProcess create_model() called ==================================
2020-10-18 23:28:25,466:INFO:Initializing create_model()
2020-10-18 23:28:25,466:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B784A37248>, kwargs={})
2020-10-18 23:28:25,466:INFO:Checking exceptions
2020-10-18 23:28:25,466:INFO:Importing libraries
2020-10-18 23:28:25,466:INFO:Copying training dataset
2020-10-18 23:28:25,476:INFO:Defining folds
2020-10-18 23:28:25,476:INFO:Declaring metric variables
2020-10-18 23:28:25,484:INFO:Importing untrained model
2020-10-18 23:28:25,496:INFO:Decision Tree Regressor Imported succesfully
2020-10-18 23:28:25,518:INFO:Starting cross validation
2020-10-18 23:28:25,518:INFO:Cross validating with n_jobs=-1
2020-10-18 23:28:56,445:INFO:Calculating mean and std
2020-10-18 23:28:56,446:INFO:Creating metrics dataframe
2020-10-18 23:28:56,449:INFO:Uploading results into container
2020-10-18 23:28:56,449:INFO:Uploading model into container now
2020-10-18 23:28:56,449:INFO:create_model_container: 3
2020-10-18 23:28:56,449:INFO:master_model_container: 3
2020-10-18 23:28:56,449:INFO:display_container: 1
2020-10-18 23:28:56,449:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-18 23:28:56,449:INFO:create_model() succesfully completed......................................
2020-10-18 23:28:56,535:INFO:SubProcess create_model() end ==================================
2020-10-18 23:28:56,535:INFO:Creating metrics dataframe
2020-10-18 23:28:56,554:INFO:Initializing Support Vector Regression
2020-10-18 23:28:56,554:INFO:Total runtime is 0.9948212107022604 minutes
2020-10-18 23:28:56,562:INFO:SubProcess create_model() called ==================================
2020-10-18 23:28:56,562:INFO:Initializing create_model()
2020-10-18 23:28:56,562:INFO:create_model(estimator=svm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B784A37248>, kwargs={})
2020-10-18 23:28:56,563:INFO:Checking exceptions
2020-10-18 23:28:56,563:INFO:Importing libraries
2020-10-18 23:28:56,563:INFO:Copying training dataset
2020-10-18 23:28:56,572:INFO:Defining folds
2020-10-18 23:28:56,572:INFO:Declaring metric variables
2020-10-18 23:28:56,579:INFO:Importing untrained model
2020-10-18 23:28:56,587:INFO:Support Vector Regression Imported succesfully
2020-10-18 23:28:56,604:INFO:Starting cross validation
2020-10-18 23:28:56,605:INFO:Cross validating with n_jobs=-1
2020-10-18 23:42:23,681:INFO:PyCaret Supervised Module
2020-10-18 23:42:23,681:INFO:ML Usecase: regression
2020-10-18 23:42:23,681:INFO:version 2.2.0
2020-10-18 23:42:23,681:INFO:Initializing setup()
2020-10-18 23:42:23,682:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-18 23:42:23,682:INFO:Checking environment
2020-10-18 23:42:23,682:INFO:python_version: 3.7.6
2020-10-18 23:42:23,682:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-18 23:42:23,682:INFO:machine: AMD64
2020-10-18 23:42:23,683:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-18 23:42:23,683:INFO:Memory: svmem(total=16969158656, available=9194946560, percent=45.8, used=7774212096, free=9194946560)
2020-10-18 23:42:23,683:INFO:Physical Core: 4
2020-10-18 23:42:23,683:INFO:Logical Core: 8
2020-10-18 23:42:23,684:INFO:Checking libraries
2020-10-18 23:42:23,684:INFO:pd==1.1.3
2020-10-18 23:42:23,684:INFO:numpy==1.18.1
2020-10-18 23:42:23,684:INFO:sklearn==0.23.2
2020-10-18 23:42:24,895:INFO:xgboost==1.2.1
2020-10-18 23:42:24,895:INFO:lightgbm==2.3.1
2020-10-18 23:42:24,924:INFO:catboost==0.24.2
2020-10-18 23:42:26,199:INFO:mlflow==1.11.0
2020-10-18 23:42:26,200:INFO:Checking Exceptions
2020-10-18 23:42:26,201:INFO:Declaring global variables
2020-10-18 23:42:26,201:INFO:USI: 8a82
2020-10-18 23:42:26,201:INFO:pycaret_globals: {'pycaret_globals', 'n_jobs_param', 'y', 'transform_target_param', 'stratify_param', '_all_models', 'transform_target_method_param', 'logging_param', 'html_param', 'create_model_container', 'imputation_classifier', 'target_param', 'data_before_preprocess', 'log_plots_param', 'fold_param', 'iterative_imputation_iters_param', 'X_train', 'gpu_param', 'imputation_regressor', 'X_test', '_internal_pipeline', 'fix_imbalance_method_param', '_all_metrics', 'X', 'seed', 'USI', 'fix_imbalance_param', 'fold_groups_param', 'experiment__', 'display_container', '_all_models_internal', '_gpu_n_jobs_param', 'y_test', '_ml_usecase', 'exp_name_log', 'fold_shuffle_param', 'fold_generator', 'master_model_container', 'y_train', 'prep_pipe'}
2020-10-18 23:42:26,202:INFO:Preparing display monitor
2020-10-18 23:42:26,202:INFO:Importing libraries
2020-10-18 23:42:26,202:INFO:Copying data for preprocessing
2020-10-18 23:42:26,510:INFO:Declaring preprocessing parameters
2020-10-18 23:42:27,010:INFO:Creating preprocessing pipeline
2020-10-18 23:42:32,537:INFO:Preprocessing pipeline created successfully
2020-10-18 23:42:32,537:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-18 23:42:32,537:INFO:Creating global containers
2020-10-18 23:42:32,540:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-18 23:43:02,058:INFO:Creating grid variables
2020-10-18 23:43:02,179:INFO:create_model_container: 0
2020-10-18 23:43:02,179:INFO:master_model_container: 0
2020-10-18 23:43:02,179:INFO:display_container: 0
2020-10-18 23:43:02,191:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-18 23:43:02,191:INFO:setup() succesfully completed......................................
2020-10-18 23:43:02,349:INFO:Initializing compare_models()
2020-10-18 23:43:02,349:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-18 23:43:02,349:INFO:Checking exceptions
2020-10-18 23:43:02,350:INFO:Preparing display monitor
2020-10-18 23:43:02,350:INFO:Preparing display monitor
2020-10-18 23:43:02,414:INFO:Initializing Linear Regression
2020-10-18 23:43:02,415:INFO:Total runtime is 1.0693073272705078e-05 minutes
2020-10-18 23:43:02,428:INFO:SubProcess create_model() called ==================================
2020-10-18 23:43:02,428:INFO:Initializing create_model()
2020-10-18 23:43:02,428:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020B8C175F08>, kwargs={})
2020-10-18 23:43:02,429:INFO:Checking exceptions
2020-10-18 23:43:02,429:INFO:Importing libraries
2020-10-18 23:43:02,429:INFO:Copying training dataset
2020-10-18 23:43:02,440:INFO:Defining folds
2020-10-18 23:43:02,441:INFO:Declaring metric variables
2020-10-18 23:43:02,453:INFO:Importing untrained model
2020-10-18 23:43:02,464:INFO:Linear Regression Imported succesfully
2020-10-18 23:43:02,490:INFO:Starting cross validation
2020-10-18 23:43:02,496:INFO:Cross validating with n_jobs=-1
2020-10-18 23:43:10,486:INFO:Calculating mean and std
2020-10-18 23:43:10,489:INFO:Creating metrics dataframe
2020-10-18 23:43:10,499:INFO:Uploading results into container
2020-10-18 23:43:10,500:INFO:Uploading model into container now
2020-10-18 23:43:10,500:INFO:create_model_container: 1
2020-10-18 23:43:10,501:INFO:master_model_container: 1
2020-10-18 23:43:10,501:INFO:display_container: 1
2020-10-18 23:43:10,501:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-18 23:43:10,501:INFO:create_model() succesfully completed......................................
2020-10-18 23:43:10,661:INFO:SubProcess create_model() end ==================================
2020-10-18 23:43:10,662:INFO:Creating metrics dataframe
2020-10-18 23:43:10,716:INFO:Initializing K Neighbors Regressor
2020-10-18 23:43:10,716:INFO:Total runtime is 0.13837400277455647 minutes
2020-10-18 23:43:10,741:INFO:SubProcess create_model() called ==================================
2020-10-18 23:43:10,742:INFO:Initializing create_model()
2020-10-18 23:43:10,742:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020B8C175F08>, kwargs={})
2020-10-18 23:43:10,742:INFO:Checking exceptions
2020-10-18 23:43:10,743:INFO:Importing libraries
2020-10-18 23:43:10,743:INFO:Copying training dataset
2020-10-18 23:43:10,760:INFO:Defining folds
2020-10-18 23:43:10,761:INFO:Declaring metric variables
2020-10-18 23:43:10,781:INFO:Importing untrained model
2020-10-18 23:43:10,801:INFO:K Neighbors Regressor Imported succesfully
2020-10-18 23:43:10,834:INFO:Starting cross validation
2020-10-18 23:43:10,834:INFO:Cross validating with n_jobs=-1
2020-10-18 23:43:42,378:INFO:Calculating mean and std
2020-10-18 23:43:42,381:INFO:Creating metrics dataframe
2020-10-18 23:43:42,391:INFO:Uploading results into container
2020-10-18 23:43:42,391:INFO:Uploading model into container now
2020-10-18 23:43:42,391:INFO:create_model_container: 2
2020-10-18 23:43:42,392:INFO:master_model_container: 2
2020-10-18 23:43:42,392:INFO:display_container: 1
2020-10-18 23:43:42,392:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-18 23:43:42,392:INFO:create_model() succesfully completed......................................
2020-10-18 23:43:42,576:INFO:SubProcess create_model() end ==================================
2020-10-18 23:43:42,576:INFO:Creating metrics dataframe
2020-10-18 23:43:42,630:INFO:Initializing Decision Tree Regressor
2020-10-18 23:43:42,630:INFO:Total runtime is 0.6702639738718669 minutes
2020-10-18 23:43:42,655:INFO:SubProcess create_model() called ==================================
2020-10-18 23:43:42,655:INFO:Initializing create_model()
2020-10-18 23:43:42,657:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020B8C175F08>, kwargs={})
2020-10-18 23:43:42,657:INFO:Checking exceptions
2020-10-18 23:43:42,657:INFO:Importing libraries
2020-10-18 23:43:42,657:INFO:Copying training dataset
2020-10-18 23:43:42,669:INFO:Defining folds
2020-10-18 23:43:42,670:INFO:Declaring metric variables
2020-10-18 23:43:42,687:INFO:Importing untrained model
2020-10-18 23:43:42,703:INFO:Decision Tree Regressor Imported succesfully
2020-10-18 23:43:42,734:INFO:Starting cross validation
2020-10-18 23:43:42,735:INFO:Cross validating with n_jobs=-1
2020-10-18 23:44:33,823:INFO:Calculating mean and std
2020-10-18 23:44:33,825:INFO:Creating metrics dataframe
2020-10-18 23:44:33,835:INFO:Uploading results into container
2020-10-18 23:44:33,835:INFO:Uploading model into container now
2020-10-18 23:44:33,836:INFO:create_model_container: 3
2020-10-18 23:44:33,836:INFO:master_model_container: 3
2020-10-18 23:44:33,836:INFO:display_container: 1
2020-10-18 23:44:33,837:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-18 23:44:33,837:INFO:create_model() succesfully completed......................................
2020-10-18 23:44:34,015:INFO:SubProcess create_model() end ==================================
2020-10-18 23:44:34,016:INFO:Creating metrics dataframe
2020-10-18 23:44:34,068:INFO:Initializing Random Forest Regressor
2020-10-18 23:44:34,068:INFO:Total runtime is 1.5275727033615112 minutes
2020-10-18 23:44:34,083:INFO:SubProcess create_model() called ==================================
2020-10-18 23:44:34,084:INFO:Initializing create_model()
2020-10-18 23:44:34,084:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020B8C175F08>, kwargs={})
2020-10-18 23:44:34,084:INFO:Checking exceptions
2020-10-18 23:44:34,084:INFO:Importing libraries
2020-10-18 23:44:34,084:INFO:Copying training dataset
2020-10-18 23:44:34,097:INFO:Defining folds
2020-10-18 23:44:34,097:INFO:Declaring metric variables
2020-10-18 23:44:34,109:INFO:Importing untrained model
2020-10-18 23:44:34,122:INFO:Random Forest Regressor Imported succesfully
2020-10-18 23:44:34,148:INFO:Starting cross validation
2020-10-18 23:44:34,149:INFO:Cross validating with n_jobs=-1
2020-10-19 00:11:26,816:INFO:PyCaret Supervised Module
2020-10-19 00:11:26,818:INFO:ML Usecase: regression
2020-10-19 00:11:26,818:INFO:version 2.2.0
2020-10-19 00:11:26,818:INFO:Initializing setup()
2020-10-19 00:11:26,818:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=10, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 00:11:26,819:INFO:Checking environment
2020-10-19 00:11:26,819:INFO:python_version: 3.7.6
2020-10-19 00:11:26,819:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 00:11:26,819:INFO:machine: AMD64
2020-10-19 00:11:26,820:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 00:11:26,820:INFO:Memory: svmem(total=16969158656, available=11190218752, percent=34.1, used=5778939904, free=11190218752)
2020-10-19 00:11:26,820:INFO:Physical Core: 4
2020-10-19 00:11:26,820:INFO:Logical Core: 8
2020-10-19 00:11:26,820:INFO:Checking libraries
2020-10-19 00:11:26,821:INFO:pd==1.1.3
2020-10-19 00:11:26,821:INFO:numpy==1.18.1
2020-10-19 00:11:26,821:INFO:sklearn==0.23.2
2020-10-19 00:11:28,143:INFO:xgboost==1.2.1
2020-10-19 00:11:28,143:INFO:lightgbm==2.3.1
2020-10-19 00:11:28,336:INFO:catboost==0.24.2
2020-10-19 00:11:30,259:INFO:mlflow==1.11.0
2020-10-19 00:11:30,260:INFO:Checking Exceptions
2020-10-19 00:11:30,260:INFO:Declaring global variables
2020-10-19 00:11:30,260:INFO:USI: 66c5
2020-10-19 00:11:30,260:INFO:pycaret_globals: {'X', 'fix_imbalance_param', 'create_model_container', 'imputation_classifier', '_internal_pipeline', 'fix_imbalance_method_param', 'X_train', 'fold_groups_param', 'prep_pipe', 'log_plots_param', '_all_models_internal', 'seed', 'imputation_regressor', 'transform_target_param', 'n_jobs_param', 'y_test', 'master_model_container', 'fold_generator', 'USI', 'pycaret_globals', 'data_before_preprocess', 'gpu_param', 'stratify_param', 'y', 'y_train', 'logging_param', 'html_param', 'iterative_imputation_iters_param', 'experiment__', 'target_param', 'exp_name_log', '_gpu_n_jobs_param', '_all_metrics', 'fold_shuffle_param', 'fold_param', '_ml_usecase', '_all_models', 'X_test', 'display_container', 'transform_target_method_param'}
2020-10-19 00:11:30,260:INFO:Preparing display monitor
2020-10-19 00:11:30,261:INFO:Importing libraries
2020-10-19 00:11:30,261:INFO:Copying data for preprocessing
2020-10-19 00:11:30,573:INFO:Declaring preprocessing parameters
2020-10-19 00:11:31,066:INFO:Creating preprocessing pipeline
2020-10-19 00:11:36,172:INFO:Preprocessing pipeline created successfully
2020-10-19 00:11:36,172:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 00:11:36,172:INFO:Creating global containers
2020-10-19 00:11:36,175:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 00:12:05,175:INFO:Creating grid variables
2020-10-19 00:12:05,307:INFO:create_model_container: 0
2020-10-19 00:12:05,308:INFO:master_model_container: 0
2020-10-19 00:12:05,308:INFO:display_container: 0
2020-10-19 00:12:05,321:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 00:12:05,322:INFO:setup() succesfully completed......................................
2020-10-19 00:12:05,513:INFO:Initializing compare_models()
2020-10-19 00:12:05,514:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 00:12:05,514:INFO:Checking exceptions
2020-10-19 00:12:05,514:INFO:Preparing display monitor
2020-10-19 00:12:05,514:INFO:Preparing display monitor
2020-10-19 00:12:05,588:INFO:Initializing Linear Regression
2020-10-19 00:12:05,588:INFO:Total runtime is 0.0 minutes
2020-10-19 00:12:05,609:INFO:SubProcess create_model() called ==================================
2020-10-19 00:12:05,609:INFO:Initializing create_model()
2020-10-19 00:12:05,609:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=10, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DB79245F88>, kwargs={})
2020-10-19 00:12:05,609:INFO:Checking exceptions
2020-10-19 00:12:05,610:INFO:Importing libraries
2020-10-19 00:12:05,610:INFO:Copying training dataset
2020-10-19 00:12:05,616:INFO:Defining folds
2020-10-19 00:12:05,617:INFO:Declaring metric variables
2020-10-19 00:12:05,627:INFO:Importing untrained model
2020-10-19 00:12:05,641:INFO:Linear Regression Imported succesfully
2020-10-19 00:12:05,667:INFO:Starting cross validation
2020-10-19 00:12:05,675:INFO:Cross validating with n_jobs=-1
2020-10-19 00:12:13,047:INFO:Calculating mean and std
2020-10-19 00:12:13,049:INFO:Creating metrics dataframe
2020-10-19 00:12:13,059:INFO:Uploading results into container
2020-10-19 00:12:13,059:INFO:Uploading model into container now
2020-10-19 00:12:13,060:INFO:create_model_container: 1
2020-10-19 00:12:13,060:INFO:master_model_container: 1
2020-10-19 00:12:13,060:INFO:display_container: 1
2020-10-19 00:12:13,061:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 00:12:13,061:INFO:create_model() succesfully completed......................................
2020-10-19 00:12:13,208:INFO:SubProcess create_model() end ==================================
2020-10-19 00:12:13,208:INFO:Creating metrics dataframe
2020-10-19 00:12:13,258:INFO:Initializing K Neighbors Regressor
2020-10-19 00:12:13,258:INFO:Total runtime is 0.12782992124557496 minutes
2020-10-19 00:12:13,281:INFO:SubProcess create_model() called ==================================
2020-10-19 00:12:13,282:INFO:Initializing create_model()
2020-10-19 00:12:13,282:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=10, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DB79245F88>, kwargs={})
2020-10-19 00:12:13,283:INFO:Checking exceptions
2020-10-19 00:12:13,283:INFO:Importing libraries
2020-10-19 00:12:13,284:INFO:Copying training dataset
2020-10-19 00:12:13,297:INFO:Defining folds
2020-10-19 00:12:13,298:INFO:Declaring metric variables
2020-10-19 00:12:13,324:INFO:Importing untrained model
2020-10-19 00:12:13,350:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 00:12:13,387:INFO:Starting cross validation
2020-10-19 00:12:13,388:INFO:Cross validating with n_jobs=-1
2020-10-19 00:12:35,161:INFO:Calculating mean and std
2020-10-19 00:12:35,164:INFO:Creating metrics dataframe
2020-10-19 00:12:35,176:INFO:Uploading results into container
2020-10-19 00:12:35,176:INFO:Uploading model into container now
2020-10-19 00:12:35,176:INFO:create_model_container: 2
2020-10-19 00:12:35,176:INFO:master_model_container: 2
2020-10-19 00:12:35,176:INFO:display_container: 1
2020-10-19 00:12:35,178:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 00:12:35,179:INFO:create_model() succesfully completed......................................
2020-10-19 00:12:35,302:INFO:SubProcess create_model() end ==================================
2020-10-19 00:12:35,302:INFO:Creating metrics dataframe
2020-10-19 00:12:35,321:INFO:Initializing Decision Tree Regressor
2020-10-19 00:12:35,322:INFO:Total runtime is 0.495546817779541 minutes
2020-10-19 00:12:35,331:INFO:SubProcess create_model() called ==================================
2020-10-19 00:12:35,332:INFO:Initializing create_model()
2020-10-19 00:12:35,332:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=10, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DB79245F88>, kwargs={})
2020-10-19 00:12:35,332:INFO:Checking exceptions
2020-10-19 00:12:35,332:INFO:Importing libraries
2020-10-19 00:12:35,332:INFO:Copying training dataset
2020-10-19 00:12:35,340:INFO:Defining folds
2020-10-19 00:12:35,340:INFO:Declaring metric variables
2020-10-19 00:12:35,350:INFO:Importing untrained model
2020-10-19 00:12:35,362:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 00:12:35,385:INFO:Starting cross validation
2020-10-19 00:12:35,386:INFO:Cross validating with n_jobs=-1
2020-10-19 00:13:09,897:INFO:Calculating mean and std
2020-10-19 00:13:09,900:INFO:Creating metrics dataframe
2020-10-19 00:13:09,912:INFO:Uploading results into container
2020-10-19 00:13:09,912:INFO:Uploading model into container now
2020-10-19 00:13:09,912:INFO:create_model_container: 3
2020-10-19 00:13:09,912:INFO:master_model_container: 3
2020-10-19 00:13:09,913:INFO:display_container: 1
2020-10-19 00:13:09,914:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=10, splitter='best')
2020-10-19 00:13:09,914:INFO:create_model() succesfully completed......................................
2020-10-19 00:13:10,093:INFO:SubProcess create_model() end ==================================
2020-10-19 00:13:10,093:INFO:Creating metrics dataframe
2020-10-19 00:13:10,135:INFO:Initializing Random Forest Regressor
2020-10-19 00:13:10,135:INFO:Total runtime is 1.0757761438687643 minutes
2020-10-19 00:13:10,157:INFO:SubProcess create_model() called ==================================
2020-10-19 00:13:10,158:INFO:Initializing create_model()
2020-10-19 00:13:10,159:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=10, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DB79245F88>, kwargs={})
2020-10-19 00:13:10,159:INFO:Checking exceptions
2020-10-19 00:13:10,159:INFO:Importing libraries
2020-10-19 00:13:10,159:INFO:Copying training dataset
2020-10-19 00:13:10,171:INFO:Defining folds
2020-10-19 00:13:10,171:INFO:Declaring metric variables
2020-10-19 00:13:10,187:INFO:Importing untrained model
2020-10-19 00:13:10,204:INFO:Random Forest Regressor Imported succesfully
2020-10-19 00:13:10,236:INFO:Starting cross validation
2020-10-19 00:13:10,237:INFO:Cross validating with n_jobs=-1
2020-10-19 00:29:15,210:INFO:PyCaret Supervised Module
2020-10-19 00:29:15,210:INFO:ML Usecase: regression
2020-10-19 00:29:15,210:INFO:version 2.2.0
2020-10-19 00:29:15,210:INFO:Initializing setup()
2020-10-19 00:29:15,210:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 00:29:15,210:INFO:Checking environment
2020-10-19 00:29:15,210:INFO:python_version: 3.7.6
2020-10-19 00:29:15,210:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 00:29:15,210:INFO:machine: AMD64
2020-10-19 00:29:15,211:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 00:29:15,211:INFO:Memory: svmem(total=16969158656, available=11459612672, percent=32.5, used=5509545984, free=11459612672)
2020-10-19 00:29:15,211:INFO:Physical Core: 4
2020-10-19 00:29:15,211:INFO:Logical Core: 8
2020-10-19 00:29:15,211:INFO:Checking libraries
2020-10-19 00:29:15,211:INFO:pd==1.1.3
2020-10-19 00:29:15,211:INFO:numpy==1.18.1
2020-10-19 00:29:15,211:INFO:sklearn==0.23.2
2020-10-19 00:29:16,055:INFO:xgboost==1.2.1
2020-10-19 00:29:16,055:INFO:lightgbm==2.3.1
2020-10-19 00:29:16,240:INFO:catboost==0.24.2
2020-10-19 00:29:17,329:INFO:mlflow==1.11.0
2020-10-19 00:29:17,330:INFO:Checking Exceptions
2020-10-19 00:29:17,330:INFO:Declaring global variables
2020-10-19 00:29:17,330:INFO:USI: 7a50
2020-10-19 00:29:17,330:INFO:pycaret_globals: {'fold_groups_param', 'master_model_container', 'fix_imbalance_method_param', 'pycaret_globals', 'html_param', 'create_model_container', 'log_plots_param', 'imputation_regressor', 'exp_name_log', 'fold_param', 'prep_pipe', '_all_models_internal', 'display_container', 'y', '_internal_pipeline', 'y_train', 'transform_target_param', '_ml_usecase', 'y_test', 'seed', 'iterative_imputation_iters_param', 'stratify_param', 'data_before_preprocess', 'X', '_all_metrics', 'X_test', 'transform_target_method_param', 'n_jobs_param', 'USI', 'target_param', 'fold_shuffle_param', 'fix_imbalance_param', '_gpu_n_jobs_param', 'experiment__', 'X_train', '_all_models', 'logging_param', 'gpu_param', 'fold_generator', 'imputation_classifier'}
2020-10-19 00:29:17,330:INFO:Preparing display monitor
2020-10-19 00:29:17,331:INFO:Importing libraries
2020-10-19 00:29:17,331:INFO:Copying data for preprocessing
2020-10-19 00:29:17,591:INFO:Declaring preprocessing parameters
2020-10-19 00:29:17,837:INFO:Creating preprocessing pipeline
2020-10-19 00:29:19,823:INFO:Preprocessing pipeline created successfully
2020-10-19 00:29:19,823:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 00:29:19,823:INFO:Creating global containers
2020-10-19 00:29:19,825:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 00:29:32,450:INFO:Creating grid variables
2020-10-19 00:29:32,508:INFO:create_model_container: 0
2020-10-19 00:29:32,508:INFO:master_model_container: 0
2020-10-19 00:29:32,508:INFO:display_container: 0
2020-10-19 00:29:32,513:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 00:29:32,514:INFO:setup() succesfully completed......................................
2020-10-19 00:29:32,625:INFO:Initializing compare_models()
2020-10-19 00:29:32,625:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 00:29:32,625:INFO:Checking exceptions
2020-10-19 00:29:32,625:INFO:Preparing display monitor
2020-10-19 00:29:32,625:INFO:Preparing display monitor
2020-10-19 00:29:32,662:INFO:Initializing Linear Regression
2020-10-19 00:29:32,662:INFO:Total runtime is 0.0 minutes
2020-10-19 00:29:32,671:INFO:SubProcess create_model() called ==================================
2020-10-19 00:29:32,671:INFO:Initializing create_model()
2020-10-19 00:29:32,671:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F87C00EC8>, kwargs={})
2020-10-19 00:29:32,671:INFO:Checking exceptions
2020-10-19 00:29:32,672:INFO:Importing libraries
2020-10-19 00:29:32,672:INFO:Copying training dataset
2020-10-19 00:29:32,679:INFO:Defining folds
2020-10-19 00:29:32,680:INFO:Declaring metric variables
2020-10-19 00:29:32,690:INFO:Importing untrained model
2020-10-19 00:29:32,700:INFO:Linear Regression Imported succesfully
2020-10-19 00:29:32,725:INFO:Starting cross validation
2020-10-19 00:29:32,731:INFO:Cross validating with n_jobs=-1
2020-10-19 00:29:38,828:INFO:Calculating mean and std
2020-10-19 00:29:38,830:INFO:Creating metrics dataframe
2020-10-19 00:29:38,842:INFO:Uploading results into container
2020-10-19 00:29:38,842:INFO:Uploading model into container now
2020-10-19 00:29:38,842:INFO:create_model_container: 1
2020-10-19 00:29:38,842:INFO:master_model_container: 1
2020-10-19 00:29:38,842:INFO:display_container: 1
2020-10-19 00:29:38,842:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 00:29:38,843:INFO:create_model() succesfully completed......................................
2020-10-19 00:29:38,978:INFO:SubProcess create_model() end ==================================
2020-10-19 00:29:38,978:INFO:Creating metrics dataframe
2020-10-19 00:29:39,005:INFO:Initializing K Neighbors Regressor
2020-10-19 00:29:39,005:INFO:Total runtime is 0.10571726957956949 minutes
2020-10-19 00:29:39,019:INFO:SubProcess create_model() called ==================================
2020-10-19 00:29:39,020:INFO:Initializing create_model()
2020-10-19 00:29:39,020:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F87C00EC8>, kwargs={})
2020-10-19 00:29:39,020:INFO:Checking exceptions
2020-10-19 00:29:39,020:INFO:Importing libraries
2020-10-19 00:29:39,021:INFO:Copying training dataset
2020-10-19 00:29:39,033:INFO:Defining folds
2020-10-19 00:29:39,034:INFO:Declaring metric variables
2020-10-19 00:29:39,050:INFO:Importing untrained model
2020-10-19 00:29:39,064:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 00:29:39,093:INFO:Starting cross validation
2020-10-19 00:29:39,094:INFO:Cross validating with n_jobs=-1
2020-10-19 00:30:00,826:INFO:Calculating mean and std
2020-10-19 00:30:00,828:INFO:Creating metrics dataframe
2020-10-19 00:30:00,837:INFO:Uploading results into container
2020-10-19 00:30:00,838:INFO:Uploading model into container now
2020-10-19 00:30:00,838:INFO:create_model_container: 2
2020-10-19 00:30:00,838:INFO:master_model_container: 2
2020-10-19 00:30:00,838:INFO:display_container: 1
2020-10-19 00:30:00,839:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 00:30:00,839:INFO:create_model() succesfully completed......................................
2020-10-19 00:30:00,999:INFO:SubProcess create_model() end ==================================
2020-10-19 00:30:00,999:INFO:Creating metrics dataframe
2020-10-19 00:30:01,029:INFO:Initializing Decision Tree Regressor
2020-10-19 00:30:01,029:INFO:Total runtime is 0.47278589407602944 minutes
2020-10-19 00:30:01,046:INFO:SubProcess create_model() called ==================================
2020-10-19 00:30:01,046:INFO:Initializing create_model()
2020-10-19 00:30:01,046:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F87C00EC8>, kwargs={})
2020-10-19 00:30:01,046:INFO:Checking exceptions
2020-10-19 00:30:01,047:INFO:Importing libraries
2020-10-19 00:30:01,047:INFO:Copying training dataset
2020-10-19 00:30:01,059:INFO:Defining folds
2020-10-19 00:30:01,059:INFO:Declaring metric variables
2020-10-19 00:30:01,073:INFO:Importing untrained model
2020-10-19 00:30:01,085:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 00:30:01,112:INFO:Starting cross validation
2020-10-19 00:30:01,113:INFO:Cross validating with n_jobs=-1
2020-10-19 00:30:27,550:INFO:Calculating mean and std
2020-10-19 00:30:27,554:INFO:Creating metrics dataframe
2020-10-19 00:30:27,564:INFO:Uploading results into container
2020-10-19 00:30:27,564:INFO:Uploading model into container now
2020-10-19 00:30:27,564:INFO:create_model_container: 3
2020-10-19 00:30:27,565:INFO:master_model_container: 3
2020-10-19 00:30:27,565:INFO:display_container: 1
2020-10-19 00:30:27,566:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 00:30:27,566:INFO:create_model() succesfully completed......................................
2020-10-19 00:30:27,690:INFO:SubProcess create_model() end ==================================
2020-10-19 00:30:27,690:INFO:Creating metrics dataframe
2020-10-19 00:30:27,715:INFO:Initializing Random Forest Regressor
2020-10-19 00:30:27,715:INFO:Total runtime is 0.9175450642903646 minutes
2020-10-19 00:30:27,729:INFO:SubProcess create_model() called ==================================
2020-10-19 00:30:27,730:INFO:Initializing create_model()
2020-10-19 00:30:27,730:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F87C00EC8>, kwargs={})
2020-10-19 00:30:27,730:INFO:Checking exceptions
2020-10-19 00:30:27,730:INFO:Importing libraries
2020-10-19 00:30:27,731:INFO:Copying training dataset
2020-10-19 00:30:27,741:INFO:Defining folds
2020-10-19 00:30:27,741:INFO:Declaring metric variables
2020-10-19 00:30:27,752:INFO:Importing untrained model
2020-10-19 00:30:27,763:INFO:Random Forest Regressor Imported succesfully
2020-10-19 00:30:27,791:INFO:Starting cross validation
2020-10-19 00:30:27,791:INFO:Cross validating with n_jobs=-1
2020-10-19 00:54:21,360:INFO:Calculating mean and std
2020-10-19 00:54:21,389:INFO:Creating metrics dataframe
2020-10-19 00:54:21,421:INFO:Uploading results into container
2020-10-19 00:54:21,421:INFO:Uploading model into container now
2020-10-19 00:54:21,421:INFO:create_model_container: 4
2020-10-19 00:54:21,422:INFO:master_model_container: 4
2020-10-19 00:54:21,422:INFO:display_container: 1
2020-10-19 00:54:21,426:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 00:54:21,426:INFO:create_model() succesfully completed......................................
2020-10-19 00:54:21,961:INFO:SubProcess create_model() end ==================================
2020-10-19 00:54:21,961:INFO:Creating metrics dataframe
2020-10-19 00:54:21,988:INFO:Initializing Extra Trees Regressor
2020-10-19 00:54:21,988:INFO:Total runtime is 24.822093995412192 minutes
2020-10-19 00:54:21,995:INFO:SubProcess create_model() called ==================================
2020-10-19 00:54:21,995:INFO:Initializing create_model()
2020-10-19 00:54:21,995:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F87C00EC8>, kwargs={})
2020-10-19 00:54:21,995:INFO:Checking exceptions
2020-10-19 00:54:21,995:INFO:Importing libraries
2020-10-19 00:54:21,995:INFO:Copying training dataset
2020-10-19 00:54:23,286:INFO:Defining folds
2020-10-19 00:54:23,286:INFO:Declaring metric variables
2020-10-19 00:54:23,292:INFO:Importing untrained model
2020-10-19 00:54:23,299:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 00:54:23,313:INFO:Starting cross validation
2020-10-19 00:54:23,313:INFO:Cross validating with n_jobs=-1
2020-10-19 01:06:38,377:INFO:Calculating mean and std
2020-10-19 01:06:38,640:INFO:Creating metrics dataframe
2020-10-19 01:06:38,753:INFO:Uploading results into container
2020-10-19 01:06:38,753:INFO:Uploading model into container now
2020-10-19 01:06:38,754:INFO:create_model_container: 5
2020-10-19 01:06:38,754:INFO:master_model_container: 5
2020-10-19 01:06:38,754:INFO:display_container: 1
2020-10-19 01:06:38,769:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 01:06:38,769:INFO:create_model() succesfully completed......................................
2020-10-19 01:06:39,883:INFO:SubProcess create_model() end ==================================
2020-10-19 01:06:39,884:INFO:Creating metrics dataframe
2020-10-19 01:06:39,920:INFO:Initializing MLP Regressor
2020-10-19 01:06:39,920:INFO:Total runtime is 37.12096980412801 minutes
2020-10-19 01:06:39,927:INFO:SubProcess create_model() called ==================================
2020-10-19 01:06:39,927:INFO:Initializing create_model()
2020-10-19 01:06:39,927:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F87C00EC8>, kwargs={})
2020-10-19 01:06:39,927:INFO:Checking exceptions
2020-10-19 01:06:39,927:INFO:Importing libraries
2020-10-19 01:06:39,928:INFO:Copying training dataset
2020-10-19 01:06:40,057:INFO:Defining folds
2020-10-19 01:06:40,057:INFO:Declaring metric variables
2020-10-19 01:06:40,066:INFO:Importing untrained model
2020-10-19 01:06:40,073:INFO:MLP Regressor Imported succesfully
2020-10-19 01:06:40,088:INFO:Starting cross validation
2020-10-19 01:06:40,088:INFO:Cross validating with n_jobs=-1
2020-10-19 01:07:45,599:INFO:Calculating mean and std
2020-10-19 01:07:45,602:INFO:Creating metrics dataframe
2020-10-19 01:07:45,611:INFO:Uploading results into container
2020-10-19 01:07:45,611:INFO:Uploading model into container now
2020-10-19 01:07:45,611:INFO:create_model_container: 6
2020-10-19 01:07:45,611:INFO:master_model_container: 6
2020-10-19 01:07:45,612:INFO:display_container: 1
2020-10-19 01:07:45,614:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 01:07:45,614:INFO:create_model() succesfully completed......................................
2020-10-19 01:07:45,717:INFO:SubProcess create_model() end ==================================
2020-10-19 01:07:45,717:INFO:Creating metrics dataframe
2020-10-19 01:07:45,739:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 01:07:45,739:INFO:Total runtime is 38.21795239448547 minutes
2020-10-19 01:07:45,749:INFO:SubProcess create_model() called ==================================
2020-10-19 01:07:45,750:INFO:Initializing create_model()
2020-10-19 01:07:45,750:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F87C00EC8>, kwargs={})
2020-10-19 01:07:45,750:INFO:Checking exceptions
2020-10-19 01:07:45,750:INFO:Importing libraries
2020-10-19 01:07:45,750:INFO:Copying training dataset
2020-10-19 01:07:45,758:INFO:Defining folds
2020-10-19 01:07:45,758:INFO:Declaring metric variables
2020-10-19 01:07:45,766:INFO:Importing untrained model
2020-10-19 01:07:45,773:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 01:07:45,790:INFO:Starting cross validation
2020-10-19 01:07:45,791:INFO:Cross validating with n_jobs=-1
2020-10-19 01:08:00,038:INFO:Calculating mean and std
2020-10-19 01:08:00,040:INFO:Creating metrics dataframe
2020-10-19 01:08:00,045:INFO:Uploading results into container
2020-10-19 01:08:00,045:INFO:Uploading model into container now
2020-10-19 01:08:00,045:INFO:create_model_container: 7
2020-10-19 01:08:00,045:INFO:master_model_container: 7
2020-10-19 01:08:00,045:INFO:display_container: 1
2020-10-19 01:08:00,046:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 01:08:00,046:INFO:create_model() succesfully completed......................................
2020-10-19 01:08:00,142:INFO:SubProcess create_model() end ==================================
2020-10-19 01:08:00,142:INFO:Creating metrics dataframe
2020-10-19 01:08:00,165:INFO:Initializing CatBoost Regressor
2020-10-19 01:08:00,166:INFO:Total runtime is 38.45840187867482 minutes
2020-10-19 01:08:00,175:INFO:SubProcess create_model() called ==================================
2020-10-19 01:08:00,175:INFO:Initializing create_model()
2020-10-19 01:08:00,175:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F87C00EC8>, kwargs={})
2020-10-19 01:08:00,175:INFO:Checking exceptions
2020-10-19 01:08:00,175:INFO:Importing libraries
2020-10-19 01:08:00,175:INFO:Copying training dataset
2020-10-19 01:08:00,185:INFO:Defining folds
2020-10-19 01:08:00,185:INFO:Declaring metric variables
2020-10-19 01:08:00,195:INFO:Importing untrained model
2020-10-19 01:08:00,212:INFO:CatBoost Regressor Imported succesfully
2020-10-19 01:08:00,238:INFO:Starting cross validation
2020-10-19 01:08:00,238:INFO:Cross validating with n_jobs=-1
2020-10-19 01:12:54,394:INFO:Calculating mean and std
2020-10-19 01:12:54,395:INFO:Creating metrics dataframe
2020-10-19 01:12:54,400:INFO:Uploading results into container
2020-10-19 01:12:54,400:INFO:Uploading model into container now
2020-10-19 01:12:54,400:INFO:create_model_container: 8
2020-10-19 01:12:54,400:INFO:master_model_container: 8
2020-10-19 01:12:54,400:INFO:display_container: 1
2020-10-19 01:12:54,400:INFO:<catboost.core.CatBoostRegressor object at 0x0000013F8C997388>
2020-10-19 01:12:54,401:INFO:create_model() succesfully completed......................................
2020-10-19 01:12:54,514:INFO:SubProcess create_model() end ==================================
2020-10-19 01:12:54,514:INFO:Creating metrics dataframe
2020-10-19 01:12:54,556:INFO:Initializing create_model()
2020-10-19 01:12:54,556:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 01:12:54,556:INFO:Checking exceptions
2020-10-19 01:12:54,556:INFO:Importing libraries
2020-10-19 01:12:54,556:INFO:Copying training dataset
2020-10-19 01:12:54,564:INFO:Defining folds
2020-10-19 01:12:54,564:INFO:Declaring metric variables
2020-10-19 01:12:54,564:INFO:Importing untrained model
2020-10-19 01:12:54,564:INFO:Declaring custom model
2020-10-19 01:12:54,565:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 01:12:54,565:INFO:Cross validation set to False
2020-10-19 01:12:54,565:INFO:Fitting Model
2020-10-19 01:13:42,168:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 01:13:42,168:INFO:create_models() succesfully completed......................................
2020-10-19 01:13:42,355:INFO:create_model_container: 8
2020-10-19 01:13:42,355:INFO:master_model_container: 8
2020-10-19 01:13:42,355:INFO:display_container: 1
2020-10-19 01:13:42,356:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 01:13:42,357:INFO:compare_models() succesfully completed......................................
2020-10-19 01:14:23,939:INFO:PyCaret Supervised Module
2020-10-19 01:14:23,939:INFO:ML Usecase: regression
2020-10-19 01:14:23,939:INFO:version 2.2.0
2020-10-19 01:14:23,939:INFO:Initializing setup()
2020-10-19 01:14:23,939:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 01:14:23,939:INFO:Checking environment
2020-10-19 01:14:23,939:INFO:python_version: 3.7.6
2020-10-19 01:14:23,939:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 01:14:23,940:INFO:machine: AMD64
2020-10-19 01:14:23,940:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 01:14:23,941:INFO:Memory: svmem(total=16969158656, available=9566011392, percent=43.6, used=7403147264, free=9566011392)
2020-10-19 01:14:23,942:INFO:Physical Core: 4
2020-10-19 01:14:23,942:INFO:Logical Core: 8
2020-10-19 01:14:23,942:INFO:Checking libraries
2020-10-19 01:14:23,943:INFO:pd==1.1.3
2020-10-19 01:14:23,943:INFO:numpy==1.18.1
2020-10-19 01:14:23,943:INFO:sklearn==0.23.2
2020-10-19 01:14:23,943:INFO:xgboost==1.2.1
2020-10-19 01:14:23,943:INFO:lightgbm==2.3.1
2020-10-19 01:14:23,943:INFO:catboost==0.24.2
2020-10-19 01:14:23,943:INFO:mlflow==1.11.0
2020-10-19 01:14:23,943:INFO:Checking Exceptions
2020-10-19 01:14:23,943:INFO:Declaring global variables
2020-10-19 01:14:23,943:INFO:USI: 8f02
2020-10-19 01:14:23,943:INFO:pycaret_globals: {'fold_groups_param', 'master_model_container', 'fix_imbalance_method_param', 'pycaret_globals', 'html_param', 'create_model_container', 'log_plots_param', 'imputation_regressor', 'exp_name_log', 'fold_param', 'prep_pipe', '_all_models_internal', 'display_container', 'y', '_internal_pipeline', 'y_train', 'transform_target_param', '_ml_usecase', 'y_test', 'seed', 'iterative_imputation_iters_param', 'stratify_param', 'data_before_preprocess', 'X', '_all_metrics', 'X_test', 'transform_target_method_param', 'n_jobs_param', 'USI', 'target_param', 'fold_shuffle_param', 'fix_imbalance_param', '_gpu_n_jobs_param', 'experiment__', 'X_train', '_all_models', 'logging_param', 'gpu_param', 'fold_generator', 'imputation_classifier'}
2020-10-19 01:14:23,943:INFO:Preparing display monitor
2020-10-19 01:14:23,943:INFO:Importing libraries
2020-10-19 01:14:23,943:INFO:Copying data for preprocessing
2020-10-19 01:14:24,182:INFO:Declaring preprocessing parameters
2020-10-19 01:14:24,411:INFO:Creating preprocessing pipeline
2020-10-19 01:14:25,960:INFO:Preprocessing pipeline created successfully
2020-10-19 01:14:25,960:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 01:14:25,960:INFO:Creating global containers
2020-10-19 01:14:25,960:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 01:14:37,446:INFO:Creating grid variables
2020-10-19 01:14:37,494:INFO:create_model_container: 0
2020-10-19 01:14:37,494:INFO:master_model_container: 0
2020-10-19 01:14:37,494:INFO:display_container: 0
2020-10-19 01:14:37,498:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 01:14:37,498:INFO:setup() succesfully completed......................................
2020-10-19 01:14:37,631:INFO:Initializing compare_models()
2020-10-19 01:14:37,631:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 01:14:37,631:INFO:Checking exceptions
2020-10-19 01:14:37,631:INFO:Preparing display monitor
2020-10-19 01:14:37,631:INFO:Preparing display monitor
2020-10-19 01:14:37,660:INFO:Initializing Linear Regression
2020-10-19 01:14:37,660:INFO:Total runtime is 0.0 minutes
2020-10-19 01:14:37,667:INFO:SubProcess create_model() called ==================================
2020-10-19 01:14:37,667:INFO:Initializing create_model()
2020-10-19 01:14:37,667:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24E9108>, kwargs={})
2020-10-19 01:14:37,667:INFO:Checking exceptions
2020-10-19 01:14:37,667:INFO:Importing libraries
2020-10-19 01:14:37,667:INFO:Copying training dataset
2020-10-19 01:14:37,678:INFO:Defining folds
2020-10-19 01:14:37,678:INFO:Declaring metric variables
2020-10-19 01:14:37,686:INFO:Importing untrained model
2020-10-19 01:14:37,696:INFO:Linear Regression Imported succesfully
2020-10-19 01:14:37,712:INFO:Starting cross validation
2020-10-19 01:14:37,712:INFO:Cross validating with n_jobs=-1
2020-10-19 01:14:38,756:INFO:Calculating mean and std
2020-10-19 01:14:38,758:INFO:Creating metrics dataframe
2020-10-19 01:14:38,762:INFO:Uploading results into container
2020-10-19 01:14:38,763:INFO:Uploading model into container now
2020-10-19 01:14:38,763:INFO:create_model_container: 1
2020-10-19 01:14:38,763:INFO:master_model_container: 1
2020-10-19 01:14:38,763:INFO:display_container: 1
2020-10-19 01:14:38,763:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 01:14:38,763:INFO:create_model() succesfully completed......................................
2020-10-19 01:14:38,872:INFO:SubProcess create_model() end ==================================
2020-10-19 01:14:38,872:INFO:Creating metrics dataframe
2020-10-19 01:14:38,893:INFO:Initializing K Neighbors Regressor
2020-10-19 01:14:38,893:INFO:Total runtime is 0.02056272824605306 minutes
2020-10-19 01:14:38,902:INFO:SubProcess create_model() called ==================================
2020-10-19 01:14:38,903:INFO:Initializing create_model()
2020-10-19 01:14:38,903:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24E9108>, kwargs={})
2020-10-19 01:14:38,903:INFO:Checking exceptions
2020-10-19 01:14:38,903:INFO:Importing libraries
2020-10-19 01:14:38,903:INFO:Copying training dataset
2020-10-19 01:14:38,914:INFO:Defining folds
2020-10-19 01:14:38,914:INFO:Declaring metric variables
2020-10-19 01:14:38,925:INFO:Importing untrained model
2020-10-19 01:14:38,932:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 01:14:38,951:INFO:Starting cross validation
2020-10-19 01:14:38,952:INFO:Cross validating with n_jobs=-1
2020-10-19 01:14:58,321:INFO:Calculating mean and std
2020-10-19 01:14:58,325:INFO:Creating metrics dataframe
2020-10-19 01:14:58,343:INFO:Uploading results into container
2020-10-19 01:14:58,344:INFO:Uploading model into container now
2020-10-19 01:14:58,344:INFO:create_model_container: 2
2020-10-19 01:14:58,344:INFO:master_model_container: 2
2020-10-19 01:14:58,344:INFO:display_container: 1
2020-10-19 01:14:58,346:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 01:14:58,346:INFO:create_model() succesfully completed......................................
2020-10-19 01:14:58,462:INFO:SubProcess create_model() end ==================================
2020-10-19 01:14:58,462:INFO:Creating metrics dataframe
2020-10-19 01:14:58,481:INFO:Initializing Decision Tree Regressor
2020-10-19 01:14:58,481:INFO:Total runtime is 0.3470292886098226 minutes
2020-10-19 01:14:58,489:INFO:SubProcess create_model() called ==================================
2020-10-19 01:14:58,490:INFO:Initializing create_model()
2020-10-19 01:14:58,490:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24E9108>, kwargs={})
2020-10-19 01:14:58,490:INFO:Checking exceptions
2020-10-19 01:14:58,490:INFO:Importing libraries
2020-10-19 01:14:58,490:INFO:Copying training dataset
2020-10-19 01:14:58,498:INFO:Defining folds
2020-10-19 01:14:58,498:INFO:Declaring metric variables
2020-10-19 01:14:58,507:INFO:Importing untrained model
2020-10-19 01:14:58,513:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 01:14:58,537:INFO:Starting cross validation
2020-10-19 01:14:58,538:INFO:Cross validating with n_jobs=-1
2020-10-19 01:15:28,267:INFO:Calculating mean and std
2020-10-19 01:15:28,271:INFO:Creating metrics dataframe
2020-10-19 01:15:28,283:INFO:Uploading results into container
2020-10-19 01:15:28,284:INFO:Uploading model into container now
2020-10-19 01:15:28,284:INFO:create_model_container: 3
2020-10-19 01:15:28,284:INFO:master_model_container: 3
2020-10-19 01:15:28,284:INFO:display_container: 1
2020-10-19 01:15:28,285:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 01:15:28,285:INFO:create_model() succesfully completed......................................
2020-10-19 01:15:28,381:INFO:SubProcess create_model() end ==================================
2020-10-19 01:15:28,381:INFO:Creating metrics dataframe
2020-10-19 01:15:28,400:INFO:Initializing Random Forest Regressor
2020-10-19 01:15:28,400:INFO:Total runtime is 0.845674971739451 minutes
2020-10-19 01:15:28,409:INFO:SubProcess create_model() called ==================================
2020-10-19 01:15:28,410:INFO:Initializing create_model()
2020-10-19 01:15:28,410:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24E9108>, kwargs={})
2020-10-19 01:15:28,410:INFO:Checking exceptions
2020-10-19 01:15:28,410:INFO:Importing libraries
2020-10-19 01:15:28,410:INFO:Copying training dataset
2020-10-19 01:15:28,418:INFO:Defining folds
2020-10-19 01:15:28,418:INFO:Declaring metric variables
2020-10-19 01:15:28,426:INFO:Importing untrained model
2020-10-19 01:15:28,433:INFO:Random Forest Regressor Imported succesfully
2020-10-19 01:15:28,451:INFO:Starting cross validation
2020-10-19 01:15:28,452:INFO:Cross validating with n_jobs=-1
2020-10-19 01:42:39,205:INFO:Calculating mean and std
2020-10-19 01:42:39,267:INFO:Creating metrics dataframe
2020-10-19 01:42:39,341:INFO:Uploading results into container
2020-10-19 01:42:39,343:INFO:Uploading model into container now
2020-10-19 01:42:39,343:INFO:create_model_container: 4
2020-10-19 01:42:39,343:INFO:master_model_container: 4
2020-10-19 01:42:39,343:INFO:display_container: 1
2020-10-19 01:42:39,352:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 01:42:39,353:INFO:create_model() succesfully completed......................................
2020-10-19 01:42:40,417:INFO:SubProcess create_model() end ==================================
2020-10-19 01:42:40,417:INFO:Creating metrics dataframe
2020-10-19 01:42:40,456:INFO:Initializing Extra Trees Regressor
2020-10-19 01:42:40,456:INFO:Total runtime is 28.046604530016584 minutes
2020-10-19 01:42:40,467:INFO:SubProcess create_model() called ==================================
2020-10-19 01:42:40,467:INFO:Initializing create_model()
2020-10-19 01:42:40,467:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24E9108>, kwargs={})
2020-10-19 01:42:40,467:INFO:Checking exceptions
2020-10-19 01:42:40,467:INFO:Importing libraries
2020-10-19 01:42:40,467:INFO:Copying training dataset
2020-10-19 01:42:40,479:INFO:Defining folds
2020-10-19 01:42:40,479:INFO:Declaring metric variables
2020-10-19 01:42:40,485:INFO:Importing untrained model
2020-10-19 01:42:40,492:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 01:42:40,504:INFO:Starting cross validation
2020-10-19 01:42:40,504:INFO:Cross validating with n_jobs=-1
2020-10-19 01:54:34,170:INFO:Calculating mean and std
2020-10-19 01:54:34,264:INFO:Creating metrics dataframe
2020-10-19 01:54:34,357:INFO:Uploading results into container
2020-10-19 01:54:34,357:INFO:Uploading model into container now
2020-10-19 01:54:34,358:INFO:create_model_container: 5
2020-10-19 01:54:34,358:INFO:master_model_container: 5
2020-10-19 01:54:34,358:INFO:display_container: 1
2020-10-19 01:54:34,371:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 01:54:34,371:INFO:create_model() succesfully completed......................................
2020-10-19 01:54:35,368:INFO:SubProcess create_model() end ==================================
2020-10-19 01:54:35,369:INFO:Creating metrics dataframe
2020-10-19 01:54:35,397:INFO:Initializing MLP Regressor
2020-10-19 01:54:35,397:INFO:Total runtime is 39.96229085922241 minutes
2020-10-19 01:54:35,405:INFO:SubProcess create_model() called ==================================
2020-10-19 01:54:35,405:INFO:Initializing create_model()
2020-10-19 01:54:35,405:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24E9108>, kwargs={})
2020-10-19 01:54:35,405:INFO:Checking exceptions
2020-10-19 01:54:35,405:INFO:Importing libraries
2020-10-19 01:54:35,407:INFO:Copying training dataset
2020-10-19 01:54:37,532:INFO:Defining folds
2020-10-19 01:54:37,532:INFO:Declaring metric variables
2020-10-19 01:54:37,538:INFO:Importing untrained model
2020-10-19 01:54:37,544:INFO:MLP Regressor Imported succesfully
2020-10-19 01:54:37,558:INFO:Starting cross validation
2020-10-19 01:54:37,559:INFO:Cross validating with n_jobs=-1
2020-10-19 01:55:35,696:INFO:Calculating mean and std
2020-10-19 01:55:35,700:INFO:Creating metrics dataframe
2020-10-19 01:55:35,713:INFO:Uploading results into container
2020-10-19 01:55:35,713:INFO:Uploading model into container now
2020-10-19 01:55:35,713:INFO:create_model_container: 6
2020-10-19 01:55:35,713:INFO:master_model_container: 6
2020-10-19 01:55:35,713:INFO:display_container: 1
2020-10-19 01:55:35,714:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 01:55:35,714:INFO:create_model() succesfully completed......................................
2020-10-19 01:55:35,815:INFO:SubProcess create_model() end ==================================
2020-10-19 01:55:35,815:INFO:Creating metrics dataframe
2020-10-19 01:55:35,840:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 01:55:35,840:INFO:Total runtime is 40.9696666320165 minutes
2020-10-19 01:55:35,849:INFO:SubProcess create_model() called ==================================
2020-10-19 01:55:35,849:INFO:Initializing create_model()
2020-10-19 01:55:35,849:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24E9108>, kwargs={})
2020-10-19 01:55:35,849:INFO:Checking exceptions
2020-10-19 01:55:35,850:INFO:Importing libraries
2020-10-19 01:55:35,850:INFO:Copying training dataset
2020-10-19 01:55:35,858:INFO:Defining folds
2020-10-19 01:55:35,859:INFO:Declaring metric variables
2020-10-19 01:55:35,869:INFO:Importing untrained model
2020-10-19 01:55:35,876:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 01:55:35,892:INFO:Starting cross validation
2020-10-19 01:55:35,892:INFO:Cross validating with n_jobs=-1
2020-10-19 01:55:46,137:INFO:Calculating mean and std
2020-10-19 01:55:46,142:INFO:Creating metrics dataframe
2020-10-19 01:55:46,153:INFO:Uploading results into container
2020-10-19 01:55:46,153:INFO:Uploading model into container now
2020-10-19 01:55:46,153:INFO:create_model_container: 7
2020-10-19 01:55:46,153:INFO:master_model_container: 7
2020-10-19 01:55:46,154:INFO:display_container: 1
2020-10-19 01:55:46,154:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 01:55:46,154:INFO:create_model() succesfully completed......................................
2020-10-19 01:55:46,252:INFO:SubProcess create_model() end ==================================
2020-10-19 01:55:46,252:INFO:Creating metrics dataframe
2020-10-19 01:55:46,273:INFO:Initializing CatBoost Regressor
2020-10-19 01:55:46,273:INFO:Total runtime is 41.14355179071426 minutes
2020-10-19 01:55:46,281:INFO:SubProcess create_model() called ==================================
2020-10-19 01:55:46,282:INFO:Initializing create_model()
2020-10-19 01:55:46,282:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24E9108>, kwargs={})
2020-10-19 01:55:46,282:INFO:Checking exceptions
2020-10-19 01:55:46,282:INFO:Importing libraries
2020-10-19 01:55:46,282:INFO:Copying training dataset
2020-10-19 01:55:46,291:INFO:Defining folds
2020-10-19 01:55:46,291:INFO:Declaring metric variables
2020-10-19 01:55:46,300:INFO:Importing untrained model
2020-10-19 01:55:46,312:INFO:CatBoost Regressor Imported succesfully
2020-10-19 01:55:46,329:INFO:Starting cross validation
2020-10-19 01:55:46,329:INFO:Cross validating with n_jobs=-1
2020-10-19 02:00:42,052:INFO:Calculating mean and std
2020-10-19 02:00:42,053:INFO:Creating metrics dataframe
2020-10-19 02:00:42,057:INFO:Uploading results into container
2020-10-19 02:00:42,057:INFO:Uploading model into container now
2020-10-19 02:00:42,057:INFO:create_model_container: 8
2020-10-19 02:00:42,057:INFO:master_model_container: 8
2020-10-19 02:00:42,057:INFO:display_container: 1
2020-10-19 02:00:42,057:INFO:<catboost.core.CatBoostRegressor object at 0x0000013F8CD03308>
2020-10-19 02:00:42,057:INFO:create_model() succesfully completed......................................
2020-10-19 02:00:42,162:INFO:SubProcess create_model() end ==================================
2020-10-19 02:00:42,163:INFO:Creating metrics dataframe
2020-10-19 02:00:42,210:INFO:Initializing create_model()
2020-10-19 02:00:42,211:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 02:00:42,211:INFO:Checking exceptions
2020-10-19 02:00:42,211:INFO:Importing libraries
2020-10-19 02:00:42,211:INFO:Copying training dataset
2020-10-19 02:00:42,220:INFO:Defining folds
2020-10-19 02:00:42,220:INFO:Declaring metric variables
2020-10-19 02:00:42,220:INFO:Importing untrained model
2020-10-19 02:00:42,220:INFO:Declaring custom model
2020-10-19 02:00:42,221:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 02:00:42,221:INFO:Cross validation set to False
2020-10-19 02:00:42,221:INFO:Fitting Model
2020-10-19 02:01:32,627:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 02:01:32,628:INFO:create_models() succesfully completed......................................
2020-10-19 02:01:32,833:INFO:create_model_container: 8
2020-10-19 02:01:32,833:INFO:master_model_container: 8
2020-10-19 02:01:32,833:INFO:display_container: 1
2020-10-19 02:01:32,834:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 02:01:32,834:INFO:compare_models() succesfully completed......................................
2020-10-19 02:01:42,331:INFO:PyCaret Supervised Module
2020-10-19 02:01:42,331:INFO:ML Usecase: regression
2020-10-19 02:01:42,331:INFO:version 2.2.0
2020-10-19 02:01:42,331:INFO:Initializing setup()
2020-10-19 02:01:42,331:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 02:01:42,331:INFO:Checking environment
2020-10-19 02:01:42,331:INFO:python_version: 3.7.6
2020-10-19 02:01:42,331:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 02:01:42,331:INFO:machine: AMD64
2020-10-19 02:01:42,331:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 02:01:42,332:INFO:Memory: svmem(total=16969158656, available=9314025472, percent=45.1, used=7655133184, free=9314025472)
2020-10-19 02:01:42,332:INFO:Physical Core: 4
2020-10-19 02:01:42,332:INFO:Logical Core: 8
2020-10-19 02:01:42,332:INFO:Checking libraries
2020-10-19 02:01:42,332:INFO:pd==1.1.3
2020-10-19 02:01:42,332:INFO:numpy==1.18.1
2020-10-19 02:01:42,332:INFO:sklearn==0.23.2
2020-10-19 02:01:42,332:INFO:xgboost==1.2.1
2020-10-19 02:01:42,332:INFO:lightgbm==2.3.1
2020-10-19 02:01:42,332:INFO:catboost==0.24.2
2020-10-19 02:01:42,332:INFO:mlflow==1.11.0
2020-10-19 02:01:42,332:INFO:Checking Exceptions
2020-10-19 02:01:42,332:INFO:Declaring global variables
2020-10-19 02:01:42,332:INFO:USI: 92d6
2020-10-19 02:01:42,332:INFO:pycaret_globals: {'fold_groups_param', 'master_model_container', 'fix_imbalance_method_param', 'pycaret_globals', 'html_param', 'create_model_container', 'log_plots_param', 'imputation_regressor', 'exp_name_log', 'fold_param', 'prep_pipe', '_all_models_internal', 'display_container', 'y', '_internal_pipeline', 'y_train', 'transform_target_param', '_ml_usecase', 'y_test', 'seed', 'iterative_imputation_iters_param', 'stratify_param', 'data_before_preprocess', 'X', '_all_metrics', 'X_test', 'transform_target_method_param', 'n_jobs_param', 'USI', 'target_param', 'fold_shuffle_param', 'fix_imbalance_param', '_gpu_n_jobs_param', 'experiment__', 'X_train', '_all_models', 'logging_param', 'gpu_param', 'fold_generator', 'imputation_classifier'}
2020-10-19 02:01:42,332:INFO:Preparing display monitor
2020-10-19 02:01:42,332:INFO:Importing libraries
2020-10-19 02:01:42,332:INFO:Copying data for preprocessing
2020-10-19 02:01:42,557:INFO:Declaring preprocessing parameters
2020-10-19 02:01:42,766:INFO:Creating preprocessing pipeline
2020-10-19 02:01:44,293:INFO:Preprocessing pipeline created successfully
2020-10-19 02:01:44,293:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 02:01:44,293:INFO:Creating global containers
2020-10-19 02:01:44,293:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 02:01:54,803:INFO:Creating grid variables
2020-10-19 02:01:54,848:INFO:create_model_container: 0
2020-10-19 02:01:54,848:INFO:master_model_container: 0
2020-10-19 02:01:54,848:INFO:display_container: 0
2020-10-19 02:01:54,852:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 02:01:54,852:INFO:setup() succesfully completed......................................
2020-10-19 02:01:54,978:INFO:Initializing compare_models()
2020-10-19 02:01:54,979:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 02:01:54,979:INFO:Checking exceptions
2020-10-19 02:01:54,979:INFO:Preparing display monitor
2020-10-19 02:01:54,979:INFO:Preparing display monitor
2020-10-19 02:01:54,999:INFO:Initializing Linear Regression
2020-10-19 02:01:54,999:INFO:Total runtime is 0.0 minutes
2020-10-19 02:01:55,006:INFO:SubProcess create_model() called ==================================
2020-10-19 02:01:55,006:INFO:Initializing create_model()
2020-10-19 02:01:55,006:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FEA3772C8>, kwargs={})
2020-10-19 02:01:55,006:INFO:Checking exceptions
2020-10-19 02:01:55,006:INFO:Importing libraries
2020-10-19 02:01:55,006:INFO:Copying training dataset
2020-10-19 02:01:55,013:INFO:Defining folds
2020-10-19 02:01:55,013:INFO:Declaring metric variables
2020-10-19 02:01:55,020:INFO:Importing untrained model
2020-10-19 02:01:55,026:INFO:Linear Regression Imported succesfully
2020-10-19 02:01:55,039:INFO:Starting cross validation
2020-10-19 02:01:55,039:INFO:Cross validating with n_jobs=-1
2020-10-19 02:01:55,908:INFO:Calculating mean and std
2020-10-19 02:01:55,909:INFO:Creating metrics dataframe
2020-10-19 02:01:55,914:INFO:Uploading results into container
2020-10-19 02:01:55,914:INFO:Uploading model into container now
2020-10-19 02:01:55,914:INFO:create_model_container: 1
2020-10-19 02:01:55,914:INFO:master_model_container: 1
2020-10-19 02:01:55,914:INFO:display_container: 1
2020-10-19 02:01:55,914:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 02:01:55,914:INFO:create_model() succesfully completed......................................
2020-10-19 02:01:56,004:INFO:SubProcess create_model() end ==================================
2020-10-19 02:01:56,004:INFO:Creating metrics dataframe
2020-10-19 02:01:56,019:INFO:Initializing K Neighbors Regressor
2020-10-19 02:01:56,019:INFO:Total runtime is 0.017005491256713866 minutes
2020-10-19 02:01:56,028:INFO:SubProcess create_model() called ==================================
2020-10-19 02:01:56,029:INFO:Initializing create_model()
2020-10-19 02:01:56,029:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FEA3772C8>, kwargs={})
2020-10-19 02:01:56,029:INFO:Checking exceptions
2020-10-19 02:01:56,029:INFO:Importing libraries
2020-10-19 02:01:56,029:INFO:Copying training dataset
2020-10-19 02:01:56,038:INFO:Defining folds
2020-10-19 02:01:56,038:INFO:Declaring metric variables
2020-10-19 02:01:56,047:INFO:Importing untrained model
2020-10-19 02:01:56,054:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 02:01:56,071:INFO:Starting cross validation
2020-10-19 02:01:56,072:INFO:Cross validating with n_jobs=-1
2020-10-19 02:02:14,060:INFO:Calculating mean and std
2020-10-19 02:02:14,064:INFO:Creating metrics dataframe
2020-10-19 02:02:14,079:INFO:Uploading results into container
2020-10-19 02:02:14,079:INFO:Uploading model into container now
2020-10-19 02:02:14,080:INFO:create_model_container: 2
2020-10-19 02:02:14,080:INFO:master_model_container: 2
2020-10-19 02:02:14,080:INFO:display_container: 1
2020-10-19 02:02:14,081:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 02:02:14,081:INFO:create_model() succesfully completed......................................
2020-10-19 02:02:14,203:INFO:SubProcess create_model() end ==================================
2020-10-19 02:02:14,203:INFO:Creating metrics dataframe
2020-10-19 02:02:14,221:INFO:Initializing Decision Tree Regressor
2020-10-19 02:02:14,221:INFO:Total runtime is 0.3203713615735372 minutes
2020-10-19 02:02:14,230:INFO:SubProcess create_model() called ==================================
2020-10-19 02:02:14,230:INFO:Initializing create_model()
2020-10-19 02:02:14,230:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FEA3772C8>, kwargs={})
2020-10-19 02:02:14,230:INFO:Checking exceptions
2020-10-19 02:02:14,230:INFO:Importing libraries
2020-10-19 02:02:14,230:INFO:Copying training dataset
2020-10-19 02:02:14,237:INFO:Defining folds
2020-10-19 02:02:14,237:INFO:Declaring metric variables
2020-10-19 02:02:14,244:INFO:Importing untrained model
2020-10-19 02:02:14,251:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 02:02:14,265:INFO:Starting cross validation
2020-10-19 02:02:14,266:INFO:Cross validating with n_jobs=-1
2020-10-19 02:02:37,342:INFO:Calculating mean and std
2020-10-19 02:02:37,345:INFO:Creating metrics dataframe
2020-10-19 02:02:37,357:INFO:Uploading results into container
2020-10-19 02:02:37,357:INFO:Uploading model into container now
2020-10-19 02:02:37,357:INFO:create_model_container: 3
2020-10-19 02:02:37,357:INFO:master_model_container: 3
2020-10-19 02:02:37,357:INFO:display_container: 1
2020-10-19 02:02:37,358:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 02:02:37,358:INFO:create_model() succesfully completed......................................
2020-10-19 02:02:37,451:INFO:SubProcess create_model() end ==================================
2020-10-19 02:02:37,451:INFO:Creating metrics dataframe
2020-10-19 02:02:37,469:INFO:Initializing Random Forest Regressor
2020-10-19 02:02:37,469:INFO:Total runtime is 0.7078449447949727 minutes
2020-10-19 02:02:37,476:INFO:SubProcess create_model() called ==================================
2020-10-19 02:02:37,477:INFO:Initializing create_model()
2020-10-19 02:02:37,477:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FEA3772C8>, kwargs={})
2020-10-19 02:02:37,477:INFO:Checking exceptions
2020-10-19 02:02:37,477:INFO:Importing libraries
2020-10-19 02:02:37,477:INFO:Copying training dataset
2020-10-19 02:02:37,485:INFO:Defining folds
2020-10-19 02:02:37,485:INFO:Declaring metric variables
2020-10-19 02:02:37,492:INFO:Importing untrained model
2020-10-19 02:02:37,499:INFO:Random Forest Regressor Imported succesfully
2020-10-19 02:02:37,513:INFO:Starting cross validation
2020-10-19 02:02:37,514:INFO:Cross validating with n_jobs=-1
2020-10-19 02:22:54,924:INFO:Calculating mean and std
2020-10-19 02:22:54,973:INFO:Creating metrics dataframe
2020-10-19 02:22:55,023:INFO:Uploading results into container
2020-10-19 02:22:55,024:INFO:Uploading model into container now
2020-10-19 02:22:55,024:INFO:create_model_container: 4
2020-10-19 02:22:55,024:INFO:master_model_container: 4
2020-10-19 02:22:55,024:INFO:display_container: 1
2020-10-19 02:22:55,032:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 02:22:55,032:INFO:create_model() succesfully completed......................................
2020-10-19 02:22:56,261:INFO:SubProcess create_model() end ==================================
2020-10-19 02:22:56,262:INFO:Creating metrics dataframe
2020-10-19 02:22:56,304:INFO:Initializing Extra Trees Regressor
2020-10-19 02:22:56,304:INFO:Total runtime is 21.02175602912903 minutes
2020-10-19 02:22:56,314:INFO:SubProcess create_model() called ==================================
2020-10-19 02:22:56,314:INFO:Initializing create_model()
2020-10-19 02:22:56,314:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FEA3772C8>, kwargs={})
2020-10-19 02:22:56,314:INFO:Checking exceptions
2020-10-19 02:22:56,314:INFO:Importing libraries
2020-10-19 02:22:56,314:INFO:Copying training dataset
2020-10-19 02:22:56,393:INFO:Defining folds
2020-10-19 02:22:56,394:INFO:Declaring metric variables
2020-10-19 02:22:56,403:INFO:Importing untrained model
2020-10-19 02:22:56,412:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 02:22:56,428:INFO:Starting cross validation
2020-10-19 02:22:56,429:INFO:Cross validating with n_jobs=-1
2020-10-19 02:43:37,303:INFO:Calculating mean and std
2020-10-19 02:43:37,392:INFO:Creating metrics dataframe
2020-10-19 02:43:37,469:INFO:Uploading results into container
2020-10-19 02:43:37,470:INFO:Uploading model into container now
2020-10-19 02:43:37,470:INFO:create_model_container: 5
2020-10-19 02:43:37,470:INFO:master_model_container: 5
2020-10-19 02:43:37,470:INFO:display_container: 1
2020-10-19 02:43:37,479:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 02:43:37,480:INFO:create_model() succesfully completed......................................
2020-10-19 02:43:39,200:INFO:SubProcess create_model() end ==================================
2020-10-19 02:43:39,200:INFO:Creating metrics dataframe
2020-10-19 02:43:39,241:INFO:Initializing MLP Regressor
2020-10-19 02:43:39,241:INFO:Total runtime is 41.73737868865331 minutes
2020-10-19 02:43:39,250:INFO:SubProcess create_model() called ==================================
2020-10-19 02:43:39,251:INFO:Initializing create_model()
2020-10-19 02:43:39,251:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FEA3772C8>, kwargs={})
2020-10-19 02:43:39,251:INFO:Checking exceptions
2020-10-19 02:43:39,251:INFO:Importing libraries
2020-10-19 02:43:39,251:INFO:Copying training dataset
2020-10-19 02:43:39,346:INFO:Defining folds
2020-10-19 02:43:39,346:INFO:Declaring metric variables
2020-10-19 02:43:39,352:INFO:Importing untrained model
2020-10-19 02:43:39,358:INFO:MLP Regressor Imported succesfully
2020-10-19 02:43:39,370:INFO:Starting cross validation
2020-10-19 02:43:39,370:INFO:Cross validating with n_jobs=-1
2020-10-19 02:44:37,891:INFO:Calculating mean and std
2020-10-19 02:44:37,892:INFO:Creating metrics dataframe
2020-10-19 02:44:37,896:INFO:Uploading results into container
2020-10-19 02:44:37,896:INFO:Uploading model into container now
2020-10-19 02:44:37,897:INFO:create_model_container: 6
2020-10-19 02:44:37,897:INFO:master_model_container: 6
2020-10-19 02:44:37,897:INFO:display_container: 1
2020-10-19 02:44:37,898:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 02:44:37,898:INFO:create_model() succesfully completed......................................
2020-10-19 02:44:37,985:INFO:SubProcess create_model() end ==================================
2020-10-19 02:44:37,986:INFO:Creating metrics dataframe
2020-10-19 02:44:38,010:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 02:44:38,010:INFO:Total runtime is 42.716858108838395 minutes
2020-10-19 02:44:38,018:INFO:SubProcess create_model() called ==================================
2020-10-19 02:44:38,018:INFO:Initializing create_model()
2020-10-19 02:44:38,019:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FEA3772C8>, kwargs={})
2020-10-19 02:44:38,019:INFO:Checking exceptions
2020-10-19 02:44:38,019:INFO:Importing libraries
2020-10-19 02:44:38,019:INFO:Copying training dataset
2020-10-19 02:44:38,026:INFO:Defining folds
2020-10-19 02:44:38,027:INFO:Declaring metric variables
2020-10-19 02:44:38,033:INFO:Importing untrained model
2020-10-19 02:44:38,039:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 02:44:38,056:INFO:Starting cross validation
2020-10-19 02:44:38,056:INFO:Cross validating with n_jobs=-1
2020-10-19 02:44:50,100:INFO:Calculating mean and std
2020-10-19 02:44:50,101:INFO:Creating metrics dataframe
2020-10-19 02:44:50,105:INFO:Uploading results into container
2020-10-19 02:44:50,105:INFO:Uploading model into container now
2020-10-19 02:44:50,105:INFO:create_model_container: 7
2020-10-19 02:44:50,105:INFO:master_model_container: 7
2020-10-19 02:44:50,105:INFO:display_container: 1
2020-10-19 02:44:50,105:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 02:44:50,105:INFO:create_model() succesfully completed......................................
2020-10-19 02:44:50,191:INFO:SubProcess create_model() end ==================================
2020-10-19 02:44:50,191:INFO:Creating metrics dataframe
2020-10-19 02:44:50,215:INFO:Initializing CatBoost Regressor
2020-10-19 02:44:50,215:INFO:Total runtime is 42.9202719926834 minutes
2020-10-19 02:44:50,223:INFO:SubProcess create_model() called ==================================
2020-10-19 02:44:50,223:INFO:Initializing create_model()
2020-10-19 02:44:50,224:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FEA3772C8>, kwargs={})
2020-10-19 02:44:50,224:INFO:Checking exceptions
2020-10-19 02:44:50,224:INFO:Importing libraries
2020-10-19 02:44:50,224:INFO:Copying training dataset
2020-10-19 02:44:50,231:INFO:Defining folds
2020-10-19 02:44:50,231:INFO:Declaring metric variables
2020-10-19 02:44:50,243:INFO:Importing untrained model
2020-10-19 02:44:50,256:INFO:CatBoost Regressor Imported succesfully
2020-10-19 02:44:50,279:INFO:Starting cross validation
2020-10-19 02:44:50,280:INFO:Cross validating with n_jobs=-1
2020-10-19 02:49:14,496:INFO:Calculating mean and std
2020-10-19 02:49:14,497:INFO:Creating metrics dataframe
2020-10-19 02:49:14,501:INFO:Uploading results into container
2020-10-19 02:49:14,502:INFO:Uploading model into container now
2020-10-19 02:49:14,502:INFO:create_model_container: 8
2020-10-19 02:49:14,502:INFO:master_model_container: 8
2020-10-19 02:49:14,502:INFO:display_container: 1
2020-10-19 02:49:14,502:INFO:<catboost.core.CatBoostRegressor object at 0x0000013F87C08688>
2020-10-19 02:49:14,502:INFO:create_model() succesfully completed......................................
2020-10-19 02:49:14,604:INFO:SubProcess create_model() end ==================================
2020-10-19 02:49:14,604:INFO:Creating metrics dataframe
2020-10-19 02:49:14,645:INFO:Initializing create_model()
2020-10-19 02:49:14,645:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 02:49:14,645:INFO:Checking exceptions
2020-10-19 02:49:14,645:INFO:Importing libraries
2020-10-19 02:49:14,646:INFO:Copying training dataset
2020-10-19 02:49:14,654:INFO:Defining folds
2020-10-19 02:49:14,654:INFO:Declaring metric variables
2020-10-19 02:49:14,654:INFO:Importing untrained model
2020-10-19 02:49:14,654:INFO:Declaring custom model
2020-10-19 02:49:14,654:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 02:49:14,655:INFO:Cross validation set to False
2020-10-19 02:49:14,655:INFO:Fitting Model
2020-10-19 02:49:58,854:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 02:49:58,855:INFO:create_models() succesfully completed......................................
2020-10-19 02:49:58,989:INFO:create_model_container: 8
2020-10-19 02:49:58,989:INFO:master_model_container: 8
2020-10-19 02:49:58,989:INFO:display_container: 1
2020-10-19 02:49:58,990:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 02:49:58,990:INFO:compare_models() succesfully completed......................................
2020-10-19 03:19:44,770:INFO:PyCaret Supervised Module
2020-10-19 03:19:44,770:INFO:ML Usecase: regression
2020-10-19 03:19:44,770:INFO:version 2.2.0
2020-10-19 03:19:44,770:INFO:Initializing setup()
2020-10-19 03:19:44,770:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 03:19:44,770:INFO:Checking environment
2020-10-19 03:19:44,770:INFO:python_version: 3.7.6
2020-10-19 03:19:44,770:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 03:19:44,770:INFO:machine: AMD64
2020-10-19 03:19:44,770:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 03:19:44,771:INFO:Memory: svmem(total=16969158656, available=9354645504, percent=44.9, used=7614513152, free=9354645504)
2020-10-19 03:19:44,771:INFO:Physical Core: 4
2020-10-19 03:19:44,771:INFO:Logical Core: 8
2020-10-19 03:19:44,771:INFO:Checking libraries
2020-10-19 03:19:44,771:INFO:pd==1.1.3
2020-10-19 03:19:44,771:INFO:numpy==1.18.1
2020-10-19 03:19:44,771:INFO:sklearn==0.23.2
2020-10-19 03:19:44,771:INFO:xgboost==1.2.1
2020-10-19 03:19:44,771:INFO:lightgbm==2.3.1
2020-10-19 03:19:44,771:INFO:catboost==0.24.2
2020-10-19 03:19:44,771:INFO:mlflow==1.11.0
2020-10-19 03:19:44,771:INFO:Checking Exceptions
2020-10-19 03:19:44,771:INFO:Declaring global variables
2020-10-19 03:19:44,771:INFO:USI: 4c4d
2020-10-19 03:19:44,771:INFO:pycaret_globals: {'fold_groups_param', 'master_model_container', 'fix_imbalance_method_param', 'pycaret_globals', 'html_param', 'create_model_container', 'log_plots_param', 'imputation_regressor', 'exp_name_log', 'fold_param', 'prep_pipe', '_all_models_internal', 'display_container', 'y', '_internal_pipeline', 'y_train', 'transform_target_param', '_ml_usecase', 'y_test', 'seed', 'iterative_imputation_iters_param', 'stratify_param', 'data_before_preprocess', 'X', '_all_metrics', 'X_test', 'transform_target_method_param', 'n_jobs_param', 'USI', 'target_param', 'fold_shuffle_param', 'fix_imbalance_param', '_gpu_n_jobs_param', 'experiment__', 'X_train', '_all_models', 'logging_param', 'gpu_param', 'fold_generator', 'imputation_classifier'}
2020-10-19 03:19:44,771:INFO:Preparing display monitor
2020-10-19 03:19:44,771:INFO:Importing libraries
2020-10-19 03:19:44,771:INFO:Copying data for preprocessing
2020-10-19 03:19:45,091:INFO:Declaring preprocessing parameters
2020-10-19 03:19:45,395:INFO:Creating preprocessing pipeline
2020-10-19 03:19:47,343:INFO:Preprocessing pipeline created successfully
2020-10-19 03:19:47,343:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 03:19:47,343:INFO:Creating global containers
2020-10-19 03:19:47,343:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 03:20:00,612:INFO:Creating grid variables
2020-10-19 03:20:00,673:INFO:create_model_container: 0
2020-10-19 03:20:00,674:INFO:master_model_container: 0
2020-10-19 03:20:00,674:INFO:display_container: 0
2020-10-19 03:20:00,677:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 03:20:00,677:INFO:setup() succesfully completed......................................
2020-10-19 03:20:00,825:INFO:Initializing compare_models()
2020-10-19 03:20:00,825:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 03:20:00,825:INFO:Checking exceptions
2020-10-19 03:20:00,825:INFO:Preparing display monitor
2020-10-19 03:20:00,825:INFO:Preparing display monitor
2020-10-19 03:20:00,846:INFO:Initializing Linear Regression
2020-10-19 03:20:00,846:INFO:Total runtime is 0.0 minutes
2020-10-19 03:20:00,854:INFO:SubProcess create_model() called ==================================
2020-10-19 03:20:00,854:INFO:Initializing create_model()
2020-10-19 03:20:00,855:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24ED948>, kwargs={})
2020-10-19 03:20:00,855:INFO:Checking exceptions
2020-10-19 03:20:00,855:INFO:Importing libraries
2020-10-19 03:20:00,855:INFO:Copying training dataset
2020-10-19 03:20:00,863:INFO:Defining folds
2020-10-19 03:20:00,863:INFO:Declaring metric variables
2020-10-19 03:20:00,869:INFO:Importing untrained model
2020-10-19 03:20:00,877:INFO:Linear Regression Imported succesfully
2020-10-19 03:20:00,891:INFO:Starting cross validation
2020-10-19 03:20:00,891:INFO:Cross validating with n_jobs=-1
2020-10-19 03:20:07,589:INFO:Calculating mean and std
2020-10-19 03:20:07,590:INFO:Creating metrics dataframe
2020-10-19 03:20:07,595:INFO:Uploading results into container
2020-10-19 03:20:07,595:INFO:Uploading model into container now
2020-10-19 03:20:07,595:INFO:create_model_container: 1
2020-10-19 03:20:07,595:INFO:master_model_container: 1
2020-10-19 03:20:07,595:INFO:display_container: 1
2020-10-19 03:20:07,595:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 03:20:07,595:INFO:create_model() succesfully completed......................................
2020-10-19 03:20:07,698:INFO:SubProcess create_model() end ==================================
2020-10-19 03:20:07,699:INFO:Creating metrics dataframe
2020-10-19 03:20:07,716:INFO:Initializing K Neighbors Regressor
2020-10-19 03:20:07,716:INFO:Total runtime is 0.1144977331161499 minutes
2020-10-19 03:20:07,727:INFO:SubProcess create_model() called ==================================
2020-10-19 03:20:07,728:INFO:Initializing create_model()
2020-10-19 03:20:07,728:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24ED948>, kwargs={})
2020-10-19 03:20:07,728:INFO:Checking exceptions
2020-10-19 03:20:07,728:INFO:Importing libraries
2020-10-19 03:20:07,728:INFO:Copying training dataset
2020-10-19 03:20:07,737:INFO:Defining folds
2020-10-19 03:20:07,737:INFO:Declaring metric variables
2020-10-19 03:20:07,745:INFO:Importing untrained model
2020-10-19 03:20:07,755:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 03:20:07,778:INFO:Starting cross validation
2020-10-19 03:20:07,778:INFO:Cross validating with n_jobs=-1
2020-10-19 03:20:33,990:INFO:Calculating mean and std
2020-10-19 03:20:33,992:INFO:Creating metrics dataframe
2020-10-19 03:20:33,997:INFO:Uploading results into container
2020-10-19 03:20:33,997:INFO:Uploading model into container now
2020-10-19 03:20:33,997:INFO:create_model_container: 2
2020-10-19 03:20:33,997:INFO:master_model_container: 2
2020-10-19 03:20:33,997:INFO:display_container: 1
2020-10-19 03:20:33,998:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 03:20:33,998:INFO:create_model() succesfully completed......................................
2020-10-19 03:20:34,108:INFO:SubProcess create_model() end ==================================
2020-10-19 03:20:34,108:INFO:Creating metrics dataframe
2020-10-19 03:20:34,128:INFO:Initializing Decision Tree Regressor
2020-10-19 03:20:34,128:INFO:Total runtime is 0.5547063668568929 minutes
2020-10-19 03:20:34,137:INFO:SubProcess create_model() called ==================================
2020-10-19 03:20:34,138:INFO:Initializing create_model()
2020-10-19 03:20:34,138:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24ED948>, kwargs={})
2020-10-19 03:20:34,138:INFO:Checking exceptions
2020-10-19 03:20:34,138:INFO:Importing libraries
2020-10-19 03:20:34,138:INFO:Copying training dataset
2020-10-19 03:20:34,148:INFO:Defining folds
2020-10-19 03:20:34,148:INFO:Declaring metric variables
2020-10-19 03:20:34,157:INFO:Importing untrained model
2020-10-19 03:20:34,164:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 03:20:34,179:INFO:Starting cross validation
2020-10-19 03:20:34,179:INFO:Cross validating with n_jobs=-1
2020-10-19 03:21:03,505:INFO:Calculating mean and std
2020-10-19 03:21:03,507:INFO:Creating metrics dataframe
2020-10-19 03:21:03,516:INFO:Uploading results into container
2020-10-19 03:21:03,516:INFO:Uploading model into container now
2020-10-19 03:21:03,516:INFO:create_model_container: 3
2020-10-19 03:21:03,516:INFO:master_model_container: 3
2020-10-19 03:21:03,516:INFO:display_container: 1
2020-10-19 03:21:03,517:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 03:21:03,517:INFO:create_model() succesfully completed......................................
2020-10-19 03:21:03,613:INFO:SubProcess create_model() end ==================================
2020-10-19 03:21:03,613:INFO:Creating metrics dataframe
2020-10-19 03:21:03,633:INFO:Initializing Random Forest Regressor
2020-10-19 03:21:03,634:INFO:Total runtime is 1.046461006005605 minutes
2020-10-19 03:21:03,643:INFO:SubProcess create_model() called ==================================
2020-10-19 03:21:03,644:INFO:Initializing create_model()
2020-10-19 03:21:03,644:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24ED948>, kwargs={})
2020-10-19 03:21:03,644:INFO:Checking exceptions
2020-10-19 03:21:03,644:INFO:Importing libraries
2020-10-19 03:21:03,644:INFO:Copying training dataset
2020-10-19 03:21:03,654:INFO:Defining folds
2020-10-19 03:21:03,654:INFO:Declaring metric variables
2020-10-19 03:21:03,661:INFO:Importing untrained model
2020-10-19 03:21:03,670:INFO:Random Forest Regressor Imported succesfully
2020-10-19 03:21:03,687:INFO:Starting cross validation
2020-10-19 03:21:03,688:INFO:Cross validating with n_jobs=-1
2020-10-19 03:51:22,528:INFO:Calculating mean and std
2020-10-19 03:51:22,564:INFO:Creating metrics dataframe
2020-10-19 03:51:22,600:INFO:Uploading results into container
2020-10-19 03:51:22,600:INFO:Uploading model into container now
2020-10-19 03:51:22,602:INFO:create_model_container: 4
2020-10-19 03:51:22,602:INFO:master_model_container: 4
2020-10-19 03:51:22,602:INFO:display_container: 1
2020-10-19 03:51:22,609:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 03:51:22,609:INFO:create_model() succesfully completed......................................
2020-10-19 03:51:23,736:INFO:SubProcess create_model() end ==================================
2020-10-19 03:51:23,737:INFO:Creating metrics dataframe
2020-10-19 03:51:23,772:INFO:Initializing Extra Trees Regressor
2020-10-19 03:51:23,772:INFO:Total runtime is 31.382094450791676 minutes
2020-10-19 03:51:23,781:INFO:SubProcess create_model() called ==================================
2020-10-19 03:51:23,782:INFO:Initializing create_model()
2020-10-19 03:51:23,782:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24ED948>, kwargs={})
2020-10-19 03:51:23,782:INFO:Checking exceptions
2020-10-19 03:51:23,782:INFO:Importing libraries
2020-10-19 03:51:23,782:INFO:Copying training dataset
2020-10-19 03:51:23,854:INFO:Defining folds
2020-10-19 03:51:23,855:INFO:Declaring metric variables
2020-10-19 03:51:23,861:INFO:Importing untrained model
2020-10-19 03:51:23,867:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 03:51:23,881:INFO:Starting cross validation
2020-10-19 03:51:23,881:INFO:Cross validating with n_jobs=-1
2020-10-19 04:03:54,203:INFO:Calculating mean and std
2020-10-19 04:03:54,359:INFO:Creating metrics dataframe
2020-10-19 04:03:54,503:INFO:Uploading results into container
2020-10-19 04:03:54,504:INFO:Uploading model into container now
2020-10-19 04:03:54,505:INFO:create_model_container: 5
2020-10-19 04:03:54,505:INFO:master_model_container: 5
2020-10-19 04:03:54,505:INFO:display_container: 1
2020-10-19 04:03:54,526:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 04:03:54,527:INFO:create_model() succesfully completed......................................
2020-10-19 04:03:56,858:INFO:SubProcess create_model() end ==================================
2020-10-19 04:03:56,858:INFO:Creating metrics dataframe
2020-10-19 04:03:56,929:INFO:Initializing MLP Regressor
2020-10-19 04:03:56,930:INFO:Total runtime is 43.934730903307596 minutes
2020-10-19 04:03:56,941:INFO:SubProcess create_model() called ==================================
2020-10-19 04:03:56,942:INFO:Initializing create_model()
2020-10-19 04:03:56,942:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24ED948>, kwargs={})
2020-10-19 04:03:56,942:INFO:Checking exceptions
2020-10-19 04:03:56,942:INFO:Importing libraries
2020-10-19 04:03:56,946:INFO:Copying training dataset
2020-10-19 04:03:57,293:INFO:Defining folds
2020-10-19 04:03:57,293:INFO:Declaring metric variables
2020-10-19 04:03:57,301:INFO:Importing untrained model
2020-10-19 04:03:57,308:INFO:MLP Regressor Imported succesfully
2020-10-19 04:03:57,322:INFO:Starting cross validation
2020-10-19 04:03:57,322:INFO:Cross validating with n_jobs=-1
2020-10-19 04:05:26,240:INFO:Calculating mean and std
2020-10-19 04:05:26,243:INFO:Creating metrics dataframe
2020-10-19 04:05:26,247:INFO:Uploading results into container
2020-10-19 04:05:26,247:INFO:Uploading model into container now
2020-10-19 04:05:26,247:INFO:create_model_container: 6
2020-10-19 04:05:26,247:INFO:master_model_container: 6
2020-10-19 04:05:26,247:INFO:display_container: 1
2020-10-19 04:05:26,250:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 04:05:26,250:INFO:create_model() succesfully completed......................................
2020-10-19 04:05:26,348:INFO:SubProcess create_model() end ==================================
2020-10-19 04:05:26,348:INFO:Creating metrics dataframe
2020-10-19 04:05:26,374:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 04:05:26,374:INFO:Total runtime is 45.4254602710406 minutes
2020-10-19 04:05:26,382:INFO:SubProcess create_model() called ==================================
2020-10-19 04:05:26,382:INFO:Initializing create_model()
2020-10-19 04:05:26,382:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24ED948>, kwargs={})
2020-10-19 04:05:26,382:INFO:Checking exceptions
2020-10-19 04:05:26,382:INFO:Importing libraries
2020-10-19 04:05:26,383:INFO:Copying training dataset
2020-10-19 04:05:26,389:INFO:Defining folds
2020-10-19 04:05:26,391:INFO:Declaring metric variables
2020-10-19 04:05:26,397:INFO:Importing untrained model
2020-10-19 04:05:26,404:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 04:05:26,423:INFO:Starting cross validation
2020-10-19 04:05:26,424:INFO:Cross validating with n_jobs=-1
2020-10-19 04:05:42,552:INFO:Calculating mean and std
2020-10-19 04:05:42,553:INFO:Creating metrics dataframe
2020-10-19 04:05:42,557:INFO:Uploading results into container
2020-10-19 04:05:42,557:INFO:Uploading model into container now
2020-10-19 04:05:42,557:INFO:create_model_container: 7
2020-10-19 04:05:42,557:INFO:master_model_container: 7
2020-10-19 04:05:42,557:INFO:display_container: 1
2020-10-19 04:05:42,558:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 04:05:42,558:INFO:create_model() succesfully completed......................................
2020-10-19 04:05:42,655:INFO:SubProcess create_model() end ==================================
2020-10-19 04:05:42,655:INFO:Creating metrics dataframe
2020-10-19 04:05:42,676:INFO:Initializing CatBoost Regressor
2020-10-19 04:05:42,676:INFO:Total runtime is 45.6971712509791 minutes
2020-10-19 04:05:42,686:INFO:SubProcess create_model() called ==================================
2020-10-19 04:05:42,686:INFO:Initializing create_model()
2020-10-19 04:05:42,686:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24ED948>, kwargs={})
2020-10-19 04:05:42,686:INFO:Checking exceptions
2020-10-19 04:05:42,686:INFO:Importing libraries
2020-10-19 04:05:42,686:INFO:Copying training dataset
2020-10-19 04:05:42,694:INFO:Defining folds
2020-10-19 04:05:42,694:INFO:Declaring metric variables
2020-10-19 04:05:42,703:INFO:Importing untrained model
2020-10-19 04:05:42,717:INFO:CatBoost Regressor Imported succesfully
2020-10-19 04:05:42,736:INFO:Starting cross validation
2020-10-19 04:05:42,737:INFO:Cross validating with n_jobs=-1
2020-10-19 04:11:38,236:INFO:Calculating mean and std
2020-10-19 04:11:38,238:INFO:Creating metrics dataframe
2020-10-19 04:11:38,242:INFO:Uploading results into container
2020-10-19 04:11:38,242:INFO:Uploading model into container now
2020-10-19 04:11:38,243:INFO:create_model_container: 8
2020-10-19 04:11:38,243:INFO:master_model_container: 8
2020-10-19 04:11:38,243:INFO:display_container: 1
2020-10-19 04:11:38,243:INFO:<catboost.core.CatBoostRegressor object at 0x0000014306515B48>
2020-10-19 04:11:38,243:INFO:create_model() succesfully completed......................................
2020-10-19 04:11:38,371:INFO:SubProcess create_model() end ==================================
2020-10-19 04:11:38,371:INFO:Creating metrics dataframe
2020-10-19 04:11:38,416:INFO:Initializing create_model()
2020-10-19 04:11:38,417:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 04:11:38,417:INFO:Checking exceptions
2020-10-19 04:11:38,417:INFO:Importing libraries
2020-10-19 04:11:38,417:INFO:Copying training dataset
2020-10-19 04:11:38,427:INFO:Defining folds
2020-10-19 04:11:38,428:INFO:Declaring metric variables
2020-10-19 04:11:38,428:INFO:Importing untrained model
2020-10-19 04:11:38,428:INFO:Declaring custom model
2020-10-19 04:11:38,429:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 04:11:38,429:INFO:Cross validation set to False
2020-10-19 04:11:38,429:INFO:Fitting Model
2020-10-19 04:12:41,727:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 04:12:41,727:INFO:create_models() succesfully completed......................................
2020-10-19 04:12:41,861:INFO:create_model_container: 8
2020-10-19 04:12:41,861:INFO:master_model_container: 8
2020-10-19 04:12:41,861:INFO:display_container: 1
2020-10-19 04:12:41,861:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 04:12:41,861:INFO:compare_models() succesfully completed......................................
2020-10-19 04:12:57,097:INFO:PyCaret Supervised Module
2020-10-19 04:12:57,097:INFO:ML Usecase: regression
2020-10-19 04:12:57,097:INFO:version 2.2.0
2020-10-19 04:12:57,097:INFO:Initializing setup()
2020-10-19 04:12:57,097:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 04:12:57,097:INFO:Checking environment
2020-10-19 04:12:57,097:INFO:python_version: 3.7.6
2020-10-19 04:12:57,097:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 04:12:57,097:INFO:machine: AMD64
2020-10-19 04:12:57,097:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 04:12:57,098:INFO:Memory: svmem(total=16969158656, available=7886974976, percent=53.5, used=9082183680, free=7886974976)
2020-10-19 04:12:57,099:INFO:Physical Core: 4
2020-10-19 04:12:57,099:INFO:Logical Core: 8
2020-10-19 04:12:57,099:INFO:Checking libraries
2020-10-19 04:12:57,099:INFO:pd==1.1.3
2020-10-19 04:12:57,099:INFO:numpy==1.18.1
2020-10-19 04:12:57,099:INFO:sklearn==0.23.2
2020-10-19 04:12:57,099:INFO:xgboost==1.2.1
2020-10-19 04:12:57,099:INFO:lightgbm==2.3.1
2020-10-19 04:12:57,099:INFO:catboost==0.24.2
2020-10-19 04:12:57,099:INFO:mlflow==1.11.0
2020-10-19 04:12:57,099:INFO:Checking Exceptions
2020-10-19 04:12:57,099:INFO:Declaring global variables
2020-10-19 04:12:57,100:INFO:USI: cbbb
2020-10-19 04:12:57,100:INFO:pycaret_globals: {'fold_groups_param', 'master_model_container', 'fix_imbalance_method_param', 'pycaret_globals', 'html_param', 'create_model_container', 'log_plots_param', 'imputation_regressor', 'exp_name_log', 'fold_param', 'prep_pipe', '_all_models_internal', 'display_container', 'y', '_internal_pipeline', 'y_train', 'transform_target_param', '_ml_usecase', 'y_test', 'seed', 'iterative_imputation_iters_param', 'stratify_param', 'data_before_preprocess', 'X', '_all_metrics', 'X_test', 'transform_target_method_param', 'n_jobs_param', 'USI', 'target_param', 'fold_shuffle_param', 'fix_imbalance_param', '_gpu_n_jobs_param', 'experiment__', 'X_train', '_all_models', 'logging_param', 'gpu_param', 'fold_generator', 'imputation_classifier'}
2020-10-19 04:12:57,100:INFO:Preparing display monitor
2020-10-19 04:12:57,100:INFO:Importing libraries
2020-10-19 04:12:57,100:INFO:Copying data for preprocessing
2020-10-19 04:12:57,391:INFO:Declaring preprocessing parameters
2020-10-19 04:12:57,723:INFO:Creating preprocessing pipeline
2020-10-19 04:13:00,058:INFO:Preprocessing pipeline created successfully
2020-10-19 04:13:00,058:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 04:13:00,059:INFO:Creating global containers
2020-10-19 04:13:00,059:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 04:13:13,622:INFO:Creating grid variables
2020-10-19 04:13:13,680:INFO:create_model_container: 0
2020-10-19 04:13:13,680:INFO:master_model_container: 0
2020-10-19 04:13:13,680:INFO:display_container: 0
2020-10-19 04:13:13,684:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 04:13:13,684:INFO:setup() succesfully completed......................................
2020-10-19 04:13:14,030:INFO:Initializing compare_models()
2020-10-19 04:13:14,030:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 04:13:14,030:INFO:Checking exceptions
2020-10-19 04:13:14,030:INFO:Preparing display monitor
2020-10-19 04:13:14,030:INFO:Preparing display monitor
2020-10-19 04:13:14,050:INFO:Initializing Linear Regression
2020-10-19 04:13:14,050:INFO:Total runtime is 0.0 minutes
2020-10-19 04:13:14,057:INFO:SubProcess create_model() called ==================================
2020-10-19 04:13:14,057:INFO:Initializing create_model()
2020-10-19 04:13:14,057:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000014170152CC8>, kwargs={})
2020-10-19 04:13:14,058:INFO:Checking exceptions
2020-10-19 04:13:14,058:INFO:Importing libraries
2020-10-19 04:13:14,058:INFO:Copying training dataset
2020-10-19 04:13:14,065:INFO:Defining folds
2020-10-19 04:13:14,065:INFO:Declaring metric variables
2020-10-19 04:13:14,072:INFO:Importing untrained model
2020-10-19 04:13:14,079:INFO:Linear Regression Imported succesfully
2020-10-19 04:13:14,095:INFO:Starting cross validation
2020-10-19 04:13:14,095:INFO:Cross validating with n_jobs=-1
2020-10-19 04:13:15,155:INFO:Calculating mean and std
2020-10-19 04:13:15,157:INFO:Creating metrics dataframe
2020-10-19 04:13:15,163:INFO:Uploading results into container
2020-10-19 04:13:15,163:INFO:Uploading model into container now
2020-10-19 04:13:15,163:INFO:create_model_container: 1
2020-10-19 04:13:15,164:INFO:master_model_container: 1
2020-10-19 04:13:15,164:INFO:display_container: 1
2020-10-19 04:13:15,164:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 04:13:15,164:INFO:create_model() succesfully completed......................................
2020-10-19 04:13:15,288:INFO:SubProcess create_model() end ==================================
2020-10-19 04:13:15,288:INFO:Creating metrics dataframe
2020-10-19 04:13:15,304:INFO:Initializing K Neighbors Regressor
2020-10-19 04:13:15,304:INFO:Total runtime is 0.020900245507558188 minutes
2020-10-19 04:13:15,311:INFO:SubProcess create_model() called ==================================
2020-10-19 04:13:15,312:INFO:Initializing create_model()
2020-10-19 04:13:15,312:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000014170152CC8>, kwargs={})
2020-10-19 04:13:15,312:INFO:Checking exceptions
2020-10-19 04:13:15,312:INFO:Importing libraries
2020-10-19 04:13:15,312:INFO:Copying training dataset
2020-10-19 04:13:15,323:INFO:Defining folds
2020-10-19 04:13:15,323:INFO:Declaring metric variables
2020-10-19 04:13:15,330:INFO:Importing untrained model
2020-10-19 04:13:15,342:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 04:13:15,360:INFO:Starting cross validation
2020-10-19 04:13:15,360:INFO:Cross validating with n_jobs=-1
2020-10-19 04:13:42,553:INFO:Calculating mean and std
2020-10-19 04:13:42,554:INFO:Creating metrics dataframe
2020-10-19 04:13:42,561:INFO:Uploading results into container
2020-10-19 04:13:42,561:INFO:Uploading model into container now
2020-10-19 04:13:42,561:INFO:create_model_container: 2
2020-10-19 04:13:42,561:INFO:master_model_container: 2
2020-10-19 04:13:42,561:INFO:display_container: 1
2020-10-19 04:13:42,562:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 04:13:42,562:INFO:create_model() succesfully completed......................................
2020-10-19 04:13:42,663:INFO:SubProcess create_model() end ==================================
2020-10-19 04:13:42,663:INFO:Creating metrics dataframe
2020-10-19 04:13:42,682:INFO:Initializing Decision Tree Regressor
2020-10-19 04:13:42,682:INFO:Total runtime is 0.4771919051806132 minutes
2020-10-19 04:13:42,693:INFO:SubProcess create_model() called ==================================
2020-10-19 04:13:42,694:INFO:Initializing create_model()
2020-10-19 04:13:42,694:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000014170152CC8>, kwargs={})
2020-10-19 04:13:42,694:INFO:Checking exceptions
2020-10-19 04:13:42,694:INFO:Importing libraries
2020-10-19 04:13:42,695:INFO:Copying training dataset
2020-10-19 04:13:42,704:INFO:Defining folds
2020-10-19 04:13:42,705:INFO:Declaring metric variables
2020-10-19 04:13:42,712:INFO:Importing untrained model
2020-10-19 04:13:42,720:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 04:13:42,736:INFO:Starting cross validation
2020-10-19 04:13:42,737:INFO:Cross validating with n_jobs=-1
2020-10-19 04:14:10,147:INFO:Calculating mean and std
2020-10-19 04:14:10,149:INFO:Creating metrics dataframe
2020-10-19 04:14:10,157:INFO:Uploading results into container
2020-10-19 04:14:10,157:INFO:Uploading model into container now
2020-10-19 04:14:10,157:INFO:create_model_container: 3
2020-10-19 04:14:10,157:INFO:master_model_container: 3
2020-10-19 04:14:10,157:INFO:display_container: 1
2020-10-19 04:14:10,158:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 04:14:10,158:INFO:create_model() succesfully completed......................................
2020-10-19 04:14:10,254:INFO:SubProcess create_model() end ==================================
2020-10-19 04:14:10,254:INFO:Creating metrics dataframe
2020-10-19 04:14:10,273:INFO:Initializing Random Forest Regressor
2020-10-19 04:14:10,274:INFO:Total runtime is 0.9370565056800843 minutes
2020-10-19 04:14:10,284:INFO:SubProcess create_model() called ==================================
2020-10-19 04:14:10,284:INFO:Initializing create_model()
2020-10-19 04:14:10,284:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000014170152CC8>, kwargs={})
2020-10-19 04:14:10,284:INFO:Checking exceptions
2020-10-19 04:14:10,284:INFO:Importing libraries
2020-10-19 04:14:10,284:INFO:Copying training dataset
2020-10-19 04:14:10,293:INFO:Defining folds
2020-10-19 04:14:10,294:INFO:Declaring metric variables
2020-10-19 04:14:10,301:INFO:Importing untrained model
2020-10-19 04:14:10,308:INFO:Random Forest Regressor Imported succesfully
2020-10-19 04:14:10,328:INFO:Starting cross validation
2020-10-19 04:14:10,329:INFO:Cross validating with n_jobs=-1
2020-10-19 04:39:47,813:INFO:Calculating mean and std
2020-10-19 04:39:47,862:INFO:Creating metrics dataframe
2020-10-19 04:39:47,900:INFO:Uploading results into container
2020-10-19 04:39:47,901:INFO:Uploading model into container now
2020-10-19 04:39:47,901:INFO:create_model_container: 4
2020-10-19 04:39:47,901:INFO:master_model_container: 4
2020-10-19 04:39:47,901:INFO:display_container: 1
2020-10-19 04:39:47,910:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 04:39:47,910:INFO:create_model() succesfully completed......................................
2020-10-19 04:39:49,183:INFO:SubProcess create_model() end ==================================
2020-10-19 04:39:49,183:INFO:Creating metrics dataframe
2020-10-19 04:39:49,212:INFO:Initializing Extra Trees Regressor
2020-10-19 04:39:49,212:INFO:Total runtime is 26.586031782627103 minutes
2020-10-19 04:39:49,220:INFO:SubProcess create_model() called ==================================
2020-10-19 04:39:49,220:INFO:Initializing create_model()
2020-10-19 04:39:49,220:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000014170152CC8>, kwargs={})
2020-10-19 04:39:49,220:INFO:Checking exceptions
2020-10-19 04:39:49,220:INFO:Importing libraries
2020-10-19 04:39:49,221:INFO:Copying training dataset
2020-10-19 04:39:49,296:INFO:Defining folds
2020-10-19 04:39:49,297:INFO:Declaring metric variables
2020-10-19 04:39:49,303:INFO:Importing untrained model
2020-10-19 04:39:49,309:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 04:39:49,323:INFO:Starting cross validation
2020-10-19 04:39:49,323:INFO:Cross validating with n_jobs=-1
2020-10-19 04:57:04,145:INFO:Calculating mean and std
2020-10-19 04:57:04,215:INFO:Creating metrics dataframe
2020-10-19 04:57:04,275:INFO:Uploading results into container
2020-10-19 04:57:04,276:INFO:Uploading model into container now
2020-10-19 04:57:04,276:INFO:create_model_container: 5
2020-10-19 04:57:04,276:INFO:master_model_container: 5
2020-10-19 04:57:04,276:INFO:display_container: 1
2020-10-19 04:57:04,287:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 04:57:04,287:INFO:create_model() succesfully completed......................................
2020-10-19 04:57:06,330:INFO:SubProcess create_model() end ==================================
2020-10-19 04:57:06,331:INFO:Creating metrics dataframe
2020-10-19 04:57:06,376:INFO:Initializing MLP Regressor
2020-10-19 04:57:06,376:INFO:Total runtime is 43.87209438085556 minutes
2020-10-19 04:57:06,387:INFO:SubProcess create_model() called ==================================
2020-10-19 04:57:06,387:INFO:Initializing create_model()
2020-10-19 04:57:06,387:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000014170152CC8>, kwargs={})
2020-10-19 04:57:06,387:INFO:Checking exceptions
2020-10-19 04:57:06,387:INFO:Importing libraries
2020-10-19 04:57:06,388:INFO:Copying training dataset
2020-10-19 04:57:06,506:INFO:Defining folds
2020-10-19 04:57:06,506:INFO:Declaring metric variables
2020-10-19 04:57:06,512:INFO:Importing untrained model
2020-10-19 04:57:06,519:INFO:MLP Regressor Imported succesfully
2020-10-19 04:57:06,531:INFO:Starting cross validation
2020-10-19 04:57:06,531:INFO:Cross validating with n_jobs=-1
2020-10-19 04:58:27,942:INFO:Calculating mean and std
2020-10-19 04:58:27,945:INFO:Creating metrics dataframe
2020-10-19 04:58:27,954:INFO:Uploading results into container
2020-10-19 04:58:27,954:INFO:Uploading model into container now
2020-10-19 04:58:27,954:INFO:create_model_container: 6
2020-10-19 04:58:27,954:INFO:master_model_container: 6
2020-10-19 04:58:27,954:INFO:display_container: 1
2020-10-19 04:58:27,956:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 04:58:27,956:INFO:create_model() succesfully completed......................................
2020-10-19 04:58:28,057:INFO:SubProcess create_model() end ==================================
2020-10-19 04:58:28,057:INFO:Creating metrics dataframe
2020-10-19 04:58:28,085:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 04:58:28,085:INFO:Total runtime is 45.233905577659606 minutes
2020-10-19 04:58:28,095:INFO:SubProcess create_model() called ==================================
2020-10-19 04:58:28,096:INFO:Initializing create_model()
2020-10-19 04:58:28,096:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000014170152CC8>, kwargs={})
2020-10-19 04:58:28,096:INFO:Checking exceptions
2020-10-19 04:58:28,096:INFO:Importing libraries
2020-10-19 04:58:28,096:INFO:Copying training dataset
2020-10-19 04:58:28,106:INFO:Defining folds
2020-10-19 04:58:28,106:INFO:Declaring metric variables
2020-10-19 04:58:28,115:INFO:Importing untrained model
2020-10-19 04:58:28,123:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 04:58:28,138:INFO:Starting cross validation
2020-10-19 04:58:28,138:INFO:Cross validating with n_jobs=-1
2020-10-19 04:58:44,506:INFO:Calculating mean and std
2020-10-19 04:58:44,508:INFO:Creating metrics dataframe
2020-10-19 04:58:44,515:INFO:Uploading results into container
2020-10-19 04:58:44,515:INFO:Uploading model into container now
2020-10-19 04:58:44,515:INFO:create_model_container: 7
2020-10-19 04:58:44,515:INFO:master_model_container: 7
2020-10-19 04:58:44,516:INFO:display_container: 1
2020-10-19 04:58:44,516:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 04:58:44,516:INFO:create_model() succesfully completed......................................
2020-10-19 04:58:44,618:INFO:SubProcess create_model() end ==================================
2020-10-19 04:58:44,618:INFO:Creating metrics dataframe
2020-10-19 04:58:44,646:INFO:Initializing CatBoost Regressor
2020-10-19 04:58:44,646:INFO:Total runtime is 45.50992699464162 minutes
2020-10-19 04:58:44,657:INFO:SubProcess create_model() called ==================================
2020-10-19 04:58:44,657:INFO:Initializing create_model()
2020-10-19 04:58:44,657:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000014170152CC8>, kwargs={})
2020-10-19 04:58:44,657:INFO:Checking exceptions
2020-10-19 04:58:44,657:INFO:Importing libraries
2020-10-19 04:58:44,657:INFO:Copying training dataset
2020-10-19 04:58:44,666:INFO:Defining folds
2020-10-19 04:58:44,666:INFO:Declaring metric variables
2020-10-19 04:58:44,674:INFO:Importing untrained model
2020-10-19 04:58:44,686:INFO:CatBoost Regressor Imported succesfully
2020-10-19 04:58:44,701:INFO:Starting cross validation
2020-10-19 04:58:44,701:INFO:Cross validating with n_jobs=-1
2020-10-19 05:04:36,191:INFO:Calculating mean and std
2020-10-19 05:04:36,192:INFO:Creating metrics dataframe
2020-10-19 05:04:36,196:INFO:Uploading results into container
2020-10-19 05:04:36,196:INFO:Uploading model into container now
2020-10-19 05:04:36,196:INFO:create_model_container: 8
2020-10-19 05:04:36,196:INFO:master_model_container: 8
2020-10-19 05:04:36,196:INFO:display_container: 1
2020-10-19 05:04:36,196:INFO:<catboost.core.CatBoostRegressor object at 0x0000013F8C959808>
2020-10-19 05:04:36,196:INFO:create_model() succesfully completed......................................
2020-10-19 05:04:36,316:INFO:SubProcess create_model() end ==================================
2020-10-19 05:04:36,316:INFO:Creating metrics dataframe
2020-10-19 05:04:36,364:INFO:Initializing create_model()
2020-10-19 05:04:36,364:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 05:04:36,364:INFO:Checking exceptions
2020-10-19 05:04:36,364:INFO:Importing libraries
2020-10-19 05:04:36,364:INFO:Copying training dataset
2020-10-19 05:04:36,376:INFO:Defining folds
2020-10-19 05:04:36,376:INFO:Declaring metric variables
2020-10-19 05:04:36,376:INFO:Importing untrained model
2020-10-19 05:04:36,376:INFO:Declaring custom model
2020-10-19 05:04:36,377:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 05:04:36,377:INFO:Cross validation set to False
2020-10-19 05:04:36,378:INFO:Fitting Model
2020-10-19 05:05:33,096:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 05:05:33,097:INFO:create_models() succesfully completed......................................
2020-10-19 05:05:33,298:INFO:create_model_container: 8
2020-10-19 05:05:33,298:INFO:master_model_container: 8
2020-10-19 05:05:33,298:INFO:display_container: 1
2020-10-19 05:05:33,299:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 05:05:33,299:INFO:compare_models() succesfully completed......................................
2020-10-19 05:05:44,551:INFO:PyCaret Supervised Module
2020-10-19 05:05:44,551:INFO:ML Usecase: regression
2020-10-19 05:05:44,551:INFO:version 2.2.0
2020-10-19 05:05:44,552:INFO:Initializing setup()
2020-10-19 05:05:44,552:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 05:05:44,552:INFO:Checking environment
2020-10-19 05:05:44,552:INFO:python_version: 3.7.6
2020-10-19 05:05:44,552:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 05:05:44,552:INFO:machine: AMD64
2020-10-19 05:05:44,552:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 05:05:44,552:INFO:Memory: svmem(total=16969158656, available=8616767488, percent=49.2, used=8352391168, free=8616767488)
2020-10-19 05:05:44,552:INFO:Physical Core: 4
2020-10-19 05:05:44,553:INFO:Logical Core: 8
2020-10-19 05:05:44,553:INFO:Checking libraries
2020-10-19 05:05:44,553:INFO:pd==1.1.3
2020-10-19 05:05:44,553:INFO:numpy==1.18.1
2020-10-19 05:05:44,553:INFO:sklearn==0.23.2
2020-10-19 05:05:44,553:INFO:xgboost==1.2.1
2020-10-19 05:05:44,553:INFO:lightgbm==2.3.1
2020-10-19 05:05:44,553:INFO:catboost==0.24.2
2020-10-19 05:05:44,553:INFO:mlflow==1.11.0
2020-10-19 05:05:44,553:INFO:Checking Exceptions
2020-10-19 05:05:44,553:INFO:Declaring global variables
2020-10-19 05:05:44,553:INFO:USI: f2f0
2020-10-19 05:05:44,553:INFO:pycaret_globals: {'fold_groups_param', 'master_model_container', 'fix_imbalance_method_param', 'pycaret_globals', 'html_param', 'create_model_container', 'log_plots_param', 'imputation_regressor', 'exp_name_log', 'fold_param', 'prep_pipe', '_all_models_internal', 'display_container', 'y', '_internal_pipeline', 'y_train', 'transform_target_param', '_ml_usecase', 'y_test', 'seed', 'iterative_imputation_iters_param', 'stratify_param', 'data_before_preprocess', 'X', '_all_metrics', 'X_test', 'transform_target_method_param', 'n_jobs_param', 'USI', 'target_param', 'fold_shuffle_param', 'fix_imbalance_param', '_gpu_n_jobs_param', 'experiment__', 'X_train', '_all_models', 'logging_param', 'gpu_param', 'fold_generator', 'imputation_classifier'}
2020-10-19 05:05:44,554:INFO:Preparing display monitor
2020-10-19 05:05:44,554:INFO:Importing libraries
2020-10-19 05:05:44,554:INFO:Copying data for preprocessing
2020-10-19 05:05:44,846:INFO:Declaring preprocessing parameters
2020-10-19 05:05:45,103:INFO:Creating preprocessing pipeline
2020-10-19 05:05:47,091:INFO:Preprocessing pipeline created successfully
2020-10-19 05:05:47,091:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 05:05:47,091:INFO:Creating global containers
2020-10-19 05:05:47,091:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 05:05:59,439:INFO:Creating grid variables
2020-10-19 05:05:59,494:INFO:create_model_container: 0
2020-10-19 05:05:59,494:INFO:master_model_container: 0
2020-10-19 05:05:59,494:INFO:display_container: 0
2020-10-19 05:05:59,500:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 05:05:59,500:INFO:setup() succesfully completed......................................
2020-10-19 05:05:59,640:INFO:Initializing compare_models()
2020-10-19 05:05:59,640:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 05:05:59,640:INFO:Checking exceptions
2020-10-19 05:05:59,640:INFO:Preparing display monitor
2020-10-19 05:05:59,640:INFO:Preparing display monitor
2020-10-19 05:05:59,659:INFO:Initializing Linear Regression
2020-10-19 05:05:59,660:INFO:Total runtime is 1.662572224934896e-05 minutes
2020-10-19 05:05:59,664:INFO:SubProcess create_model() called ==================================
2020-10-19 05:05:59,664:INFO:Initializing create_model()
2020-10-19 05:05:59,664:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24F89C8>, kwargs={})
2020-10-19 05:05:59,665:INFO:Checking exceptions
2020-10-19 05:05:59,665:INFO:Importing libraries
2020-10-19 05:05:59,665:INFO:Copying training dataset
2020-10-19 05:05:59,672:INFO:Defining folds
2020-10-19 05:05:59,672:INFO:Declaring metric variables
2020-10-19 05:05:59,678:INFO:Importing untrained model
2020-10-19 05:05:59,684:INFO:Linear Regression Imported succesfully
2020-10-19 05:05:59,699:INFO:Starting cross validation
2020-10-19 05:05:59,699:INFO:Cross validating with n_jobs=-1
2020-10-19 05:06:00,469:INFO:Calculating mean and std
2020-10-19 05:06:00,470:INFO:Creating metrics dataframe
2020-10-19 05:06:00,475:INFO:Uploading results into container
2020-10-19 05:06:00,475:INFO:Uploading model into container now
2020-10-19 05:06:00,475:INFO:create_model_container: 1
2020-10-19 05:06:00,475:INFO:master_model_container: 1
2020-10-19 05:06:00,476:INFO:display_container: 1
2020-10-19 05:06:00,476:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 05:06:00,476:INFO:create_model() succesfully completed......................................
2020-10-19 05:06:00,568:INFO:SubProcess create_model() end ==================================
2020-10-19 05:06:00,568:INFO:Creating metrics dataframe
2020-10-19 05:06:00,584:INFO:Initializing K Neighbors Regressor
2020-10-19 05:06:00,584:INFO:Total runtime is 0.01542543570200602 minutes
2020-10-19 05:06:00,592:INFO:SubProcess create_model() called ==================================
2020-10-19 05:06:00,592:INFO:Initializing create_model()
2020-10-19 05:06:00,592:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24F89C8>, kwargs={})
2020-10-19 05:06:00,592:INFO:Checking exceptions
2020-10-19 05:06:00,592:INFO:Importing libraries
2020-10-19 05:06:00,592:INFO:Copying training dataset
2020-10-19 05:06:00,600:INFO:Defining folds
2020-10-19 05:06:00,601:INFO:Declaring metric variables
2020-10-19 05:06:00,607:INFO:Importing untrained model
2020-10-19 05:06:00,613:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 05:06:00,624:INFO:Starting cross validation
2020-10-19 05:06:00,625:INFO:Cross validating with n_jobs=-1
2020-10-19 05:06:23,213:INFO:Calculating mean and std
2020-10-19 05:06:23,215:INFO:Creating metrics dataframe
2020-10-19 05:06:23,227:INFO:Uploading results into container
2020-10-19 05:06:23,227:INFO:Uploading model into container now
2020-10-19 05:06:23,227:INFO:create_model_container: 2
2020-10-19 05:06:23,228:INFO:master_model_container: 2
2020-10-19 05:06:23,228:INFO:display_container: 1
2020-10-19 05:06:23,229:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 05:06:23,229:INFO:create_model() succesfully completed......................................
2020-10-19 05:06:23,339:INFO:SubProcess create_model() end ==================================
2020-10-19 05:06:23,340:INFO:Creating metrics dataframe
2020-10-19 05:06:23,358:INFO:Initializing Decision Tree Regressor
2020-10-19 05:06:23,359:INFO:Total runtime is 0.3950070261955261 minutes
2020-10-19 05:06:23,367:INFO:SubProcess create_model() called ==================================
2020-10-19 05:06:23,367:INFO:Initializing create_model()
2020-10-19 05:06:23,367:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24F89C8>, kwargs={})
2020-10-19 05:06:23,367:INFO:Checking exceptions
2020-10-19 05:06:23,367:INFO:Importing libraries
2020-10-19 05:06:23,367:INFO:Copying training dataset
2020-10-19 05:06:23,375:INFO:Defining folds
2020-10-19 05:06:23,375:INFO:Declaring metric variables
2020-10-19 05:06:23,381:INFO:Importing untrained model
2020-10-19 05:06:23,387:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 05:06:23,399:INFO:Starting cross validation
2020-10-19 05:06:23,399:INFO:Cross validating with n_jobs=-1
2020-10-19 05:06:51,330:INFO:Calculating mean and std
2020-10-19 05:06:51,332:INFO:Creating metrics dataframe
2020-10-19 05:06:51,335:INFO:Uploading results into container
2020-10-19 05:06:51,335:INFO:Uploading model into container now
2020-10-19 05:06:51,335:INFO:create_model_container: 3
2020-10-19 05:06:51,335:INFO:master_model_container: 3
2020-10-19 05:06:51,335:INFO:display_container: 1
2020-10-19 05:06:51,335:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 05:06:51,336:INFO:create_model() succesfully completed......................................
2020-10-19 05:06:51,417:INFO:SubProcess create_model() end ==================================
2020-10-19 05:06:51,417:INFO:Creating metrics dataframe
2020-10-19 05:06:51,434:INFO:Initializing Random Forest Regressor
2020-10-19 05:06:51,434:INFO:Total runtime is 0.8629290183385212 minutes
2020-10-19 05:06:51,442:INFO:SubProcess create_model() called ==================================
2020-10-19 05:06:51,442:INFO:Initializing create_model()
2020-10-19 05:06:51,442:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24F89C8>, kwargs={})
2020-10-19 05:06:51,442:INFO:Checking exceptions
2020-10-19 05:06:51,442:INFO:Importing libraries
2020-10-19 05:06:51,442:INFO:Copying training dataset
2020-10-19 05:06:51,450:INFO:Defining folds
2020-10-19 05:06:51,451:INFO:Declaring metric variables
2020-10-19 05:06:51,458:INFO:Importing untrained model
2020-10-19 05:06:51,463:INFO:Random Forest Regressor Imported succesfully
2020-10-19 05:06:51,475:INFO:Starting cross validation
2020-10-19 05:06:51,475:INFO:Cross validating with n_jobs=-1
2020-10-19 05:32:23,518:INFO:Calculating mean and std
2020-10-19 05:32:23,718:INFO:Creating metrics dataframe
2020-10-19 05:32:23,845:INFO:Uploading results into container
2020-10-19 05:32:23,846:INFO:Uploading model into container now
2020-10-19 05:32:23,846:INFO:create_model_container: 4
2020-10-19 05:32:23,847:INFO:master_model_container: 4
2020-10-19 05:32:23,847:INFO:display_container: 1
2020-10-19 05:32:23,865:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 05:32:23,866:INFO:create_model() succesfully completed......................................
2020-10-19 05:32:26,554:INFO:SubProcess create_model() end ==================================
2020-10-19 05:32:26,554:INFO:Creating metrics dataframe
2020-10-19 05:32:26,618:INFO:Initializing Extra Trees Regressor
2020-10-19 05:32:26,618:INFO:Total runtime is 26.44933158159256 minutes
2020-10-19 05:32:26,633:INFO:SubProcess create_model() called ==================================
2020-10-19 05:32:26,633:INFO:Initializing create_model()
2020-10-19 05:32:26,633:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24F89C8>, kwargs={})
2020-10-19 05:32:26,634:INFO:Checking exceptions
2020-10-19 05:32:26,634:INFO:Importing libraries
2020-10-19 05:32:26,634:INFO:Copying training dataset
2020-10-19 05:32:26,994:INFO:Defining folds
2020-10-19 05:32:26,995:INFO:Declaring metric variables
2020-10-19 05:32:27,001:INFO:Importing untrained model
2020-10-19 05:32:27,007:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 05:32:27,019:INFO:Starting cross validation
2020-10-19 05:32:27,019:INFO:Cross validating with n_jobs=-1
2020-10-19 05:48:13,887:INFO:Calculating mean and std
2020-10-19 05:48:14,205:INFO:Creating metrics dataframe
2020-10-19 05:48:14,637:INFO:Uploading results into container
2020-10-19 05:48:14,640:INFO:Uploading model into container now
2020-10-19 05:48:14,644:INFO:create_model_container: 5
2020-10-19 05:48:14,644:INFO:master_model_container: 5
2020-10-19 05:48:14,644:INFO:display_container: 1
2020-10-19 05:48:14,706:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 05:48:14,706:INFO:create_model() succesfully completed......................................
2020-10-19 05:48:19,784:INFO:SubProcess create_model() end ==================================
2020-10-19 05:48:19,784:INFO:Creating metrics dataframe
2020-10-19 05:48:19,859:INFO:Initializing MLP Regressor
2020-10-19 05:48:19,859:INFO:Total runtime is 42.336669357617694 minutes
2020-10-19 05:48:19,876:INFO:SubProcess create_model() called ==================================
2020-10-19 05:48:19,876:INFO:Initializing create_model()
2020-10-19 05:48:19,876:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24F89C8>, kwargs={})
2020-10-19 05:48:19,876:INFO:Checking exceptions
2020-10-19 05:48:19,876:INFO:Importing libraries
2020-10-19 05:48:19,877:INFO:Copying training dataset
2020-10-19 05:48:20,385:INFO:Defining folds
2020-10-19 05:48:20,386:INFO:Declaring metric variables
2020-10-19 05:48:20,393:INFO:Importing untrained model
2020-10-19 05:48:20,400:INFO:MLP Regressor Imported succesfully
2020-10-19 05:48:20,413:INFO:Starting cross validation
2020-10-19 05:48:20,413:INFO:Cross validating with n_jobs=-1
2020-10-19 05:49:31,033:INFO:Calculating mean and std
2020-10-19 05:49:31,034:INFO:Creating metrics dataframe
2020-10-19 05:49:31,038:INFO:Uploading results into container
2020-10-19 05:49:31,038:INFO:Uploading model into container now
2020-10-19 05:49:31,038:INFO:create_model_container: 6
2020-10-19 05:49:31,038:INFO:master_model_container: 6
2020-10-19 05:49:31,038:INFO:display_container: 1
2020-10-19 05:49:31,039:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 05:49:31,039:INFO:create_model() succesfully completed......................................
2020-10-19 05:49:31,120:INFO:SubProcess create_model() end ==================================
2020-10-19 05:49:31,120:INFO:Creating metrics dataframe
2020-10-19 05:49:31,151:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 05:49:31,151:INFO:Total runtime is 43.524872271219884 minutes
2020-10-19 05:49:31,161:INFO:SubProcess create_model() called ==================================
2020-10-19 05:49:31,161:INFO:Initializing create_model()
2020-10-19 05:49:31,161:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24F89C8>, kwargs={})
2020-10-19 05:49:31,161:INFO:Checking exceptions
2020-10-19 05:49:31,161:INFO:Importing libraries
2020-10-19 05:49:31,161:INFO:Copying training dataset
2020-10-19 05:49:31,169:INFO:Defining folds
2020-10-19 05:49:31,169:INFO:Declaring metric variables
2020-10-19 05:49:31,177:INFO:Importing untrained model
2020-10-19 05:49:31,183:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 05:49:31,196:INFO:Starting cross validation
2020-10-19 05:49:31,197:INFO:Cross validating with n_jobs=-1
2020-10-19 05:49:44,397:INFO:Calculating mean and std
2020-10-19 05:49:44,400:INFO:Creating metrics dataframe
2020-10-19 05:49:44,409:INFO:Uploading results into container
2020-10-19 05:49:44,410:INFO:Uploading model into container now
2020-10-19 05:49:44,410:INFO:create_model_container: 7
2020-10-19 05:49:44,410:INFO:master_model_container: 7
2020-10-19 05:49:44,410:INFO:display_container: 1
2020-10-19 05:49:44,410:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 05:49:44,411:INFO:create_model() succesfully completed......................................
2020-10-19 05:49:44,495:INFO:SubProcess create_model() end ==================================
2020-10-19 05:49:44,495:INFO:Creating metrics dataframe
2020-10-19 05:49:44,556:INFO:Initializing CatBoost Regressor
2020-10-19 05:49:44,556:INFO:Total runtime is 43.748295156160985 minutes
2020-10-19 05:49:44,563:INFO:SubProcess create_model() called ==================================
2020-10-19 05:49:44,563:INFO:Initializing create_model()
2020-10-19 05:49:44,563:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013FC24F89C8>, kwargs={})
2020-10-19 05:49:44,563:INFO:Checking exceptions
2020-10-19 05:49:44,564:INFO:Importing libraries
2020-10-19 05:49:44,564:INFO:Copying training dataset
2020-10-19 05:49:44,571:INFO:Defining folds
2020-10-19 05:49:44,571:INFO:Declaring metric variables
2020-10-19 05:49:44,577:INFO:Importing untrained model
2020-10-19 05:49:44,587:INFO:CatBoost Regressor Imported succesfully
2020-10-19 05:49:44,599:INFO:Starting cross validation
2020-10-19 05:49:44,599:INFO:Cross validating with n_jobs=-1
2020-10-19 05:54:44,121:INFO:Calculating mean and std
2020-10-19 05:54:44,122:INFO:Creating metrics dataframe
2020-10-19 05:54:44,126:INFO:Uploading results into container
2020-10-19 05:54:44,126:INFO:Uploading model into container now
2020-10-19 05:54:44,126:INFO:create_model_container: 8
2020-10-19 05:54:44,127:INFO:master_model_container: 8
2020-10-19 05:54:44,127:INFO:display_container: 1
2020-10-19 05:54:44,127:INFO:<catboost.core.CatBoostRegressor object at 0x00000141704704C8>
2020-10-19 05:54:44,127:INFO:create_model() succesfully completed......................................
2020-10-19 05:54:44,226:INFO:SubProcess create_model() end ==================================
2020-10-19 05:54:44,226:INFO:Creating metrics dataframe
2020-10-19 05:54:44,269:INFO:Initializing create_model()
2020-10-19 05:54:44,269:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 05:54:44,269:INFO:Checking exceptions
2020-10-19 05:54:44,269:INFO:Importing libraries
2020-10-19 05:54:44,270:INFO:Copying training dataset
2020-10-19 05:54:44,278:INFO:Defining folds
2020-10-19 05:54:44,278:INFO:Declaring metric variables
2020-10-19 05:54:44,278:INFO:Importing untrained model
2020-10-19 05:54:44,278:INFO:Declaring custom model
2020-10-19 05:54:44,279:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 05:54:44,279:INFO:Cross validation set to False
2020-10-19 05:54:44,279:INFO:Fitting Model
2020-10-19 05:55:38,300:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 05:55:38,300:INFO:create_models() succesfully completed......................................
2020-10-19 05:55:38,457:INFO:create_model_container: 8
2020-10-19 05:55:38,457:INFO:master_model_container: 8
2020-10-19 05:55:38,457:INFO:display_container: 1
2020-10-19 05:55:38,457:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 05:55:38,457:INFO:compare_models() succesfully completed......................................
2020-10-19 05:55:48,589:INFO:PyCaret Supervised Module
2020-10-19 05:55:48,589:INFO:ML Usecase: regression
2020-10-19 05:55:48,589:INFO:version 2.2.0
2020-10-19 05:55:48,589:INFO:Initializing setup()
2020-10-19 05:55:48,590:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 05:55:48,590:INFO:Checking environment
2020-10-19 05:55:48,590:INFO:python_version: 3.7.6
2020-10-19 05:55:48,590:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 05:55:48,590:INFO:machine: AMD64
2020-10-19 05:55:48,590:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 05:55:48,590:INFO:Memory: svmem(total=16969158656, available=8615493632, percent=49.2, used=8353665024, free=8615493632)
2020-10-19 05:55:48,590:INFO:Physical Core: 4
2020-10-19 05:55:48,590:INFO:Logical Core: 8
2020-10-19 05:55:48,590:INFO:Checking libraries
2020-10-19 05:55:48,590:INFO:pd==1.1.3
2020-10-19 05:55:48,590:INFO:numpy==1.18.1
2020-10-19 05:55:48,590:INFO:sklearn==0.23.2
2020-10-19 05:55:48,590:INFO:xgboost==1.2.1
2020-10-19 05:55:48,590:INFO:lightgbm==2.3.1
2020-10-19 05:55:48,590:INFO:catboost==0.24.2
2020-10-19 05:55:48,591:INFO:mlflow==1.11.0
2020-10-19 05:55:48,591:INFO:Checking Exceptions
2020-10-19 05:55:48,591:INFO:Declaring global variables
2020-10-19 05:55:48,591:INFO:USI: 04a7
2020-10-19 05:55:48,591:INFO:pycaret_globals: {'fold_groups_param', 'master_model_container', 'fix_imbalance_method_param', 'pycaret_globals', 'html_param', 'create_model_container', 'log_plots_param', 'imputation_regressor', 'exp_name_log', 'fold_param', 'prep_pipe', '_all_models_internal', 'display_container', 'y', '_internal_pipeline', 'y_train', 'transform_target_param', '_ml_usecase', 'y_test', 'seed', 'iterative_imputation_iters_param', 'stratify_param', 'data_before_preprocess', 'X', '_all_metrics', 'X_test', 'transform_target_method_param', 'n_jobs_param', 'USI', 'target_param', 'fold_shuffle_param', 'fix_imbalance_param', '_gpu_n_jobs_param', 'experiment__', 'X_train', '_all_models', 'logging_param', 'gpu_param', 'fold_generator', 'imputation_classifier'}
2020-10-19 05:55:48,591:INFO:Preparing display monitor
2020-10-19 05:55:48,591:INFO:Importing libraries
2020-10-19 05:55:48,591:INFO:Copying data for preprocessing
2020-10-19 05:55:48,819:INFO:Declaring preprocessing parameters
2020-10-19 05:55:49,024:INFO:Creating preprocessing pipeline
2020-10-19 05:55:50,562:INFO:Preprocessing pipeline created successfully
2020-10-19 05:55:50,562:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 05:55:50,562:INFO:Creating global containers
2020-10-19 05:55:50,562:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 05:56:00,071:INFO:Creating grid variables
2020-10-19 05:56:00,115:INFO:create_model_container: 0
2020-10-19 05:56:00,115:INFO:master_model_container: 0
2020-10-19 05:56:00,115:INFO:display_container: 0
2020-10-19 05:56:00,121:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 05:56:00,121:INFO:setup() succesfully completed......................................
2020-10-19 05:56:00,249:INFO:Initializing compare_models()
2020-10-19 05:56:00,249:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 05:56:00,249:INFO:Checking exceptions
2020-10-19 05:56:00,249:INFO:Preparing display monitor
2020-10-19 05:56:00,249:INFO:Preparing display monitor
2020-10-19 05:56:00,267:INFO:Initializing Linear Regression
2020-10-19 05:56:00,267:INFO:Total runtime is 0.0 minutes
2020-10-19 05:56:00,273:INFO:SubProcess create_model() called ==================================
2020-10-19 05:56:00,273:INFO:Initializing create_model()
2020-10-19 05:56:00,273:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001430651BE88>, kwargs={})
2020-10-19 05:56:00,273:INFO:Checking exceptions
2020-10-19 05:56:00,274:INFO:Importing libraries
2020-10-19 05:56:00,274:INFO:Copying training dataset
2020-10-19 05:56:00,280:INFO:Defining folds
2020-10-19 05:56:00,280:INFO:Declaring metric variables
2020-10-19 05:56:00,285:INFO:Importing untrained model
2020-10-19 05:56:00,290:INFO:Linear Regression Imported succesfully
2020-10-19 05:56:00,302:INFO:Starting cross validation
2020-10-19 05:56:00,302:INFO:Cross validating with n_jobs=-1
2020-10-19 05:56:01,066:INFO:Calculating mean and std
2020-10-19 05:56:01,068:INFO:Creating metrics dataframe
2020-10-19 05:56:01,079:INFO:Uploading results into container
2020-10-19 05:56:01,079:INFO:Uploading model into container now
2020-10-19 05:56:01,080:INFO:create_model_container: 1
2020-10-19 05:56:01,080:INFO:master_model_container: 1
2020-10-19 05:56:01,080:INFO:display_container: 1
2020-10-19 05:56:01,080:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 05:56:01,080:INFO:create_model() succesfully completed......................................
2020-10-19 05:56:01,187:INFO:SubProcess create_model() end ==================================
2020-10-19 05:56:01,187:INFO:Creating metrics dataframe
2020-10-19 05:56:01,203:INFO:Initializing K Neighbors Regressor
2020-10-19 05:56:01,203:INFO:Total runtime is 0.015593485037485758 minutes
2020-10-19 05:56:01,211:INFO:SubProcess create_model() called ==================================
2020-10-19 05:56:01,211:INFO:Initializing create_model()
2020-10-19 05:56:01,211:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001430651BE88>, kwargs={})
2020-10-19 05:56:01,211:INFO:Checking exceptions
2020-10-19 05:56:01,211:INFO:Importing libraries
2020-10-19 05:56:01,211:INFO:Copying training dataset
2020-10-19 05:56:01,219:INFO:Defining folds
2020-10-19 05:56:01,219:INFO:Declaring metric variables
2020-10-19 05:56:01,225:INFO:Importing untrained model
2020-10-19 05:56:01,231:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 05:56:01,244:INFO:Starting cross validation
2020-10-19 05:56:01,244:INFO:Cross validating with n_jobs=-1
2020-10-19 05:56:16,480:INFO:Calculating mean and std
2020-10-19 05:56:16,483:INFO:Creating metrics dataframe
2020-10-19 05:56:16,495:INFO:Uploading results into container
2020-10-19 05:56:16,495:INFO:Uploading model into container now
2020-10-19 05:56:16,495:INFO:create_model_container: 2
2020-10-19 05:56:16,495:INFO:master_model_container: 2
2020-10-19 05:56:16,495:INFO:display_container: 1
2020-10-19 05:56:16,496:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 05:56:16,496:INFO:create_model() succesfully completed......................................
2020-10-19 05:56:16,601:INFO:SubProcess create_model() end ==================================
2020-10-19 05:56:16,601:INFO:Creating metrics dataframe
2020-10-19 05:56:16,619:INFO:Initializing Decision Tree Regressor
2020-10-19 05:56:16,619:INFO:Total runtime is 0.27252740065256753 minutes
2020-10-19 05:56:16,627:INFO:SubProcess create_model() called ==================================
2020-10-19 05:56:16,628:INFO:Initializing create_model()
2020-10-19 05:56:16,628:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001430651BE88>, kwargs={})
2020-10-19 05:56:16,628:INFO:Checking exceptions
2020-10-19 05:56:16,628:INFO:Importing libraries
2020-10-19 05:56:16,628:INFO:Copying training dataset
2020-10-19 05:56:16,635:INFO:Defining folds
2020-10-19 05:56:16,635:INFO:Declaring metric variables
2020-10-19 05:56:16,642:INFO:Importing untrained model
2020-10-19 05:56:16,648:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 05:56:16,659:INFO:Starting cross validation
2020-10-19 05:56:16,659:INFO:Cross validating with n_jobs=-1
2020-10-19 05:56:38,139:INFO:Calculating mean and std
2020-10-19 05:56:38,142:INFO:Creating metrics dataframe
2020-10-19 05:56:38,151:INFO:Uploading results into container
2020-10-19 05:56:38,151:INFO:Uploading model into container now
2020-10-19 05:56:38,151:INFO:create_model_container: 3
2020-10-19 05:56:38,151:INFO:master_model_container: 3
2020-10-19 05:56:38,151:INFO:display_container: 1
2020-10-19 05:56:38,152:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 05:56:38,152:INFO:create_model() succesfully completed......................................
2020-10-19 05:56:38,238:INFO:SubProcess create_model() end ==================================
2020-10-19 05:56:38,239:INFO:Creating metrics dataframe
2020-10-19 05:56:38,256:INFO:Initializing Random Forest Regressor
2020-10-19 05:56:38,256:INFO:Total runtime is 0.6331499656041464 minutes
2020-10-19 05:56:38,264:INFO:SubProcess create_model() called ==================================
2020-10-19 05:56:38,265:INFO:Initializing create_model()
2020-10-19 05:56:38,265:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001430651BE88>, kwargs={})
2020-10-19 05:56:38,265:INFO:Checking exceptions
2020-10-19 05:56:38,265:INFO:Importing libraries
2020-10-19 05:56:38,265:INFO:Copying training dataset
2020-10-19 05:56:38,272:INFO:Defining folds
2020-10-19 05:56:38,272:INFO:Declaring metric variables
2020-10-19 05:56:38,279:INFO:Importing untrained model
2020-10-19 05:56:38,284:INFO:Random Forest Regressor Imported succesfully
2020-10-19 05:56:38,296:INFO:Starting cross validation
2020-10-19 05:56:38,296:INFO:Cross validating with n_jobs=-1
2020-10-19 06:15:46,970:INFO:Calculating mean and std
2020-10-19 06:15:47,064:INFO:Creating metrics dataframe
2020-10-19 06:15:47,174:INFO:Uploading results into container
2020-10-19 06:15:47,175:INFO:Uploading model into container now
2020-10-19 06:15:47,175:INFO:create_model_container: 4
2020-10-19 06:15:47,175:INFO:master_model_container: 4
2020-10-19 06:15:47,175:INFO:display_container: 1
2020-10-19 06:15:47,186:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 06:15:47,186:INFO:create_model() succesfully completed......................................
2020-10-19 06:15:50,569:INFO:SubProcess create_model() end ==================================
2020-10-19 06:15:50,569:INFO:Creating metrics dataframe
2020-10-19 06:15:50,621:INFO:Initializing Extra Trees Regressor
2020-10-19 06:15:50,621:INFO:Total runtime is 19.839233231544494 minutes
2020-10-19 06:15:50,631:INFO:SubProcess create_model() called ==================================
2020-10-19 06:15:50,631:INFO:Initializing create_model()
2020-10-19 06:15:50,631:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001430651BE88>, kwargs={})
2020-10-19 06:15:50,631:INFO:Checking exceptions
2020-10-19 06:15:50,631:INFO:Importing libraries
2020-10-19 06:15:50,632:INFO:Copying training dataset
2020-10-19 06:15:53,079:INFO:Defining folds
2020-10-19 06:15:53,079:INFO:Declaring metric variables
2020-10-19 06:15:53,087:INFO:Importing untrained model
2020-10-19 06:15:53,093:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 06:15:53,104:INFO:Starting cross validation
2020-10-19 06:15:53,104:INFO:Cross validating with n_jobs=-1
2020-10-19 06:27:09,142:INFO:Calculating mean and std
2020-10-19 06:27:09,276:INFO:Creating metrics dataframe
2020-10-19 06:27:09,425:INFO:Uploading results into container
2020-10-19 06:27:09,427:INFO:Uploading model into container now
2020-10-19 06:27:09,427:INFO:create_model_container: 5
2020-10-19 06:27:09,427:INFO:master_model_container: 5
2020-10-19 06:27:09,427:INFO:display_container: 1
2020-10-19 06:27:09,444:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 06:27:09,444:INFO:create_model() succesfully completed......................................
2020-10-19 06:27:13,879:INFO:SubProcess create_model() end ==================================
2020-10-19 06:27:13,879:INFO:Creating metrics dataframe
2020-10-19 06:27:13,922:INFO:Initializing MLP Regressor
2020-10-19 06:27:13,922:INFO:Total runtime is 31.227583344777422 minutes
2020-10-19 06:27:13,929:INFO:SubProcess create_model() called ==================================
2020-10-19 06:27:13,929:INFO:Initializing create_model()
2020-10-19 06:27:13,930:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001430651BE88>, kwargs={})
2020-10-19 06:27:13,930:INFO:Checking exceptions
2020-10-19 06:27:13,930:INFO:Importing libraries
2020-10-19 06:27:13,930:INFO:Copying training dataset
2020-10-19 06:27:16,321:INFO:Defining folds
2020-10-19 06:27:16,321:INFO:Declaring metric variables
2020-10-19 06:27:16,334:INFO:Importing untrained model
2020-10-19 06:27:16,341:INFO:MLP Regressor Imported succesfully
2020-10-19 06:27:16,353:INFO:Starting cross validation
2020-10-19 06:27:16,353:INFO:Cross validating with n_jobs=-1
2020-10-19 06:28:08,618:INFO:Calculating mean and std
2020-10-19 06:28:08,619:INFO:Creating metrics dataframe
2020-10-19 06:28:08,622:INFO:Uploading results into container
2020-10-19 06:28:08,622:INFO:Uploading model into container now
2020-10-19 06:28:08,622:INFO:create_model_container: 6
2020-10-19 06:28:08,622:INFO:master_model_container: 6
2020-10-19 06:28:08,622:INFO:display_container: 1
2020-10-19 06:28:08,623:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 06:28:08,623:INFO:create_model() succesfully completed......................................
2020-10-19 06:28:08,705:INFO:SubProcess create_model() end ==================================
2020-10-19 06:28:08,705:INFO:Creating metrics dataframe
2020-10-19 06:28:08,732:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 06:28:08,732:INFO:Total runtime is 32.14108548164367 minutes
2020-10-19 06:28:08,741:INFO:SubProcess create_model() called ==================================
2020-10-19 06:28:08,741:INFO:Initializing create_model()
2020-10-19 06:28:08,742:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001430651BE88>, kwargs={})
2020-10-19 06:28:08,742:INFO:Checking exceptions
2020-10-19 06:28:08,742:INFO:Importing libraries
2020-10-19 06:28:08,742:INFO:Copying training dataset
2020-10-19 06:28:08,749:INFO:Defining folds
2020-10-19 06:28:08,749:INFO:Declaring metric variables
2020-10-19 06:28:08,756:INFO:Importing untrained model
2020-10-19 06:28:08,763:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 06:28:08,776:INFO:Starting cross validation
2020-10-19 06:28:08,776:INFO:Cross validating with n_jobs=-1
2020-10-19 06:28:20,118:INFO:Calculating mean and std
2020-10-19 06:28:20,122:INFO:Creating metrics dataframe
2020-10-19 06:28:20,129:INFO:Uploading results into container
2020-10-19 06:28:20,129:INFO:Uploading model into container now
2020-10-19 06:28:20,129:INFO:create_model_container: 7
2020-10-19 06:28:20,129:INFO:master_model_container: 7
2020-10-19 06:28:20,129:INFO:display_container: 1
2020-10-19 06:28:20,129:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 06:28:20,129:INFO:create_model() succesfully completed......................................
2020-10-19 06:28:20,211:INFO:SubProcess create_model() end ==================================
2020-10-19 06:28:20,212:INFO:Creating metrics dataframe
2020-10-19 06:28:20,235:INFO:Initializing CatBoost Regressor
2020-10-19 06:28:20,235:INFO:Total runtime is 32.33280299901962 minutes
2020-10-19 06:28:20,243:INFO:SubProcess create_model() called ==================================
2020-10-19 06:28:20,243:INFO:Initializing create_model()
2020-10-19 06:28:20,243:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001430651BE88>, kwargs={})
2020-10-19 06:28:20,243:INFO:Checking exceptions
2020-10-19 06:28:20,243:INFO:Importing libraries
2020-10-19 06:28:20,243:INFO:Copying training dataset
2020-10-19 06:28:20,250:INFO:Defining folds
2020-10-19 06:28:20,250:INFO:Declaring metric variables
2020-10-19 06:28:20,257:INFO:Importing untrained model
2020-10-19 06:28:20,268:INFO:CatBoost Regressor Imported succesfully
2020-10-19 06:28:20,280:INFO:Starting cross validation
2020-10-19 06:28:20,280:INFO:Cross validating with n_jobs=-1
2020-10-19 06:32:31,359:INFO:Calculating mean and std
2020-10-19 06:32:31,360:INFO:Creating metrics dataframe
2020-10-19 06:32:31,364:INFO:Uploading results into container
2020-10-19 06:32:31,364:INFO:Uploading model into container now
2020-10-19 06:32:31,364:INFO:create_model_container: 8
2020-10-19 06:32:31,364:INFO:master_model_container: 8
2020-10-19 06:32:31,364:INFO:display_container: 1
2020-10-19 06:32:31,364:INFO:<catboost.core.CatBoostRegressor object at 0x000001428020F388>
2020-10-19 06:32:31,364:INFO:create_model() succesfully completed......................................
2020-10-19 06:32:31,458:INFO:SubProcess create_model() end ==================================
2020-10-19 06:32:31,458:INFO:Creating metrics dataframe
2020-10-19 06:32:31,498:INFO:Initializing create_model()
2020-10-19 06:32:31,499:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 06:32:31,499:INFO:Checking exceptions
2020-10-19 06:32:31,499:INFO:Importing libraries
2020-10-19 06:32:31,499:INFO:Copying training dataset
2020-10-19 06:32:31,507:INFO:Defining folds
2020-10-19 06:32:31,507:INFO:Declaring metric variables
2020-10-19 06:32:31,507:INFO:Importing untrained model
2020-10-19 06:32:31,507:INFO:Declaring custom model
2020-10-19 06:32:31,508:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 06:32:31,508:INFO:Cross validation set to False
2020-10-19 06:32:31,508:INFO:Fitting Model
2020-10-19 06:33:12,582:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 06:33:12,582:INFO:create_models() succesfully completed......................................
2020-10-19 06:33:12,716:INFO:create_model_container: 8
2020-10-19 06:33:12,716:INFO:master_model_container: 8
2020-10-19 06:33:12,716:INFO:display_container: 1
2020-10-19 06:33:12,716:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 06:33:12,716:INFO:compare_models() succesfully completed......................................
2020-10-19 11:47:15,220:INFO:PyCaret Supervised Module
2020-10-19 11:47:15,220:INFO:ML Usecase: regression
2020-10-19 11:47:15,220:INFO:version 2.2.0
2020-10-19 11:47:15,220:INFO:Initializing setup()
2020-10-19 11:47:15,220:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 11:47:15,220:INFO:Checking environment
2020-10-19 11:47:15,220:INFO:python_version: 3.7.6
2020-10-19 11:47:15,220:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 11:47:15,220:INFO:machine: AMD64
2020-10-19 11:47:15,220:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 11:47:15,221:INFO:Memory: svmem(total=16969158656, available=9122582528, percent=46.2, used=7846576128, free=9122582528)
2020-10-19 11:47:15,221:INFO:Physical Core: 4
2020-10-19 11:47:15,221:INFO:Logical Core: 8
2020-10-19 11:47:15,221:INFO:Checking libraries
2020-10-19 11:47:15,221:INFO:pd==1.1.3
2020-10-19 11:47:15,221:INFO:numpy==1.18.1
2020-10-19 11:47:15,221:INFO:sklearn==0.23.2
2020-10-19 11:47:15,221:INFO:xgboost==1.2.1
2020-10-19 11:47:15,221:INFO:lightgbm==2.3.1
2020-10-19 11:47:15,221:INFO:catboost==0.24.2
2020-10-19 11:47:15,221:INFO:mlflow==1.11.0
2020-10-19 11:47:15,221:INFO:Checking Exceptions
2020-10-19 11:47:15,221:INFO:Declaring global variables
2020-10-19 11:47:15,221:INFO:USI: e44e
2020-10-19 11:47:15,221:INFO:pycaret_globals: {'fold_groups_param', 'master_model_container', 'fix_imbalance_method_param', 'pycaret_globals', 'html_param', 'create_model_container', 'log_plots_param', 'imputation_regressor', 'exp_name_log', 'fold_param', 'prep_pipe', '_all_models_internal', 'display_container', 'y', '_internal_pipeline', 'y_train', 'transform_target_param', '_ml_usecase', 'y_test', 'seed', 'iterative_imputation_iters_param', 'stratify_param', 'data_before_preprocess', 'X', '_all_metrics', 'X_test', 'transform_target_method_param', 'n_jobs_param', 'USI', 'target_param', 'fold_shuffle_param', 'fix_imbalance_param', '_gpu_n_jobs_param', 'experiment__', 'X_train', '_all_models', 'logging_param', 'gpu_param', 'fold_generator', 'imputation_classifier'}
2020-10-19 11:47:15,221:INFO:Preparing display monitor
2020-10-19 11:47:15,221:INFO:Importing libraries
2020-10-19 11:47:15,221:INFO:Copying data for preprocessing
2020-10-19 11:47:15,538:INFO:Declaring preprocessing parameters
2020-10-19 11:47:15,829:INFO:Creating preprocessing pipeline
2020-10-19 11:47:17,824:INFO:Preprocessing pipeline created successfully
2020-10-19 11:47:17,824:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 11:47:17,824:INFO:Creating global containers
2020-10-19 11:47:17,824:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 11:47:30,768:INFO:Creating grid variables
2020-10-19 11:47:30,835:INFO:create_model_container: 0
2020-10-19 11:47:30,835:INFO:master_model_container: 0
2020-10-19 11:47:30,835:INFO:display_container: 0
2020-10-19 11:47:30,841:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 11:47:30,841:INFO:setup() succesfully completed......................................
2020-10-19 11:47:31,030:INFO:Initializing compare_models()
2020-10-19 11:47:31,031:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 11:47:31,031:INFO:Checking exceptions
2020-10-19 11:47:31,031:INFO:Preparing display monitor
2020-10-19 11:47:31,031:INFO:Preparing display monitor
2020-10-19 11:47:31,050:INFO:Initializing Linear Regression
2020-10-19 11:47:31,051:INFO:Total runtime is 1.6645590464274088e-05 minutes
2020-10-19 11:47:31,058:INFO:SubProcess create_model() called ==================================
2020-10-19 11:47:31,058:INFO:Initializing create_model()
2020-10-19 11:47:31,058:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8B84D9C8>, kwargs={})
2020-10-19 11:47:31,058:INFO:Checking exceptions
2020-10-19 11:47:31,058:INFO:Importing libraries
2020-10-19 11:47:31,058:INFO:Copying training dataset
2020-10-19 11:47:31,066:INFO:Defining folds
2020-10-19 11:47:31,066:INFO:Declaring metric variables
2020-10-19 11:47:31,072:INFO:Importing untrained model
2020-10-19 11:47:31,078:INFO:Linear Regression Imported succesfully
2020-10-19 11:47:31,094:INFO:Starting cross validation
2020-10-19 11:47:31,094:INFO:Cross validating with n_jobs=-1
2020-10-19 11:47:38,671:INFO:Calculating mean and std
2020-10-19 11:47:38,674:INFO:Creating metrics dataframe
2020-10-19 11:47:38,691:INFO:Uploading results into container
2020-10-19 11:47:38,692:INFO:Uploading model into container now
2020-10-19 11:47:38,692:INFO:create_model_container: 1
2020-10-19 11:47:38,692:INFO:master_model_container: 1
2020-10-19 11:47:38,692:INFO:display_container: 1
2020-10-19 11:47:38,693:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 11:47:38,693:INFO:create_model() succesfully completed......................................
2020-10-19 11:47:38,797:INFO:SubProcess create_model() end ==================================
2020-10-19 11:47:38,797:INFO:Creating metrics dataframe
2020-10-19 11:47:38,814:INFO:Initializing K Neighbors Regressor
2020-10-19 11:47:38,814:INFO:Total runtime is 0.1294154723485311 minutes
2020-10-19 11:47:38,824:INFO:SubProcess create_model() called ==================================
2020-10-19 11:47:38,825:INFO:Initializing create_model()
2020-10-19 11:47:38,825:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8B84D9C8>, kwargs={})
2020-10-19 11:47:38,825:INFO:Checking exceptions
2020-10-19 11:47:38,825:INFO:Importing libraries
2020-10-19 11:47:38,825:INFO:Copying training dataset
2020-10-19 11:47:38,837:INFO:Defining folds
2020-10-19 11:47:38,838:INFO:Declaring metric variables
2020-10-19 11:47:38,845:INFO:Importing untrained model
2020-10-19 11:47:38,852:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 11:47:38,873:INFO:Starting cross validation
2020-10-19 11:47:38,874:INFO:Cross validating with n_jobs=-1
2020-10-19 11:48:05,450:INFO:Calculating mean and std
2020-10-19 11:48:05,453:INFO:Creating metrics dataframe
2020-10-19 11:48:05,464:INFO:Uploading results into container
2020-10-19 11:48:05,464:INFO:Uploading model into container now
2020-10-19 11:48:05,465:INFO:create_model_container: 2
2020-10-19 11:48:05,465:INFO:master_model_container: 2
2020-10-19 11:48:05,466:INFO:display_container: 1
2020-10-19 11:48:05,467:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 11:48:05,468:INFO:create_model() succesfully completed......................................
2020-10-19 11:48:05,575:INFO:SubProcess create_model() end ==================================
2020-10-19 11:48:05,575:INFO:Creating metrics dataframe
2020-10-19 11:48:05,593:INFO:Initializing Decision Tree Regressor
2020-10-19 11:48:05,593:INFO:Total runtime is 0.5757179856300354 minutes
2020-10-19 11:48:05,601:INFO:SubProcess create_model() called ==================================
2020-10-19 11:48:05,601:INFO:Initializing create_model()
2020-10-19 11:48:05,601:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8B84D9C8>, kwargs={})
2020-10-19 11:48:05,601:INFO:Checking exceptions
2020-10-19 11:48:05,601:INFO:Importing libraries
2020-10-19 11:48:05,601:INFO:Copying training dataset
2020-10-19 11:48:05,610:INFO:Defining folds
2020-10-19 11:48:05,610:INFO:Declaring metric variables
2020-10-19 11:48:05,618:INFO:Importing untrained model
2020-10-19 11:48:05,624:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 11:48:05,640:INFO:Starting cross validation
2020-10-19 11:48:05,641:INFO:Cross validating with n_jobs=-1
2020-10-19 11:48:34,363:INFO:Calculating mean and std
2020-10-19 11:48:34,365:INFO:Creating metrics dataframe
2020-10-19 11:48:34,373:INFO:Uploading results into container
2020-10-19 11:48:34,373:INFO:Uploading model into container now
2020-10-19 11:48:34,373:INFO:create_model_container: 3
2020-10-19 11:48:34,373:INFO:master_model_container: 3
2020-10-19 11:48:34,373:INFO:display_container: 1
2020-10-19 11:48:34,374:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 11:48:34,374:INFO:create_model() succesfully completed......................................
2020-10-19 11:48:34,464:INFO:SubProcess create_model() end ==================================
2020-10-19 11:48:34,464:INFO:Creating metrics dataframe
2020-10-19 11:48:34,481:INFO:Initializing Random Forest Regressor
2020-10-19 11:48:34,482:INFO:Total runtime is 1.0572042107582091 minutes
2020-10-19 11:48:34,489:INFO:SubProcess create_model() called ==================================
2020-10-19 11:48:34,490:INFO:Initializing create_model()
2020-10-19 11:48:34,490:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8B84D9C8>, kwargs={})
2020-10-19 11:48:34,490:INFO:Checking exceptions
2020-10-19 11:48:34,490:INFO:Importing libraries
2020-10-19 11:48:34,490:INFO:Copying training dataset
2020-10-19 11:48:34,499:INFO:Defining folds
2020-10-19 11:48:34,500:INFO:Declaring metric variables
2020-10-19 11:48:34,507:INFO:Importing untrained model
2020-10-19 11:48:34,513:INFO:Random Forest Regressor Imported succesfully
2020-10-19 11:48:34,533:INFO:Starting cross validation
2020-10-19 11:48:34,534:INFO:Cross validating with n_jobs=-1
2020-10-19 12:18:45,690:INFO:Calculating mean and std
2020-10-19 12:18:45,769:INFO:Creating metrics dataframe
2020-10-19 12:18:45,867:INFO:Uploading results into container
2020-10-19 12:18:45,867:INFO:Uploading model into container now
2020-10-19 12:18:45,868:INFO:create_model_container: 4
2020-10-19 12:18:45,868:INFO:master_model_container: 4
2020-10-19 12:18:45,868:INFO:display_container: 1
2020-10-19 12:18:45,880:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 12:18:45,881:INFO:create_model() succesfully completed......................................
2020-10-19 12:18:48,654:INFO:SubProcess create_model() end ==================================
2020-10-19 12:18:48,654:INFO:Creating metrics dataframe
2020-10-19 12:18:48,711:INFO:Initializing Extra Trees Regressor
2020-10-19 12:18:48,711:INFO:Total runtime is 31.294350651899972 minutes
2020-10-19 12:18:48,721:INFO:SubProcess create_model() called ==================================
2020-10-19 12:18:48,722:INFO:Initializing create_model()
2020-10-19 12:18:48,722:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8B84D9C8>, kwargs={})
2020-10-19 12:18:48,722:INFO:Checking exceptions
2020-10-19 12:18:48,722:INFO:Importing libraries
2020-10-19 12:18:48,722:INFO:Copying training dataset
2020-10-19 12:18:48,908:INFO:Defining folds
2020-10-19 12:18:48,908:INFO:Declaring metric variables
2020-10-19 12:18:48,914:INFO:Importing untrained model
2020-10-19 12:18:48,921:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 12:18:48,935:INFO:Starting cross validation
2020-10-19 12:18:48,935:INFO:Cross validating with n_jobs=-1
2020-10-19 12:27:09,426:INFO:Calculating mean and std
2020-10-19 12:27:09,482:INFO:Creating metrics dataframe
2020-10-19 12:27:09,562:INFO:Uploading results into container
2020-10-19 12:27:09,563:INFO:Uploading model into container now
2020-10-19 12:27:09,563:INFO:create_model_container: 5
2020-10-19 12:27:09,564:INFO:master_model_container: 5
2020-10-19 12:27:09,564:INFO:display_container: 1
2020-10-19 12:27:09,575:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 12:27:09,576:INFO:create_model() succesfully completed......................................
2020-10-19 12:27:12,172:INFO:SubProcess create_model() end ==================================
2020-10-19 12:27:12,172:INFO:Creating metrics dataframe
2020-10-19 12:27:12,215:INFO:Initializing MLP Regressor
2020-10-19 12:27:12,215:INFO:Total runtime is 39.686097625891364 minutes
2020-10-19 12:27:12,225:INFO:SubProcess create_model() called ==================================
2020-10-19 12:27:12,225:INFO:Initializing create_model()
2020-10-19 12:27:12,226:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8B84D9C8>, kwargs={})
2020-10-19 12:27:12,226:INFO:Checking exceptions
2020-10-19 12:27:12,226:INFO:Importing libraries
2020-10-19 12:27:12,226:INFO:Copying training dataset
2020-10-19 12:27:12,234:INFO:Defining folds
2020-10-19 12:27:12,234:INFO:Declaring metric variables
2020-10-19 12:27:12,241:INFO:Importing untrained model
2020-10-19 12:27:12,248:INFO:MLP Regressor Imported succesfully
2020-10-19 12:27:12,264:INFO:Starting cross validation
2020-10-19 12:27:12,265:INFO:Cross validating with n_jobs=-1
2020-10-19 12:28:23,690:INFO:Calculating mean and std
2020-10-19 12:28:23,692:INFO:Creating metrics dataframe
2020-10-19 12:28:23,701:INFO:Uploading results into container
2020-10-19 12:28:23,701:INFO:Uploading model into container now
2020-10-19 12:28:23,701:INFO:create_model_container: 6
2020-10-19 12:28:23,701:INFO:master_model_container: 6
2020-10-19 12:28:23,701:INFO:display_container: 1
2020-10-19 12:28:23,703:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 12:28:23,703:INFO:create_model() succesfully completed......................................
2020-10-19 12:28:23,791:INFO:SubProcess create_model() end ==================================
2020-10-19 12:28:23,791:INFO:Creating metrics dataframe
2020-10-19 12:28:23,817:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 12:28:23,817:INFO:Total runtime is 40.87945830424626 minutes
2020-10-19 12:28:23,828:INFO:SubProcess create_model() called ==================================
2020-10-19 12:28:23,829:INFO:Initializing create_model()
2020-10-19 12:28:23,829:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8B84D9C8>, kwargs={})
2020-10-19 12:28:23,829:INFO:Checking exceptions
2020-10-19 12:28:23,829:INFO:Importing libraries
2020-10-19 12:28:23,829:INFO:Copying training dataset
2020-10-19 12:28:23,837:INFO:Defining folds
2020-10-19 12:28:23,837:INFO:Declaring metric variables
2020-10-19 12:28:23,846:INFO:Importing untrained model
2020-10-19 12:28:23,853:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 12:28:23,866:INFO:Starting cross validation
2020-10-19 12:28:23,866:INFO:Cross validating with n_jobs=-1
2020-10-19 12:28:36,390:INFO:Calculating mean and std
2020-10-19 12:28:36,391:INFO:Creating metrics dataframe
2020-10-19 12:28:36,395:INFO:Uploading results into container
2020-10-19 12:28:36,395:INFO:Uploading model into container now
2020-10-19 12:28:36,395:INFO:create_model_container: 7
2020-10-19 12:28:36,395:INFO:master_model_container: 7
2020-10-19 12:28:36,395:INFO:display_container: 1
2020-10-19 12:28:36,395:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 12:28:36,395:INFO:create_model() succesfully completed......................................
2020-10-19 12:28:36,482:INFO:SubProcess create_model() end ==================================
2020-10-19 12:28:36,482:INFO:Creating metrics dataframe
2020-10-19 12:28:36,510:INFO:Initializing CatBoost Regressor
2020-10-19 12:28:36,510:INFO:Total runtime is 41.09101132154464 minutes
2020-10-19 12:28:36,520:INFO:SubProcess create_model() called ==================================
2020-10-19 12:28:36,520:INFO:Initializing create_model()
2020-10-19 12:28:36,520:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8B84D9C8>, kwargs={})
2020-10-19 12:28:36,520:INFO:Checking exceptions
2020-10-19 12:28:36,520:INFO:Importing libraries
2020-10-19 12:28:36,520:INFO:Copying training dataset
2020-10-19 12:28:36,527:INFO:Defining folds
2020-10-19 12:28:36,527:INFO:Declaring metric variables
2020-10-19 12:28:36,535:INFO:Importing untrained model
2020-10-19 12:28:36,566:INFO:CatBoost Regressor Imported succesfully
2020-10-19 12:28:36,587:INFO:Starting cross validation
2020-10-19 12:28:36,587:INFO:Cross validating with n_jobs=-1
2020-10-19 12:34:07,640:INFO:Calculating mean and std
2020-10-19 12:34:07,642:INFO:Creating metrics dataframe
2020-10-19 12:34:07,646:INFO:Uploading results into container
2020-10-19 12:34:07,646:INFO:Uploading model into container now
2020-10-19 12:34:07,647:INFO:create_model_container: 8
2020-10-19 12:34:07,647:INFO:master_model_container: 8
2020-10-19 12:34:07,647:INFO:display_container: 1
2020-10-19 12:34:07,647:INFO:<catboost.core.CatBoostRegressor object at 0x00000142609702C8>
2020-10-19 12:34:07,647:INFO:create_model() succesfully completed......................................
2020-10-19 12:34:07,764:INFO:SubProcess create_model() end ==================================
2020-10-19 12:34:07,765:INFO:Creating metrics dataframe
2020-10-19 12:34:07,810:INFO:Initializing create_model()
2020-10-19 12:34:07,810:INFO:create_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 12:34:07,810:INFO:Checking exceptions
2020-10-19 12:34:07,810:INFO:Importing libraries
2020-10-19 12:34:07,810:INFO:Copying training dataset
2020-10-19 12:34:07,820:INFO:Defining folds
2020-10-19 12:34:07,820:INFO:Declaring metric variables
2020-10-19 12:34:07,820:INFO:Importing untrained model
2020-10-19 12:34:07,820:INFO:Declaring custom model
2020-10-19 12:34:07,821:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 12:34:07,821:INFO:Cross validation set to False
2020-10-19 12:34:07,821:INFO:Fitting Model
2020-10-19 12:34:10,208:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 12:34:10,208:INFO:create_models() succesfully completed......................................
2020-10-19 12:34:10,332:INFO:create_model_container: 8
2020-10-19 12:34:10,332:INFO:master_model_container: 8
2020-10-19 12:34:10,332:INFO:display_container: 1
2020-10-19 12:34:10,332:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 12:34:10,332:INFO:compare_models() succesfully completed......................................
2020-10-19 12:34:21,595:INFO:PyCaret Supervised Module
2020-10-19 12:34:21,595:INFO:ML Usecase: regression
2020-10-19 12:34:21,595:INFO:version 2.2.0
2020-10-19 12:34:21,595:INFO:Initializing setup()
2020-10-19 12:34:21,595:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 12:34:21,595:INFO:Checking environment
2020-10-19 12:34:21,595:INFO:python_version: 3.7.6
2020-10-19 12:34:21,595:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 12:34:21,595:INFO:machine: AMD64
2020-10-19 12:34:21,595:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 12:34:21,595:INFO:Memory: svmem(total=16969158656, available=11532980224, percent=32.0, used=5436178432, free=11532980224)
2020-10-19 12:34:21,596:INFO:Physical Core: 4
2020-10-19 12:34:21,596:INFO:Logical Core: 8
2020-10-19 12:34:21,596:INFO:Checking libraries
2020-10-19 12:34:21,596:INFO:pd==1.1.3
2020-10-19 12:34:21,596:INFO:numpy==1.18.1
2020-10-19 12:34:21,596:INFO:sklearn==0.23.2
2020-10-19 12:34:21,596:INFO:xgboost==1.2.1
2020-10-19 12:34:21,596:INFO:lightgbm==2.3.1
2020-10-19 12:34:21,596:INFO:catboost==0.24.2
2020-10-19 12:34:21,596:INFO:mlflow==1.11.0
2020-10-19 12:34:21,596:INFO:Checking Exceptions
2020-10-19 12:34:21,596:INFO:Declaring global variables
2020-10-19 12:34:21,596:INFO:USI: e42c
2020-10-19 12:34:21,596:INFO:pycaret_globals: {'fold_groups_param', 'master_model_container', 'fix_imbalance_method_param', 'pycaret_globals', 'html_param', 'create_model_container', 'log_plots_param', 'imputation_regressor', 'exp_name_log', 'fold_param', 'prep_pipe', '_all_models_internal', 'display_container', 'y', '_internal_pipeline', 'y_train', 'transform_target_param', '_ml_usecase', 'y_test', 'seed', 'iterative_imputation_iters_param', 'stratify_param', 'data_before_preprocess', 'X', '_all_metrics', 'X_test', 'transform_target_method_param', 'n_jobs_param', 'USI', 'target_param', 'fold_shuffle_param', 'fix_imbalance_param', '_gpu_n_jobs_param', 'experiment__', 'X_train', '_all_models', 'logging_param', 'gpu_param', 'fold_generator', 'imputation_classifier'}
2020-10-19 12:34:21,596:INFO:Preparing display monitor
2020-10-19 12:34:21,597:INFO:Importing libraries
2020-10-19 12:34:21,597:INFO:Copying data for preprocessing
2020-10-19 12:34:21,831:INFO:Declaring preprocessing parameters
2020-10-19 12:34:22,073:INFO:Creating preprocessing pipeline
2020-10-19 12:34:23,645:INFO:Preprocessing pipeline created successfully
2020-10-19 12:34:23,645:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 12:34:23,645:INFO:Creating global containers
2020-10-19 12:34:23,645:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 12:34:34,533:INFO:Creating grid variables
2020-10-19 12:34:34,578:INFO:create_model_container: 0
2020-10-19 12:34:34,578:INFO:master_model_container: 0
2020-10-19 12:34:34,578:INFO:display_container: 0
2020-10-19 12:34:34,582:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 12:34:34,583:INFO:setup() succesfully completed......................................
2020-10-19 12:34:34,721:INFO:Initializing compare_models()
2020-10-19 12:34:34,722:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 12:34:34,722:INFO:Checking exceptions
2020-10-19 12:34:34,722:INFO:Preparing display monitor
2020-10-19 12:34:34,722:INFO:Preparing display monitor
2020-10-19 12:34:34,741:INFO:Initializing Linear Regression
2020-10-19 12:34:34,741:INFO:Total runtime is 0.0 minutes
2020-10-19 12:34:34,747:INFO:SubProcess create_model() called ==================================
2020-10-19 12:34:34,747:INFO:Initializing create_model()
2020-10-19 12:34:34,747:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8CD2C608>, kwargs={})
2020-10-19 12:34:34,747:INFO:Checking exceptions
2020-10-19 12:34:34,747:INFO:Importing libraries
2020-10-19 12:34:34,747:INFO:Copying training dataset
2020-10-19 12:34:34,754:INFO:Defining folds
2020-10-19 12:34:34,754:INFO:Declaring metric variables
2020-10-19 12:34:34,760:INFO:Importing untrained model
2020-10-19 12:34:34,770:INFO:Linear Regression Imported succesfully
2020-10-19 12:34:34,791:INFO:Starting cross validation
2020-10-19 12:34:34,792:INFO:Cross validating with n_jobs=-1
2020-10-19 12:34:35,674:INFO:Calculating mean and std
2020-10-19 12:34:35,675:INFO:Creating metrics dataframe
2020-10-19 12:34:35,683:INFO:Uploading results into container
2020-10-19 12:34:35,683:INFO:Uploading model into container now
2020-10-19 12:34:35,683:INFO:create_model_container: 1
2020-10-19 12:34:35,683:INFO:master_model_container: 1
2020-10-19 12:34:35,683:INFO:display_container: 1
2020-10-19 12:34:35,683:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 12:34:35,683:INFO:create_model() succesfully completed......................................
2020-10-19 12:34:35,790:INFO:SubProcess create_model() end ==================================
2020-10-19 12:34:35,790:INFO:Creating metrics dataframe
2020-10-19 12:34:35,804:INFO:Initializing K Neighbors Regressor
2020-10-19 12:34:35,804:INFO:Total runtime is 0.01770893732706706 minutes
2020-10-19 12:34:35,813:INFO:SubProcess create_model() called ==================================
2020-10-19 12:34:35,813:INFO:Initializing create_model()
2020-10-19 12:34:35,813:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8CD2C608>, kwargs={})
2020-10-19 12:34:35,813:INFO:Checking exceptions
2020-10-19 12:34:35,813:INFO:Importing libraries
2020-10-19 12:34:35,813:INFO:Copying training dataset
2020-10-19 12:34:35,819:INFO:Defining folds
2020-10-19 12:34:35,820:INFO:Declaring metric variables
2020-10-19 12:34:35,827:INFO:Importing untrained model
2020-10-19 12:34:35,838:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 12:34:35,855:INFO:Starting cross validation
2020-10-19 12:34:35,856:INFO:Cross validating with n_jobs=-1
2020-10-19 12:34:52,616:INFO:Calculating mean and std
2020-10-19 12:34:52,620:INFO:Creating metrics dataframe
2020-10-19 12:34:52,633:INFO:Uploading results into container
2020-10-19 12:34:52,633:INFO:Uploading model into container now
2020-10-19 12:34:52,633:INFO:create_model_container: 2
2020-10-19 12:34:52,634:INFO:master_model_container: 2
2020-10-19 12:34:52,634:INFO:display_container: 1
2020-10-19 12:34:52,635:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 12:34:52,635:INFO:create_model() succesfully completed......................................
2020-10-19 12:34:52,753:INFO:SubProcess create_model() end ==================================
2020-10-19 12:34:52,753:INFO:Creating metrics dataframe
2020-10-19 12:34:52,771:INFO:Initializing Decision Tree Regressor
2020-10-19 12:34:52,771:INFO:Total runtime is 0.3004882017771403 minutes
2020-10-19 12:34:52,779:INFO:SubProcess create_model() called ==================================
2020-10-19 12:34:52,780:INFO:Initializing create_model()
2020-10-19 12:34:52,780:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8CD2C608>, kwargs={})
2020-10-19 12:34:52,780:INFO:Checking exceptions
2020-10-19 12:34:52,780:INFO:Importing libraries
2020-10-19 12:34:52,780:INFO:Copying training dataset
2020-10-19 12:34:52,787:INFO:Defining folds
2020-10-19 12:34:52,788:INFO:Declaring metric variables
2020-10-19 12:34:52,794:INFO:Importing untrained model
2020-10-19 12:34:52,800:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 12:34:52,826:INFO:Starting cross validation
2020-10-19 12:34:52,826:INFO:Cross validating with n_jobs=-1
2020-10-19 12:35:15,550:INFO:Calculating mean and std
2020-10-19 12:35:15,551:INFO:Creating metrics dataframe
2020-10-19 12:35:15,555:INFO:Uploading results into container
2020-10-19 12:35:15,555:INFO:Uploading model into container now
2020-10-19 12:35:15,555:INFO:create_model_container: 3
2020-10-19 12:35:15,555:INFO:master_model_container: 3
2020-10-19 12:35:15,555:INFO:display_container: 1
2020-10-19 12:35:15,556:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 12:35:15,556:INFO:create_model() succesfully completed......................................
2020-10-19 12:35:15,641:INFO:SubProcess create_model() end ==================================
2020-10-19 12:35:15,641:INFO:Creating metrics dataframe
2020-10-19 12:35:15,658:INFO:Initializing Random Forest Regressor
2020-10-19 12:35:15,658:INFO:Total runtime is 0.6819357752799988 minutes
2020-10-19 12:35:15,665:INFO:SubProcess create_model() called ==================================
2020-10-19 12:35:15,666:INFO:Initializing create_model()
2020-10-19 12:35:15,666:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8CD2C608>, kwargs={})
2020-10-19 12:35:15,666:INFO:Checking exceptions
2020-10-19 12:35:15,666:INFO:Importing libraries
2020-10-19 12:35:15,666:INFO:Copying training dataset
2020-10-19 12:35:15,673:INFO:Defining folds
2020-10-19 12:35:15,673:INFO:Declaring metric variables
2020-10-19 12:35:15,679:INFO:Importing untrained model
2020-10-19 12:35:15,687:INFO:Random Forest Regressor Imported succesfully
2020-10-19 12:35:15,705:INFO:Starting cross validation
2020-10-19 12:35:15,706:INFO:Cross validating with n_jobs=-1
2020-10-19 12:55:12,402:INFO:Calculating mean and std
2020-10-19 12:55:12,478:INFO:Creating metrics dataframe
2020-10-19 12:55:12,562:INFO:Uploading results into container
2020-10-19 12:55:12,563:INFO:Uploading model into container now
2020-10-19 12:55:12,564:INFO:create_model_container: 4
2020-10-19 12:55:12,564:INFO:master_model_container: 4
2020-10-19 12:55:12,564:INFO:display_container: 1
2020-10-19 12:55:12,578:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 12:55:12,578:INFO:create_model() succesfully completed......................................
2020-10-19 12:55:15,890:INFO:SubProcess create_model() end ==================================
2020-10-19 12:55:15,890:INFO:Creating metrics dataframe
2020-10-19 12:55:15,935:INFO:Initializing Extra Trees Regressor
2020-10-19 12:55:15,935:INFO:Total runtime is 20.686551423867545 minutes
2020-10-19 12:55:15,941:INFO:SubProcess create_model() called ==================================
2020-10-19 12:55:15,941:INFO:Initializing create_model()
2020-10-19 12:55:15,941:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8CD2C608>, kwargs={})
2020-10-19 12:55:15,942:INFO:Checking exceptions
2020-10-19 12:55:15,942:INFO:Importing libraries
2020-10-19 12:55:15,942:INFO:Copying training dataset
2020-10-19 12:55:16,043:INFO:Defining folds
2020-10-19 12:55:16,043:INFO:Declaring metric variables
2020-10-19 12:55:16,049:INFO:Importing untrained model
2020-10-19 12:55:16,054:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 12:55:16,065:INFO:Starting cross validation
2020-10-19 12:55:16,065:INFO:Cross validating with n_jobs=-1
2020-10-19 13:08:29,442:INFO:Calculating mean and std
2020-10-19 13:08:29,727:INFO:Creating metrics dataframe
2020-10-19 13:08:30,048:INFO:Uploading results into container
2020-10-19 13:08:30,051:INFO:Uploading model into container now
2020-10-19 13:08:30,053:INFO:create_model_container: 5
2020-10-19 13:08:30,054:INFO:master_model_container: 5
2020-10-19 13:08:30,054:INFO:display_container: 1
2020-10-19 13:08:30,105:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 13:08:30,105:INFO:create_model() succesfully completed......................................
2020-10-19 13:08:35,489:INFO:SubProcess create_model() end ==================================
2020-10-19 13:08:35,489:INFO:Creating metrics dataframe
2020-10-19 13:08:35,566:INFO:Initializing MLP Regressor
2020-10-19 13:08:35,566:INFO:Total runtime is 34.01373513142268 minutes
2020-10-19 13:08:35,578:INFO:SubProcess create_model() called ==================================
2020-10-19 13:08:35,578:INFO:Initializing create_model()
2020-10-19 13:08:35,578:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8CD2C608>, kwargs={})
2020-10-19 13:08:35,578:INFO:Checking exceptions
2020-10-19 13:08:35,578:INFO:Importing libraries
2020-10-19 13:08:35,579:INFO:Copying training dataset
2020-10-19 13:08:35,697:INFO:Defining folds
2020-10-19 13:08:35,697:INFO:Declaring metric variables
2020-10-19 13:08:35,704:INFO:Importing untrained model
2020-10-19 13:08:35,710:INFO:MLP Regressor Imported succesfully
2020-10-19 13:08:35,721:INFO:Starting cross validation
2020-10-19 13:08:35,722:INFO:Cross validating with n_jobs=-1
2020-10-19 13:09:35,672:INFO:Calculating mean and std
2020-10-19 13:09:35,672:INFO:Creating metrics dataframe
2020-10-19 13:09:35,676:INFO:Uploading results into container
2020-10-19 13:09:35,676:INFO:Uploading model into container now
2020-10-19 13:09:35,677:INFO:create_model_container: 6
2020-10-19 13:09:35,677:INFO:master_model_container: 6
2020-10-19 13:09:35,677:INFO:display_container: 1
2020-10-19 13:09:35,678:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 13:09:35,678:INFO:create_model() succesfully completed......................................
2020-10-19 13:09:35,767:INFO:SubProcess create_model() end ==================================
2020-10-19 13:09:35,767:INFO:Creating metrics dataframe
2020-10-19 13:09:35,792:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 13:09:35,792:INFO:Total runtime is 35.017501767476396 minutes
2020-10-19 13:09:35,802:INFO:SubProcess create_model() called ==================================
2020-10-19 13:09:35,802:INFO:Initializing create_model()
2020-10-19 13:09:35,802:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8CD2C608>, kwargs={})
2020-10-19 13:09:35,802:INFO:Checking exceptions
2020-10-19 13:09:35,802:INFO:Importing libraries
2020-10-19 13:09:35,802:INFO:Copying training dataset
2020-10-19 13:09:35,809:INFO:Defining folds
2020-10-19 13:09:35,809:INFO:Declaring metric variables
2020-10-19 13:09:35,816:INFO:Importing untrained model
2020-10-19 13:09:35,823:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 13:09:35,838:INFO:Starting cross validation
2020-10-19 13:09:35,838:INFO:Cross validating with n_jobs=-1
2020-10-19 13:09:48,459:INFO:Calculating mean and std
2020-10-19 13:09:48,460:INFO:Creating metrics dataframe
2020-10-19 13:09:48,463:INFO:Uploading results into container
2020-10-19 13:09:48,463:INFO:Uploading model into container now
2020-10-19 13:09:48,463:INFO:create_model_container: 7
2020-10-19 13:09:48,463:INFO:master_model_container: 7
2020-10-19 13:09:48,463:INFO:display_container: 1
2020-10-19 13:09:48,464:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 13:09:48,464:INFO:create_model() succesfully completed......................................
2020-10-19 13:09:48,547:INFO:SubProcess create_model() end ==================================
2020-10-19 13:09:48,547:INFO:Creating metrics dataframe
2020-10-19 13:09:48,568:INFO:Initializing CatBoost Regressor
2020-10-19 13:09:48,569:INFO:Total runtime is 35.23045468330383 minutes
2020-10-19 13:09:48,581:INFO:SubProcess create_model() called ==================================
2020-10-19 13:09:48,581:INFO:Initializing create_model()
2020-10-19 13:09:48,582:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013F8CD2C608>, kwargs={})
2020-10-19 13:09:48,582:INFO:Checking exceptions
2020-10-19 13:09:48,582:INFO:Importing libraries
2020-10-19 13:09:48,582:INFO:Copying training dataset
2020-10-19 13:09:48,588:INFO:Defining folds
2020-10-19 13:09:48,589:INFO:Declaring metric variables
2020-10-19 13:09:48,597:INFO:Importing untrained model
2020-10-19 13:09:48,613:INFO:CatBoost Regressor Imported succesfully
2020-10-19 13:09:48,635:INFO:Starting cross validation
2020-10-19 13:09:48,636:INFO:Cross validating with n_jobs=-1
2020-10-19 13:14:25,729:INFO:Calculating mean and std
2020-10-19 13:14:25,730:INFO:Creating metrics dataframe
2020-10-19 13:14:25,733:INFO:Uploading results into container
2020-10-19 13:14:25,733:INFO:Uploading model into container now
2020-10-19 13:14:25,733:INFO:create_model_container: 8
2020-10-19 13:14:25,734:INFO:master_model_container: 8
2020-10-19 13:14:25,734:INFO:display_container: 1
2020-10-19 13:14:25,734:INFO:<catboost.core.CatBoostRegressor object at 0x0000014382BF4CC8>
2020-10-19 13:14:25,734:INFO:create_model() succesfully completed......................................
2020-10-19 13:14:25,831:INFO:SubProcess create_model() end ==================================
2020-10-19 13:14:25,831:INFO:Creating metrics dataframe
2020-10-19 13:14:25,876:INFO:Initializing create_model()
2020-10-19 13:14:25,877:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 13:14:25,877:INFO:Checking exceptions
2020-10-19 13:14:25,877:INFO:Importing libraries
2020-10-19 13:14:25,877:INFO:Copying training dataset
2020-10-19 13:14:25,886:INFO:Defining folds
2020-10-19 13:14:25,886:INFO:Declaring metric variables
2020-10-19 13:14:25,886:INFO:Importing untrained model
2020-10-19 13:14:25,886:INFO:Declaring custom model
2020-10-19 13:14:25,887:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 13:14:25,887:INFO:Cross validation set to False
2020-10-19 13:14:25,887:INFO:Fitting Model
2020-10-19 13:15:09,612:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 13:15:09,612:INFO:create_models() succesfully completed......................................
2020-10-19 13:15:09,751:INFO:create_model_container: 8
2020-10-19 13:15:09,751:INFO:master_model_container: 8
2020-10-19 13:15:09,751:INFO:display_container: 1
2020-10-19 13:15:09,751:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 13:15:09,751:INFO:compare_models() succesfully completed......................................
2020-10-19 13:17:28,206:INFO:PyCaret Supervised Module
2020-10-19 13:17:28,206:INFO:ML Usecase: regression
2020-10-19 13:17:28,206:INFO:version 2.2.0
2020-10-19 13:17:28,206:INFO:Initializing setup()
2020-10-19 13:17:28,206:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 13:17:28,206:INFO:Checking environment
2020-10-19 13:17:28,206:INFO:python_version: 3.7.6
2020-10-19 13:17:28,206:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 13:17:28,206:INFO:machine: AMD64
2020-10-19 13:17:28,206:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 13:17:28,206:INFO:Memory: svmem(total=16969158656, available=8854228992, percent=47.8, used=8114929664, free=8854228992)
2020-10-19 13:17:28,207:INFO:Physical Core: 4
2020-10-19 13:17:28,207:INFO:Logical Core: 8
2020-10-19 13:17:28,207:INFO:Checking libraries
2020-10-19 13:17:28,207:INFO:pd==1.1.3
2020-10-19 13:17:28,207:INFO:numpy==1.18.1
2020-10-19 13:17:28,207:INFO:sklearn==0.23.2
2020-10-19 13:17:28,207:INFO:xgboost==1.2.1
2020-10-19 13:17:28,207:INFO:lightgbm==2.3.1
2020-10-19 13:17:28,207:INFO:catboost==0.24.2
2020-10-19 13:17:28,207:INFO:mlflow==1.11.0
2020-10-19 13:17:28,207:INFO:Checking Exceptions
2020-10-19 13:17:28,207:INFO:Declaring global variables
2020-10-19 13:17:28,207:INFO:USI: ce41
2020-10-19 13:17:28,207:INFO:pycaret_globals: {'fold_groups_param', 'master_model_container', 'fix_imbalance_method_param', 'pycaret_globals', 'html_param', 'create_model_container', 'log_plots_param', 'imputation_regressor', 'exp_name_log', 'fold_param', 'prep_pipe', '_all_models_internal', 'display_container', 'y', '_internal_pipeline', 'y_train', 'transform_target_param', '_ml_usecase', 'y_test', 'seed', 'iterative_imputation_iters_param', 'stratify_param', 'data_before_preprocess', 'X', '_all_metrics', 'X_test', 'transform_target_method_param', 'n_jobs_param', 'USI', 'target_param', 'fold_shuffle_param', 'fix_imbalance_param', '_gpu_n_jobs_param', 'experiment__', 'X_train', '_all_models', 'logging_param', 'gpu_param', 'fold_generator', 'imputation_classifier'}
2020-10-19 13:17:28,207:INFO:Preparing display monitor
2020-10-19 13:17:28,208:INFO:Importing libraries
2020-10-19 13:17:28,208:INFO:Copying data for preprocessing
2020-10-19 13:17:28,582:INFO:Declaring preprocessing parameters
2020-10-19 13:17:28,953:INFO:Creating preprocessing pipeline
2020-10-19 13:17:31,103:INFO:Preprocessing pipeline created successfully
2020-10-19 13:17:31,103:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 13:17:31,103:INFO:Creating global containers
2020-10-19 13:17:31,103:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 13:17:44,656:INFO:Creating grid variables
2020-10-19 13:17:44,716:INFO:create_model_container: 0
2020-10-19 13:17:44,717:INFO:master_model_container: 0
2020-10-19 13:17:44,717:INFO:display_container: 0
2020-10-19 13:17:44,723:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 13:17:44,723:INFO:setup() succesfully completed......................................
2020-10-19 13:17:44,879:INFO:Initializing compare_models()
2020-10-19 13:17:44,879:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=3, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 13:17:44,879:INFO:Checking exceptions
2020-10-19 13:17:44,879:INFO:Preparing display monitor
2020-10-19 13:17:44,879:INFO:Preparing display monitor
2020-10-19 13:17:44,904:INFO:Initializing Linear Regression
2020-10-19 13:17:44,904:INFO:Total runtime is 0.0 minutes
2020-10-19 13:17:44,910:INFO:SubProcess create_model() called ==================================
2020-10-19 13:17:44,910:INFO:Initializing create_model()
2020-10-19 13:17:44,911:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000142C2A41408>, kwargs={})
2020-10-19 13:17:44,911:INFO:Checking exceptions
2020-10-19 13:17:44,911:INFO:Importing libraries
2020-10-19 13:17:44,911:INFO:Copying training dataset
2020-10-19 13:17:44,919:INFO:Defining folds
2020-10-19 13:17:44,920:INFO:Declaring metric variables
2020-10-19 13:17:44,927:INFO:Importing untrained model
2020-10-19 13:17:44,935:INFO:Linear Regression Imported succesfully
2020-10-19 13:17:44,956:INFO:Starting cross validation
2020-10-19 13:17:44,956:INFO:Cross validating with n_jobs=-1
2020-10-19 13:17:45,879:INFO:Calculating mean and std
2020-10-19 13:17:45,881:INFO:Creating metrics dataframe
2020-10-19 13:17:45,888:INFO:Uploading results into container
2020-10-19 13:17:45,888:INFO:Uploading model into container now
2020-10-19 13:17:45,888:INFO:create_model_container: 1
2020-10-19 13:17:45,888:INFO:master_model_container: 1
2020-10-19 13:17:45,888:INFO:display_container: 1
2020-10-19 13:17:45,889:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 13:17:45,889:INFO:create_model() succesfully completed......................................
2020-10-19 13:17:46,025:INFO:SubProcess create_model() end ==================================
2020-10-19 13:17:46,026:INFO:Creating metrics dataframe
2020-10-19 13:17:46,041:INFO:Initializing K Neighbors Regressor
2020-10-19 13:17:46,041:INFO:Total runtime is 0.01894930601119995 minutes
2020-10-19 13:17:46,052:INFO:SubProcess create_model() called ==================================
2020-10-19 13:17:46,052:INFO:Initializing create_model()
2020-10-19 13:17:46,052:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000142C2A41408>, kwargs={})
2020-10-19 13:17:46,052:INFO:Checking exceptions
2020-10-19 13:17:46,052:INFO:Importing libraries
2020-10-19 13:17:46,053:INFO:Copying training dataset
2020-10-19 13:17:46,062:INFO:Defining folds
2020-10-19 13:17:46,062:INFO:Declaring metric variables
2020-10-19 13:17:46,070:INFO:Importing untrained model
2020-10-19 13:17:46,076:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 13:17:46,090:INFO:Starting cross validation
2020-10-19 13:17:46,090:INFO:Cross validating with n_jobs=-1
2020-10-19 13:18:10,996:INFO:Calculating mean and std
2020-10-19 13:18:11,000:INFO:Creating metrics dataframe
2020-10-19 13:18:11,014:INFO:Uploading results into container
2020-10-19 13:18:11,014:INFO:Uploading model into container now
2020-10-19 13:18:11,014:INFO:create_model_container: 2
2020-10-19 13:18:11,015:INFO:master_model_container: 2
2020-10-19 13:18:11,015:INFO:display_container: 1
2020-10-19 13:18:11,016:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 13:18:11,016:INFO:create_model() succesfully completed......................................
2020-10-19 13:18:11,126:INFO:SubProcess create_model() end ==================================
2020-10-19 13:18:11,126:INFO:Creating metrics dataframe
2020-10-19 13:18:11,147:INFO:Initializing Decision Tree Regressor
2020-10-19 13:18:11,147:INFO:Total runtime is 0.4373857299486796 minutes
2020-10-19 13:18:11,156:INFO:SubProcess create_model() called ==================================
2020-10-19 13:18:11,156:INFO:Initializing create_model()
2020-10-19 13:18:11,156:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000142C2A41408>, kwargs={})
2020-10-19 13:18:11,157:INFO:Checking exceptions
2020-10-19 13:18:11,157:INFO:Importing libraries
2020-10-19 13:18:11,157:INFO:Copying training dataset
2020-10-19 13:18:11,166:INFO:Defining folds
2020-10-19 13:18:11,166:INFO:Declaring metric variables
2020-10-19 13:18:11,175:INFO:Importing untrained model
2020-10-19 13:18:11,181:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 13:18:11,199:INFO:Starting cross validation
2020-10-19 13:18:11,199:INFO:Cross validating with n_jobs=-1
2020-10-19 13:18:40,611:INFO:Calculating mean and std
2020-10-19 13:18:40,613:INFO:Creating metrics dataframe
2020-10-19 13:18:40,622:INFO:Uploading results into container
2020-10-19 13:18:40,622:INFO:Uploading model into container now
2020-10-19 13:18:40,623:INFO:create_model_container: 3
2020-10-19 13:18:40,623:INFO:master_model_container: 3
2020-10-19 13:18:40,623:INFO:display_container: 1
2020-10-19 13:18:40,623:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 13:18:40,624:INFO:create_model() succesfully completed......................................
2020-10-19 13:18:40,718:INFO:SubProcess create_model() end ==================================
2020-10-19 13:18:40,719:INFO:Creating metrics dataframe
2020-10-19 13:18:40,738:INFO:Initializing Random Forest Regressor
2020-10-19 13:18:40,738:INFO:Total runtime is 0.930564800898234 minutes
2020-10-19 13:18:40,747:INFO:SubProcess create_model() called ==================================
2020-10-19 13:18:40,747:INFO:Initializing create_model()
2020-10-19 13:18:40,747:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000142C2A41408>, kwargs={})
2020-10-19 13:18:40,747:INFO:Checking exceptions
2020-10-19 13:18:40,747:INFO:Importing libraries
2020-10-19 13:18:40,747:INFO:Copying training dataset
2020-10-19 13:18:40,756:INFO:Defining folds
2020-10-19 13:18:40,756:INFO:Declaring metric variables
2020-10-19 13:18:40,764:INFO:Importing untrained model
2020-10-19 13:18:40,771:INFO:Random Forest Regressor Imported succesfully
2020-10-19 13:18:40,792:INFO:Starting cross validation
2020-10-19 13:18:40,792:INFO:Cross validating with n_jobs=-1
2020-10-19 13:47:16,903:INFO:Calculating mean and std
2020-10-19 13:47:16,999:INFO:Creating metrics dataframe
2020-10-19 13:47:17,132:INFO:Uploading results into container
2020-10-19 13:47:17,133:INFO:Uploading model into container now
2020-10-19 13:47:17,133:INFO:create_model_container: 4
2020-10-19 13:47:17,134:INFO:master_model_container: 4
2020-10-19 13:47:17,134:INFO:display_container: 1
2020-10-19 13:47:17,151:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 13:47:17,151:INFO:create_model() succesfully completed......................................
2020-10-19 13:47:20,116:INFO:SubProcess create_model() end ==================================
2020-10-19 13:47:20,116:INFO:Creating metrics dataframe
2020-10-19 13:47:20,174:INFO:Initializing Extra Trees Regressor
2020-10-19 13:47:20,174:INFO:Total runtime is 29.587832919756572 minutes
2020-10-19 13:47:20,183:INFO:SubProcess create_model() called ==================================
2020-10-19 13:47:20,183:INFO:Initializing create_model()
2020-10-19 13:47:20,183:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000142C2A41408>, kwargs={})
2020-10-19 13:47:20,183:INFO:Checking exceptions
2020-10-19 13:47:20,183:INFO:Importing libraries
2020-10-19 13:47:20,184:INFO:Copying training dataset
2020-10-19 13:47:20,294:INFO:Defining folds
2020-10-19 13:47:20,294:INFO:Declaring metric variables
2020-10-19 13:47:20,301:INFO:Importing untrained model
2020-10-19 13:47:20,310:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 13:47:20,325:INFO:Starting cross validation
2020-10-19 13:47:20,325:INFO:Cross validating with n_jobs=-1
2020-10-19 13:56:42,091:INFO:Calculating mean and std
2020-10-19 13:56:42,135:INFO:Creating metrics dataframe
2020-10-19 13:56:42,171:INFO:Uploading results into container
2020-10-19 13:56:42,172:INFO:Uploading model into container now
2020-10-19 13:56:42,172:INFO:create_model_container: 5
2020-10-19 13:56:42,173:INFO:master_model_container: 5
2020-10-19 13:56:42,175:INFO:display_container: 1
2020-10-19 13:56:42,184:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 13:56:42,184:INFO:create_model() succesfully completed......................................
2020-10-19 13:56:42,736:WARNING:create_model() for ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2020-10-19 13:56:42,792:WARNING:Traceback (most recent call last):
  File "C:\Users\mixil\AppData\Roaming\Python\Python37\site-packages\pycaret\internal\tabular.py", line 2138, in compare_models
    assert np.sum(model_results.iloc[0]) != 0.0
AssertionError

2020-10-19 13:56:42,793:INFO:Initializing create_model()
2020-10-19 13:56:42,793:INFO:create_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000142C2A41408>, kwargs={})
2020-10-19 13:56:42,794:INFO:Checking exceptions
2020-10-19 13:56:42,794:INFO:Importing libraries
2020-10-19 13:56:42,794:INFO:Copying training dataset
2020-10-19 13:56:42,806:INFO:Defining folds
2020-10-19 13:56:42,806:INFO:Declaring metric variables
2020-10-19 13:56:42,816:INFO:Importing untrained model
2020-10-19 13:56:42,816:INFO:Declaring custom model
2020-10-19 13:56:42,827:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 13:56:42,845:INFO:Starting cross validation
2020-10-19 13:56:42,845:INFO:Cross validating with n_jobs=-1
2020-10-19 14:04:51,876:INFO:Calculating mean and std
2020-10-19 14:04:51,945:INFO:Creating metrics dataframe
2020-10-19 14:04:52,023:INFO:Uploading results into container
2020-10-19 14:04:52,023:INFO:Uploading model into container now
2020-10-19 14:04:52,024:INFO:create_model_container: 6
2020-10-19 14:04:52,025:INFO:master_model_container: 6
2020-10-19 14:04:52,025:INFO:display_container: 1
2020-10-19 14:04:52,037:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 14:04:52,038:INFO:create_model() succesfully completed......................................
2020-10-19 14:04:54,707:INFO:SubProcess create_model() end ==================================
2020-10-19 14:04:54,707:INFO:Creating metrics dataframe
2020-10-19 14:04:54,758:INFO:Initializing MLP Regressor
2020-10-19 14:04:54,758:INFO:Total runtime is 47.16422832806905 minutes
2020-10-19 14:04:54,771:INFO:SubProcess create_model() called ==================================
2020-10-19 14:04:54,772:INFO:Initializing create_model()
2020-10-19 14:04:54,772:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000142C2A41408>, kwargs={})
2020-10-19 14:04:54,772:INFO:Checking exceptions
2020-10-19 14:04:54,772:INFO:Importing libraries
2020-10-19 14:04:54,773:INFO:Copying training dataset
2020-10-19 14:04:54,895:INFO:Defining folds
2020-10-19 14:04:54,895:INFO:Declaring metric variables
2020-10-19 14:04:54,901:INFO:Importing untrained model
2020-10-19 14:04:54,909:INFO:MLP Regressor Imported succesfully
2020-10-19 14:04:54,920:INFO:Starting cross validation
2020-10-19 14:04:54,921:INFO:Cross validating with n_jobs=-1
2020-10-19 14:06:22,009:INFO:Calculating mean and std
2020-10-19 14:06:22,010:INFO:Creating metrics dataframe
2020-10-19 14:06:22,014:INFO:Uploading results into container
2020-10-19 14:06:22,014:INFO:Uploading model into container now
2020-10-19 14:06:22,014:INFO:create_model_container: 7
2020-10-19 14:06:22,014:INFO:master_model_container: 7
2020-10-19 14:06:22,014:INFO:display_container: 1
2020-10-19 14:06:22,015:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 14:06:22,015:INFO:create_model() succesfully completed......................................
2020-10-19 14:06:22,110:INFO:SubProcess create_model() end ==================================
2020-10-19 14:06:22,110:INFO:Creating metrics dataframe
2020-10-19 14:06:22,141:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 14:06:22,141:INFO:Total runtime is 48.620611584186555 minutes
2020-10-19 14:06:22,149:INFO:SubProcess create_model() called ==================================
2020-10-19 14:06:22,150:INFO:Initializing create_model()
2020-10-19 14:06:22,150:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000142C2A41408>, kwargs={})
2020-10-19 14:06:22,150:INFO:Checking exceptions
2020-10-19 14:06:22,150:INFO:Importing libraries
2020-10-19 14:06:22,150:INFO:Copying training dataset
2020-10-19 14:06:22,158:INFO:Defining folds
2020-10-19 14:06:22,158:INFO:Declaring metric variables
2020-10-19 14:06:22,165:INFO:Importing untrained model
2020-10-19 14:06:22,171:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 14:06:22,193:INFO:Starting cross validation
2020-10-19 14:06:22,193:INFO:Cross validating with n_jobs=-1
2020-10-19 14:06:38,548:INFO:Calculating mean and std
2020-10-19 14:06:38,549:INFO:Creating metrics dataframe
2020-10-19 14:06:38,553:INFO:Uploading results into container
2020-10-19 14:06:38,553:INFO:Uploading model into container now
2020-10-19 14:06:38,553:INFO:create_model_container: 8
2020-10-19 14:06:38,553:INFO:master_model_container: 8
2020-10-19 14:06:38,553:INFO:display_container: 1
2020-10-19 14:06:38,554:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 14:06:38,554:INFO:create_model() succesfully completed......................................
2020-10-19 14:06:38,646:INFO:SubProcess create_model() end ==================================
2020-10-19 14:06:38,647:INFO:Creating metrics dataframe
2020-10-19 14:06:38,669:INFO:Initializing CatBoost Regressor
2020-10-19 14:06:38,669:INFO:Total runtime is 48.89607986609141 minutes
2020-10-19 14:06:38,679:INFO:SubProcess create_model() called ==================================
2020-10-19 14:06:38,680:INFO:Initializing create_model()
2020-10-19 14:06:38,680:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000142C2A41408>, kwargs={})
2020-10-19 14:06:38,680:INFO:Checking exceptions
2020-10-19 14:06:38,680:INFO:Importing libraries
2020-10-19 14:06:38,680:INFO:Copying training dataset
2020-10-19 14:06:38,689:INFO:Defining folds
2020-10-19 14:06:38,689:INFO:Declaring metric variables
2020-10-19 14:06:38,698:INFO:Importing untrained model
2020-10-19 14:06:38,711:INFO:CatBoost Regressor Imported succesfully
2020-10-19 14:06:38,732:INFO:Starting cross validation
2020-10-19 14:06:38,732:INFO:Cross validating with n_jobs=-1
2020-10-19 14:12:37,881:INFO:Calculating mean and std
2020-10-19 14:12:37,881:INFO:Creating metrics dataframe
2020-10-19 14:12:37,885:INFO:Uploading results into container
2020-10-19 14:12:37,885:INFO:Uploading model into container now
2020-10-19 14:12:37,885:INFO:create_model_container: 9
2020-10-19 14:12:37,885:INFO:master_model_container: 9
2020-10-19 14:12:37,885:INFO:display_container: 1
2020-10-19 14:12:37,885:INFO:<catboost.core.CatBoostRegressor object at 0x0000013F8C955CC8>
2020-10-19 14:12:37,885:INFO:create_model() succesfully completed......................................
2020-10-19 14:12:38,002:INFO:SubProcess create_model() end ==================================
2020-10-19 14:12:38,002:INFO:Creating metrics dataframe
2020-10-19 14:12:38,057:INFO:Initializing create_model()
2020-10-19 14:12:38,058:INFO:create_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=3, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 14:12:38,058:INFO:Checking exceptions
2020-10-19 14:12:38,058:INFO:Importing libraries
2020-10-19 14:12:38,058:INFO:Copying training dataset
2020-10-19 14:12:38,069:INFO:Defining folds
2020-10-19 14:12:38,069:INFO:Declaring metric variables
2020-10-19 14:12:38,069:INFO:Importing untrained model
2020-10-19 14:12:38,069:INFO:Declaring custom model
2020-10-19 14:12:38,070:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 14:12:38,070:INFO:Cross validation set to False
2020-10-19 14:12:38,071:INFO:Fitting Model
2020-10-19 14:12:40,447:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 14:12:40,447:INFO:create_models() succesfully completed......................................
2020-10-19 14:12:40,572:INFO:create_model_container: 9
2020-10-19 14:12:40,572:INFO:master_model_container: 9
2020-10-19 14:12:40,572:INFO:display_container: 1
2020-10-19 14:12:40,572:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 14:12:40,572:INFO:compare_models() succesfully completed......................................
2020-10-19 15:32:58,212:INFO:PyCaret Supervised Module
2020-10-19 15:32:58,213:INFO:ML Usecase: regression
2020-10-19 15:32:58,213:INFO:version 2.2.0
2020-10-19 15:32:58,213:INFO:Initializing setup()
2020-10-19 15:32:58,213:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 15:32:58,213:INFO:Checking environment
2020-10-19 15:32:58,213:INFO:python_version: 3.7.6
2020-10-19 15:32:58,213:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 15:32:58,213:INFO:machine: AMD64
2020-10-19 15:32:58,213:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 15:32:58,213:INFO:Memory: svmem(total=16969158656, available=10029211648, percent=40.9, used=6939947008, free=10029211648)
2020-10-19 15:32:58,213:INFO:Physical Core: 4
2020-10-19 15:32:58,213:INFO:Logical Core: 8
2020-10-19 15:32:58,213:INFO:Checking libraries
2020-10-19 15:32:58,213:INFO:pd==1.1.3
2020-10-19 15:32:58,213:INFO:numpy==1.18.1
2020-10-19 15:32:58,213:INFO:sklearn==0.23.2
2020-10-19 15:32:58,679:INFO:xgboost==1.2.1
2020-10-19 15:32:58,679:INFO:lightgbm==2.3.1
2020-10-19 15:32:58,691:INFO:catboost==0.24.2
2020-10-19 15:32:59,289:INFO:mlflow==1.11.0
2020-10-19 15:32:59,289:INFO:Checking Exceptions
2020-10-19 15:32:59,289:INFO:Declaring global variables
2020-10-19 15:32:59,289:INFO:USI: ff39
2020-10-19 15:32:59,289:INFO:pycaret_globals: {'experiment__', 'iterative_imputation_iters_param', 'fold_groups_param', 'create_model_container', 'fold_shuffle_param', 'y_train', 'transform_target_method_param', 'y_test', 'fold_generator', 'target_param', '_all_models_internal', 'X_train', '_gpu_n_jobs_param', 'prep_pipe', 'fix_imbalance_method_param', 'seed', 'fix_imbalance_param', 'transform_target_param', 'stratify_param', 'data_before_preprocess', 'imputation_classifier', 'display_container', 'fold_param', 'exp_name_log', '_all_models', 'X_test', 'USI', 'n_jobs_param', 'y', '_internal_pipeline', 'X', 'imputation_regressor', 'logging_param', 'gpu_param', 'html_param', 'master_model_container', '_all_metrics', 'log_plots_param', 'pycaret_globals', '_ml_usecase'}
2020-10-19 15:32:59,289:INFO:Preparing display monitor
2020-10-19 15:32:59,289:INFO:Importing libraries
2020-10-19 15:32:59,289:INFO:Copying data for preprocessing
2020-10-19 15:32:59,513:INFO:Declaring preprocessing parameters
2020-10-19 15:32:59,715:INFO:Creating preprocessing pipeline
2020-10-19 15:33:01,244:INFO:Preprocessing pipeline created successfully
2020-10-19 15:33:01,244:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 15:33:01,244:INFO:Creating global containers
2020-10-19 15:33:01,247:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 15:33:11,206:INFO:Creating grid variables
2020-10-19 15:33:11,253:INFO:create_model_container: 0
2020-10-19 15:33:11,253:INFO:master_model_container: 0
2020-10-19 15:33:11,253:INFO:display_container: 0
2020-10-19 15:33:11,257:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 15:33:11,257:INFO:setup() succesfully completed......................................
2020-10-19 15:58:01,639:INFO:PyCaret Supervised Module
2020-10-19 15:58:01,639:INFO:ML Usecase: regression
2020-10-19 15:58:01,639:INFO:version 2.2.0
2020-10-19 15:58:01,639:INFO:Initializing setup()
2020-10-19 15:58:01,639:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 15:58:01,640:INFO:Checking environment
2020-10-19 15:58:01,640:INFO:python_version: 3.7.6
2020-10-19 15:58:01,640:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 15:58:01,640:INFO:machine: AMD64
2020-10-19 15:58:01,641:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 15:58:01,641:INFO:Memory: svmem(total=16969158656, available=8447930368, percent=50.2, used=8521228288, free=8447930368)
2020-10-19 15:58:01,641:INFO:Physical Core: 4
2020-10-19 15:58:01,641:INFO:Logical Core: 8
2020-10-19 15:58:01,641:INFO:Checking libraries
2020-10-19 15:58:01,641:INFO:pd==1.1.3
2020-10-19 15:58:01,641:INFO:numpy==1.18.1
2020-10-19 15:58:01,641:INFO:sklearn==0.23.2
2020-10-19 15:58:01,982:INFO:xgboost==1.2.1
2020-10-19 15:58:01,982:INFO:lightgbm==2.3.1
2020-10-19 15:58:01,990:INFO:catboost==0.24.2
2020-10-19 15:58:02,436:INFO:mlflow==1.11.0
2020-10-19 15:58:02,436:INFO:Checking Exceptions
2020-10-19 15:58:02,436:INFO:Declaring global variables
2020-10-19 15:58:02,436:INFO:USI: fe5f
2020-10-19 15:58:02,437:INFO:pycaret_globals: {'USI', 'pycaret_globals', 'logging_param', 'prep_pipe', '_gpu_n_jobs_param', 'y', '_ml_usecase', 'log_plots_param', 'exp_name_log', 'imputation_classifier', 'y_train', 'fold_shuffle_param', 'fix_imbalance_param', 'imputation_regressor', 'X_train', '_all_models_internal', 'gpu_param', 'data_before_preprocess', 'seed', 'master_model_container', 'iterative_imputation_iters_param', 'transform_target_param', 'y_test', 'n_jobs_param', '_all_models', 'stratify_param', 'html_param', 'X', '_all_metrics', 'create_model_container', 'target_param', 'X_test', 'experiment__', 'fix_imbalance_method_param', 'fold_param', 'fold_generator', 'fold_groups_param', 'transform_target_method_param', 'display_container', '_internal_pipeline'}
2020-10-19 15:58:02,437:INFO:Preparing display monitor
2020-10-19 15:58:02,437:INFO:Importing libraries
2020-10-19 15:58:02,437:INFO:Copying data for preprocessing
2020-10-19 15:58:02,486:INFO:Declaring preprocessing parameters
2020-10-19 15:58:02,587:INFO:Creating preprocessing pipeline
2020-10-19 15:58:04,470:INFO:Preprocessing pipeline created successfully
2020-10-19 15:58:04,470:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 15:58:04,470:INFO:Creating global containers
2020-10-19 15:58:04,471:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 15:58:14,830:INFO:Creating grid variables
2020-10-19 15:58:14,865:INFO:create_model_container: 0
2020-10-19 15:58:14,865:INFO:master_model_container: 0
2020-10-19 15:58:14,865:INFO:display_container: 0
2020-10-19 15:58:14,869:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 15:58:14,869:INFO:setup() succesfully completed......................................
2020-10-19 15:58:47,157:INFO:PyCaret Supervised Module
2020-10-19 15:58:47,157:INFO:ML Usecase: regression
2020-10-19 15:58:47,157:INFO:version 2.2.0
2020-10-19 15:58:47,157:INFO:Initializing setup()
2020-10-19 15:58:47,157:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 15:58:47,157:INFO:Checking environment
2020-10-19 15:58:47,157:INFO:python_version: 3.7.6
2020-10-19 15:58:47,157:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 15:58:47,157:INFO:machine: AMD64
2020-10-19 15:58:47,157:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 15:58:47,157:INFO:Memory: svmem(total=16969158656, available=7562944512, percent=55.4, used=9406214144, free=7562944512)
2020-10-19 15:58:47,157:INFO:Physical Core: 4
2020-10-19 15:58:47,157:INFO:Logical Core: 8
2020-10-19 15:58:47,157:INFO:Checking libraries
2020-10-19 15:58:47,157:INFO:pd==1.1.3
2020-10-19 15:58:47,158:INFO:numpy==1.18.1
2020-10-19 15:58:47,158:INFO:sklearn==0.23.2
2020-10-19 15:58:47,158:INFO:xgboost==1.2.1
2020-10-19 15:58:47,158:INFO:lightgbm==2.3.1
2020-10-19 15:58:47,158:INFO:catboost==0.24.2
2020-10-19 15:58:47,158:INFO:mlflow==1.11.0
2020-10-19 15:58:47,158:INFO:Checking Exceptions
2020-10-19 15:58:47,158:INFO:Declaring global variables
2020-10-19 15:58:47,158:INFO:USI: 2556
2020-10-19 15:58:47,158:INFO:pycaret_globals: {'USI', 'pycaret_globals', 'logging_param', 'prep_pipe', '_gpu_n_jobs_param', 'y', '_ml_usecase', 'log_plots_param', 'exp_name_log', 'imputation_classifier', 'y_train', 'fold_shuffle_param', 'fix_imbalance_param', 'imputation_regressor', 'X_train', '_all_models_internal', 'gpu_param', 'data_before_preprocess', 'seed', 'master_model_container', 'iterative_imputation_iters_param', 'transform_target_param', 'y_test', 'n_jobs_param', '_all_models', 'stratify_param', 'html_param', 'X', '_all_metrics', 'create_model_container', 'target_param', 'X_test', 'experiment__', 'fix_imbalance_method_param', 'fold_param', 'fold_generator', 'fold_groups_param', 'transform_target_method_param', 'display_container', '_internal_pipeline'}
2020-10-19 15:58:47,158:INFO:Preparing display monitor
2020-10-19 15:58:47,158:INFO:Importing libraries
2020-10-19 15:58:47,158:INFO:Copying data for preprocessing
2020-10-19 15:58:47,208:INFO:Declaring preprocessing parameters
2020-10-19 15:58:47,309:INFO:Creating preprocessing pipeline
2020-10-19 15:58:49,165:INFO:Preprocessing pipeline created successfully
2020-10-19 15:58:49,165:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 15:58:49,165:INFO:Creating global containers
2020-10-19 15:58:49,165:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 16:02:42,070:INFO:PyCaret Supervised Module
2020-10-19 16:02:42,071:INFO:ML Usecase: regression
2020-10-19 16:02:42,071:INFO:version 2.2.0
2020-10-19 16:02:42,071:INFO:Initializing setup()
2020-10-19 16:02:42,071:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 16:02:42,071:INFO:Checking environment
2020-10-19 16:02:42,071:INFO:python_version: 3.7.6
2020-10-19 16:02:42,071:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 16:02:42,071:INFO:machine: AMD64
2020-10-19 16:02:42,071:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 16:02:42,071:INFO:Memory: svmem(total=16969158656, available=6439378944, percent=62.1, used=10529779712, free=6439378944)
2020-10-19 16:02:42,071:INFO:Physical Core: 4
2020-10-19 16:02:42,071:INFO:Logical Core: 8
2020-10-19 16:02:42,071:INFO:Checking libraries
2020-10-19 16:02:42,071:INFO:pd==1.1.3
2020-10-19 16:02:42,071:INFO:numpy==1.18.1
2020-10-19 16:02:42,071:INFO:sklearn==0.23.2
2020-10-19 16:02:42,071:INFO:xgboost==1.2.1
2020-10-19 16:02:42,071:INFO:lightgbm==2.3.1
2020-10-19 16:02:42,071:INFO:catboost==0.24.2
2020-10-19 16:02:42,071:INFO:mlflow==1.11.0
2020-10-19 16:02:42,071:INFO:Checking Exceptions
2020-10-19 16:02:42,071:INFO:Declaring global variables
2020-10-19 16:02:42,072:INFO:USI: 8bc3
2020-10-19 16:02:42,072:INFO:pycaret_globals: {'USI', 'pycaret_globals', 'logging_param', 'prep_pipe', '_gpu_n_jobs_param', 'y', '_ml_usecase', 'log_plots_param', 'exp_name_log', 'imputation_classifier', 'y_train', 'fold_shuffle_param', 'fix_imbalance_param', 'imputation_regressor', 'X_train', '_all_models_internal', 'gpu_param', 'data_before_preprocess', 'seed', 'master_model_container', 'iterative_imputation_iters_param', 'transform_target_param', 'y_test', 'n_jobs_param', '_all_models', 'stratify_param', 'html_param', 'X', '_all_metrics', 'create_model_container', 'target_param', 'X_test', 'experiment__', 'fix_imbalance_method_param', 'fold_param', 'fold_generator', 'fold_groups_param', 'transform_target_method_param', 'display_container', '_internal_pipeline'}
2020-10-19 16:02:42,072:INFO:Preparing display monitor
2020-10-19 16:02:42,072:INFO:Importing libraries
2020-10-19 16:02:42,072:INFO:Copying data for preprocessing
2020-10-19 16:02:42,115:INFO:Declaring preprocessing parameters
2020-10-19 16:02:42,168:INFO:Creating preprocessing pipeline
2020-10-19 16:02:43,061:INFO:Preprocessing pipeline created successfully
2020-10-19 16:02:43,061:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 16:02:43,061:INFO:Creating global containers
2020-10-19 16:02:43,061:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 16:02:48,097:INFO:Creating grid variables
2020-10-19 16:02:48,115:INFO:create_model_container: 0
2020-10-19 16:02:48,115:INFO:master_model_container: 0
2020-10-19 16:02:48,115:INFO:display_container: 0
2020-10-19 16:02:48,118:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 16:02:48,119:INFO:setup() succesfully completed......................................
2020-10-19 16:02:48,277:INFO:Initializing compare_models()
2020-10-19 16:02:48,278:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 16:02:48,278:INFO:Checking exceptions
2020-10-19 16:02:48,278:INFO:Preparing display monitor
2020-10-19 16:02:48,278:INFO:Preparing display monitor
2020-10-19 16:02:48,302:INFO:Initializing Linear Regression
2020-10-19 16:02:48,302:INFO:Total runtime is 0.0 minutes
2020-10-19 16:02:48,312:INFO:SubProcess create_model() called ==================================
2020-10-19 16:02:48,313:INFO:Initializing create_model()
2020-10-19 16:02:48,313:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001796FA7FCC8>, kwargs={})
2020-10-19 16:02:48,313:INFO:Checking exceptions
2020-10-19 16:02:48,313:INFO:Importing libraries
2020-10-19 16:02:48,313:INFO:Copying training dataset
2020-10-19 16:02:48,319:INFO:Defining folds
2020-10-19 16:02:48,319:INFO:Declaring metric variables
2020-10-19 16:02:48,328:INFO:Importing untrained model
2020-10-19 16:02:48,340:INFO:Linear Regression Imported succesfully
2020-10-19 16:02:48,359:INFO:Starting cross validation
2020-10-19 16:02:48,368:INFO:Cross validating with n_jobs=-1
2020-10-19 16:02:52,449:INFO:Calculating mean and std
2020-10-19 16:02:52,450:INFO:Creating metrics dataframe
2020-10-19 16:02:52,456:INFO:Uploading results into container
2020-10-19 16:02:52,457:INFO:Uploading model into container now
2020-10-19 16:02:52,457:INFO:create_model_container: 1
2020-10-19 16:02:52,457:INFO:master_model_container: 1
2020-10-19 16:02:52,457:INFO:display_container: 1
2020-10-19 16:02:52,457:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 16:02:52,457:INFO:create_model() succesfully completed......................................
2020-10-19 16:02:52,589:INFO:SubProcess create_model() end ==================================
2020-10-19 16:02:52,589:INFO:Creating metrics dataframe
2020-10-19 16:02:52,610:INFO:Initializing K Neighbors Regressor
2020-10-19 16:02:52,610:INFO:Total runtime is 0.07180793682734171 minutes
2020-10-19 16:02:52,619:INFO:SubProcess create_model() called ==================================
2020-10-19 16:02:52,620:INFO:Initializing create_model()
2020-10-19 16:02:52,620:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001796FA7FCC8>, kwargs={})
2020-10-19 16:02:52,620:INFO:Checking exceptions
2020-10-19 16:02:52,620:INFO:Importing libraries
2020-10-19 16:02:52,620:INFO:Copying training dataset
2020-10-19 16:02:52,624:INFO:Defining folds
2020-10-19 16:02:52,624:INFO:Declaring metric variables
2020-10-19 16:02:52,632:INFO:Importing untrained model
2020-10-19 16:02:52,639:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 16:02:52,655:INFO:Starting cross validation
2020-10-19 16:02:52,655:INFO:Cross validating with n_jobs=-1
2020-10-19 16:02:56,798:INFO:Calculating mean and std
2020-10-19 16:02:56,800:INFO:Creating metrics dataframe
2020-10-19 16:02:56,805:INFO:Uploading results into container
2020-10-19 16:02:56,806:INFO:Uploading model into container now
2020-10-19 16:02:56,806:INFO:create_model_container: 2
2020-10-19 16:02:56,806:INFO:master_model_container: 2
2020-10-19 16:02:56,806:INFO:display_container: 1
2020-10-19 16:02:56,806:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 16:02:56,806:INFO:create_model() succesfully completed......................................
2020-10-19 16:02:56,938:INFO:SubProcess create_model() end ==================================
2020-10-19 16:02:56,939:INFO:Creating metrics dataframe
2020-10-19 16:02:56,955:INFO:Initializing Decision Tree Regressor
2020-10-19 16:02:56,955:INFO:Total runtime is 0.14422646363576253 minutes
2020-10-19 16:02:56,963:INFO:SubProcess create_model() called ==================================
2020-10-19 16:02:56,963:INFO:Initializing create_model()
2020-10-19 16:02:56,963:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001796FA7FCC8>, kwargs={})
2020-10-19 16:02:56,963:INFO:Checking exceptions
2020-10-19 16:02:56,964:INFO:Importing libraries
2020-10-19 16:02:56,964:INFO:Copying training dataset
2020-10-19 16:02:56,967:INFO:Defining folds
2020-10-19 16:02:56,967:INFO:Declaring metric variables
2020-10-19 16:02:56,975:INFO:Importing untrained model
2020-10-19 16:02:56,982:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 16:02:56,997:INFO:Starting cross validation
2020-10-19 16:02:56,998:INFO:Cross validating with n_jobs=-1
2020-10-19 16:03:07,449:INFO:Calculating mean and std
2020-10-19 16:03:07,450:INFO:Creating metrics dataframe
2020-10-19 16:03:07,454:INFO:Uploading results into container
2020-10-19 16:03:07,454:INFO:Uploading model into container now
2020-10-19 16:03:07,454:INFO:create_model_container: 3
2020-10-19 16:03:07,454:INFO:master_model_container: 3
2020-10-19 16:03:07,454:INFO:display_container: 1
2020-10-19 16:03:07,455:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 16:03:07,455:INFO:create_model() succesfully completed......................................
2020-10-19 16:03:07,583:INFO:SubProcess create_model() end ==================================
2020-10-19 16:03:07,583:INFO:Creating metrics dataframe
2020-10-19 16:03:07,600:INFO:Initializing Random Forest Regressor
2020-10-19 16:03:07,600:INFO:Total runtime is 0.32164322535196943 minutes
2020-10-19 16:03:07,608:INFO:SubProcess create_model() called ==================================
2020-10-19 16:03:07,608:INFO:Initializing create_model()
2020-10-19 16:03:07,608:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001796FA7FCC8>, kwargs={})
2020-10-19 16:03:07,608:INFO:Checking exceptions
2020-10-19 16:03:07,609:INFO:Importing libraries
2020-10-19 16:03:07,609:INFO:Copying training dataset
2020-10-19 16:03:07,613:INFO:Defining folds
2020-10-19 16:03:07,613:INFO:Declaring metric variables
2020-10-19 16:03:07,620:INFO:Importing untrained model
2020-10-19 16:03:07,627:INFO:Random Forest Regressor Imported succesfully
2020-10-19 16:03:07,643:INFO:Starting cross validation
2020-10-19 16:03:07,643:INFO:Cross validating with n_jobs=-1
2020-10-19 16:16:06,349:INFO:Calculating mean and std
2020-10-19 16:16:06,367:INFO:Creating metrics dataframe
2020-10-19 16:16:06,399:INFO:Uploading results into container
2020-10-19 16:16:06,400:INFO:Uploading model into container now
2020-10-19 16:16:06,401:INFO:create_model_container: 4
2020-10-19 16:16:06,401:INFO:master_model_container: 4
2020-10-19 16:16:06,401:INFO:display_container: 1
2020-10-19 16:16:06,406:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 16:16:06,406:INFO:create_model() succesfully completed......................................
2020-10-19 16:16:07,120:INFO:SubProcess create_model() end ==================================
2020-10-19 16:16:07,120:INFO:Creating metrics dataframe
2020-10-19 16:16:07,150:INFO:Initializing Extra Trees Regressor
2020-10-19 16:16:07,151:INFO:Total runtime is 13.314154700438182 minutes
2020-10-19 16:16:07,161:INFO:SubProcess create_model() called ==================================
2020-10-19 16:16:07,161:INFO:Initializing create_model()
2020-10-19 16:16:07,161:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001796FA7FCC8>, kwargs={})
2020-10-19 16:16:07,161:INFO:Checking exceptions
2020-10-19 16:16:07,161:INFO:Importing libraries
2020-10-19 16:16:07,161:INFO:Copying training dataset
2020-10-19 16:16:07,195:INFO:Defining folds
2020-10-19 16:16:07,195:INFO:Declaring metric variables
2020-10-19 16:16:07,203:INFO:Importing untrained model
2020-10-19 16:16:07,212:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 16:16:07,229:INFO:Starting cross validation
2020-10-19 16:16:07,229:INFO:Cross validating with n_jobs=-1
2020-10-19 16:47:24,273:INFO:PyCaret Supervised Module
2020-10-19 16:47:24,274:INFO:ML Usecase: regression
2020-10-19 16:47:24,274:INFO:version 2.2.0
2020-10-19 16:47:24,274:INFO:Initializing setup()
2020-10-19 16:47:24,274:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 16:47:24,274:INFO:Checking environment
2020-10-19 16:47:24,274:INFO:python_version: 3.7.6
2020-10-19 16:47:24,274:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 16:47:24,274:INFO:machine: AMD64
2020-10-19 16:47:24,274:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 16:47:24,274:INFO:Memory: svmem(total=16969158656, available=10804805632, percent=36.3, used=6164353024, free=10804805632)
2020-10-19 16:47:24,275:INFO:Physical Core: 4
2020-10-19 16:47:24,275:INFO:Logical Core: 8
2020-10-19 16:47:24,275:INFO:Checking libraries
2020-10-19 16:47:24,275:INFO:pd==1.1.3
2020-10-19 16:47:24,275:INFO:numpy==1.18.1
2020-10-19 16:47:24,276:INFO:sklearn==0.23.2
2020-10-19 16:47:25,072:INFO:xgboost==1.2.1
2020-10-19 16:47:25,072:INFO:lightgbm==2.3.1
2020-10-19 16:47:25,264:INFO:catboost==0.24.2
2020-10-19 16:47:26,327:INFO:mlflow==1.11.0
2020-10-19 16:47:26,327:INFO:Checking Exceptions
2020-10-19 16:47:26,327:INFO:Declaring global variables
2020-10-19 16:47:26,327:INFO:USI: a083
2020-10-19 16:47:26,327:INFO:pycaret_globals: {'stratify_param', 'logging_param', 'pycaret_globals', 'transform_target_param', '_internal_pipeline', 'X_test', 'display_container', '_all_models_internal', 'transform_target_method_param', '_all_metrics', 'html_param', '_ml_usecase', 'USI', 'X_train', 'target_param', 'X', 'seed', 'fold_generator', 'y_train', 'exp_name_log', 'prep_pipe', 'master_model_container', 'imputation_classifier', 'data_before_preprocess', 'fold_groups_param', 'y', 'fix_imbalance_param', 'n_jobs_param', 'create_model_container', 'imputation_regressor', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'fold_param', 'gpu_param', 'fold_shuffle_param', 'experiment__', '_all_models', 'log_plots_param', '_gpu_n_jobs_param', 'y_test'}
2020-10-19 16:47:26,328:INFO:Preparing display monitor
2020-10-19 16:47:26,328:INFO:Importing libraries
2020-10-19 16:47:26,328:INFO:Copying data for preprocessing
2020-10-19 16:47:26,368:INFO:Declaring preprocessing parameters
2020-10-19 16:47:26,438:INFO:Creating preprocessing pipeline
2020-10-19 16:47:27,954:INFO:Preprocessing pipeline created successfully
2020-10-19 16:47:27,954:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 16:47:27,954:INFO:Creating global containers
2020-10-19 16:47:27,955:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 16:47:35,266:INFO:Creating grid variables
2020-10-19 16:47:35,288:INFO:create_model_container: 0
2020-10-19 16:47:35,289:INFO:master_model_container: 0
2020-10-19 16:47:35,289:INFO:display_container: 0
2020-10-19 16:47:35,293:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 16:47:35,293:INFO:setup() succesfully completed......................................
2020-10-19 16:47:35,382:INFO:Initializing compare_models()
2020-10-19 16:47:35,382:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 16:47:35,382:INFO:Checking exceptions
2020-10-19 16:47:35,382:INFO:Preparing display monitor
2020-10-19 16:47:35,382:INFO:Preparing display monitor
2020-10-19 16:47:35,417:INFO:Initializing Linear Regression
2020-10-19 16:47:35,418:INFO:Total runtime is 0.0 minutes
2020-10-19 16:47:35,428:INFO:SubProcess create_model() called ==================================
2020-10-19 16:47:35,428:INFO:Initializing create_model()
2020-10-19 16:47:35,428:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8F0771BC8>, kwargs={})
2020-10-19 16:47:35,428:INFO:Checking exceptions
2020-10-19 16:47:35,428:INFO:Importing libraries
2020-10-19 16:47:35,428:INFO:Copying training dataset
2020-10-19 16:47:35,432:INFO:Defining folds
2020-10-19 16:47:35,433:INFO:Declaring metric variables
2020-10-19 16:47:35,441:INFO:Importing untrained model
2020-10-19 16:47:35,448:INFO:Linear Regression Imported succesfully
2020-10-19 16:47:35,474:INFO:Starting cross validation
2020-10-19 16:47:35,479:INFO:Cross validating with n_jobs=-1
2020-10-19 16:47:41,944:INFO:Calculating mean and std
2020-10-19 16:47:41,945:INFO:Creating metrics dataframe
2020-10-19 16:47:41,952:INFO:Uploading results into container
2020-10-19 16:47:41,952:INFO:Uploading model into container now
2020-10-19 16:47:41,952:INFO:create_model_container: 1
2020-10-19 16:47:41,953:INFO:master_model_container: 1
2020-10-19 16:47:41,953:INFO:display_container: 1
2020-10-19 16:47:41,953:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 16:47:41,953:INFO:create_model() succesfully completed......................................
2020-10-19 16:47:42,046:INFO:SubProcess create_model() end ==================================
2020-10-19 16:47:42,047:INFO:Creating metrics dataframe
2020-10-19 16:47:42,067:INFO:Initializing K Neighbors Regressor
2020-10-19 16:47:42,067:INFO:Total runtime is 0.11083690325419109 minutes
2020-10-19 16:47:42,075:INFO:SubProcess create_model() called ==================================
2020-10-19 16:47:42,076:INFO:Initializing create_model()
2020-10-19 16:47:42,076:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8F0771BC8>, kwargs={})
2020-10-19 16:47:42,076:INFO:Checking exceptions
2020-10-19 16:47:42,076:INFO:Importing libraries
2020-10-19 16:47:42,076:INFO:Copying training dataset
2020-10-19 16:47:42,080:INFO:Defining folds
2020-10-19 16:47:42,080:INFO:Declaring metric variables
2020-10-19 16:47:42,088:INFO:Importing untrained model
2020-10-19 16:47:42,096:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 16:47:42,118:INFO:Starting cross validation
2020-10-19 16:47:42,118:INFO:Cross validating with n_jobs=-1
2020-10-19 16:47:48,092:INFO:Calculating mean and std
2020-10-19 16:47:48,093:INFO:Creating metrics dataframe
2020-10-19 16:47:48,101:INFO:Uploading results into container
2020-10-19 16:47:48,101:INFO:Uploading model into container now
2020-10-19 16:47:48,102:INFO:create_model_container: 2
2020-10-19 16:47:48,102:INFO:master_model_container: 2
2020-10-19 16:47:48,102:INFO:display_container: 1
2020-10-19 16:47:48,102:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 16:47:48,102:INFO:create_model() succesfully completed......................................
2020-10-19 16:47:48,204:INFO:SubProcess create_model() end ==================================
2020-10-19 16:47:48,204:INFO:Creating metrics dataframe
2020-10-19 16:47:48,222:INFO:Initializing Decision Tree Regressor
2020-10-19 16:47:48,222:INFO:Total runtime is 0.21342429717381795 minutes
2020-10-19 16:47:48,232:INFO:SubProcess create_model() called ==================================
2020-10-19 16:47:48,233:INFO:Initializing create_model()
2020-10-19 16:47:48,233:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8F0771BC8>, kwargs={})
2020-10-19 16:47:48,233:INFO:Checking exceptions
2020-10-19 16:47:48,233:INFO:Importing libraries
2020-10-19 16:47:48,233:INFO:Copying training dataset
2020-10-19 16:47:48,237:INFO:Defining folds
2020-10-19 16:47:48,237:INFO:Declaring metric variables
2020-10-19 16:47:48,247:INFO:Importing untrained model
2020-10-19 16:47:48,266:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 16:47:48,292:INFO:Starting cross validation
2020-10-19 16:47:48,293:INFO:Cross validating with n_jobs=-1
2020-10-19 16:48:02,258:INFO:Calculating mean and std
2020-10-19 16:48:02,259:INFO:Creating metrics dataframe
2020-10-19 16:48:02,263:INFO:Uploading results into container
2020-10-19 16:48:02,263:INFO:Uploading model into container now
2020-10-19 16:48:02,263:INFO:create_model_container: 3
2020-10-19 16:48:02,263:INFO:master_model_container: 3
2020-10-19 16:48:02,263:INFO:display_container: 1
2020-10-19 16:48:02,264:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 16:48:02,264:INFO:create_model() succesfully completed......................................
2020-10-19 16:48:02,358:INFO:SubProcess create_model() end ==================================
2020-10-19 16:48:02,359:INFO:Creating metrics dataframe
2020-10-19 16:48:02,378:INFO:Initializing Random Forest Regressor
2020-10-19 16:48:02,378:INFO:Total runtime is 0.44935990969340006 minutes
2020-10-19 16:48:02,388:INFO:SubProcess create_model() called ==================================
2020-10-19 16:48:02,389:INFO:Initializing create_model()
2020-10-19 16:48:02,389:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8F0771BC8>, kwargs={})
2020-10-19 16:48:02,389:INFO:Checking exceptions
2020-10-19 16:48:02,389:INFO:Importing libraries
2020-10-19 16:48:02,389:INFO:Copying training dataset
2020-10-19 16:48:02,393:INFO:Defining folds
2020-10-19 16:48:02,393:INFO:Declaring metric variables
2020-10-19 16:48:02,401:INFO:Importing untrained model
2020-10-19 16:48:02,410:INFO:Random Forest Regressor Imported succesfully
2020-10-19 16:48:02,430:INFO:Starting cross validation
2020-10-19 16:48:02,431:INFO:Cross validating with n_jobs=-1
2020-10-19 17:01:31,891:INFO:Calculating mean and std
2020-10-19 17:01:31,926:INFO:Creating metrics dataframe
2020-10-19 17:01:31,960:INFO:Uploading results into container
2020-10-19 17:01:31,961:INFO:Uploading model into container now
2020-10-19 17:01:31,962:INFO:create_model_container: 4
2020-10-19 17:01:31,962:INFO:master_model_container: 4
2020-10-19 17:01:31,962:INFO:display_container: 1
2020-10-19 17:01:31,966:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 17:01:31,967:INFO:create_model() succesfully completed......................................
2020-10-19 17:01:32,599:INFO:SubProcess create_model() end ==================================
2020-10-19 17:01:32,599:INFO:Creating metrics dataframe
2020-10-19 17:01:32,638:INFO:Initializing Extra Trees Regressor
2020-10-19 17:01:32,638:INFO:Total runtime is 13.953690361976625 minutes
2020-10-19 17:01:32,648:INFO:SubProcess create_model() called ==================================
2020-10-19 17:01:32,648:INFO:Initializing create_model()
2020-10-19 17:01:32,648:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8F0771BC8>, kwargs={})
2020-10-19 17:01:32,649:INFO:Checking exceptions
2020-10-19 17:01:32,649:INFO:Importing libraries
2020-10-19 17:01:32,649:INFO:Copying training dataset
2020-10-19 17:01:32,692:INFO:Defining folds
2020-10-19 17:01:32,693:INFO:Declaring metric variables
2020-10-19 17:01:32,703:INFO:Importing untrained model
2020-10-19 17:01:32,714:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 17:01:32,734:INFO:Starting cross validation
2020-10-19 17:01:32,734:INFO:Cross validating with n_jobs=-1
2020-10-19 17:12:51,589:INFO:Calculating mean and std
2020-10-19 17:12:51,723:INFO:Creating metrics dataframe
2020-10-19 17:12:51,857:INFO:Uploading results into container
2020-10-19 17:12:51,858:INFO:Uploading model into container now
2020-10-19 17:12:51,858:INFO:create_model_container: 5
2020-10-19 17:12:51,858:INFO:master_model_container: 5
2020-10-19 17:12:51,858:INFO:display_container: 1
2020-10-19 17:12:51,876:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 17:12:51,877:INFO:create_model() succesfully completed......................................
2020-10-19 17:12:53,198:INFO:SubProcess create_model() end ==================================
2020-10-19 17:12:53,198:INFO:Creating metrics dataframe
2020-10-19 17:12:53,246:INFO:Initializing MLP Regressor
2020-10-19 17:12:53,246:INFO:Total runtime is 25.29714758396149 minutes
2020-10-19 17:12:53,256:INFO:SubProcess create_model() called ==================================
2020-10-19 17:12:53,256:INFO:Initializing create_model()
2020-10-19 17:12:53,256:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8F0771BC8>, kwargs={})
2020-10-19 17:12:53,256:INFO:Checking exceptions
2020-10-19 17:12:53,257:INFO:Importing libraries
2020-10-19 17:12:53,259:INFO:Copying training dataset
2020-10-19 17:12:53,310:INFO:Defining folds
2020-10-19 17:12:53,310:INFO:Declaring metric variables
2020-10-19 17:12:53,317:INFO:Importing untrained model
2020-10-19 17:12:53,325:INFO:MLP Regressor Imported succesfully
2020-10-19 17:12:53,339:INFO:Starting cross validation
2020-10-19 17:12:53,339:INFO:Cross validating with n_jobs=-1
2020-10-19 17:13:59,887:INFO:Calculating mean and std
2020-10-19 17:13:59,888:INFO:Creating metrics dataframe
2020-10-19 17:13:59,892:INFO:Uploading results into container
2020-10-19 17:13:59,892:INFO:Uploading model into container now
2020-10-19 17:13:59,892:INFO:create_model_container: 6
2020-10-19 17:13:59,893:INFO:master_model_container: 6
2020-10-19 17:13:59,893:INFO:display_container: 1
2020-10-19 17:13:59,895:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 17:13:59,895:INFO:create_model() succesfully completed......................................
2020-10-19 17:13:59,990:INFO:SubProcess create_model() end ==================================
2020-10-19 17:13:59,990:INFO:Creating metrics dataframe
2020-10-19 17:14:00,019:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 17:14:00,020:INFO:Total runtime is 26.410054071744288 minutes
2020-10-19 17:14:00,030:INFO:SubProcess create_model() called ==================================
2020-10-19 17:14:00,031:INFO:Initializing create_model()
2020-10-19 17:14:00,031:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8F0771BC8>, kwargs={})
2020-10-19 17:14:00,031:INFO:Checking exceptions
2020-10-19 17:14:00,031:INFO:Importing libraries
2020-10-19 17:14:00,031:INFO:Copying training dataset
2020-10-19 17:14:00,035:INFO:Defining folds
2020-10-19 17:14:00,035:INFO:Declaring metric variables
2020-10-19 17:14:00,043:INFO:Importing untrained model
2020-10-19 17:14:00,050:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 17:14:00,067:INFO:Starting cross validation
2020-10-19 17:14:00,067:INFO:Cross validating with n_jobs=-1
2020-10-19 17:14:09,032:INFO:Calculating mean and std
2020-10-19 17:14:09,033:INFO:Creating metrics dataframe
2020-10-19 17:14:09,037:INFO:Uploading results into container
2020-10-19 17:14:09,037:INFO:Uploading model into container now
2020-10-19 17:14:09,037:INFO:create_model_container: 7
2020-10-19 17:14:09,037:INFO:master_model_container: 7
2020-10-19 17:14:09,037:INFO:display_container: 1
2020-10-19 17:14:09,038:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 17:14:09,038:INFO:create_model() succesfully completed......................................
2020-10-19 17:14:09,133:INFO:SubProcess create_model() end ==================================
2020-10-19 17:14:09,133:INFO:Creating metrics dataframe
2020-10-19 17:14:09,158:INFO:Initializing CatBoost Regressor
2020-10-19 17:14:09,158:INFO:Total runtime is 26.562358653545385 minutes
2020-10-19 17:14:09,166:INFO:SubProcess create_model() called ==================================
2020-10-19 17:14:09,166:INFO:Initializing create_model()
2020-10-19 17:14:09,166:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8F0771BC8>, kwargs={})
2020-10-19 17:14:09,166:INFO:Checking exceptions
2020-10-19 17:14:09,167:INFO:Importing libraries
2020-10-19 17:14:09,167:INFO:Copying training dataset
2020-10-19 17:14:09,171:INFO:Defining folds
2020-10-19 17:14:09,172:INFO:Declaring metric variables
2020-10-19 17:14:09,179:INFO:Importing untrained model
2020-10-19 17:14:09,198:INFO:CatBoost Regressor Imported succesfully
2020-10-19 17:14:09,213:INFO:Starting cross validation
2020-10-19 17:14:09,214:INFO:Cross validating with n_jobs=-1
2020-10-19 17:19:06,567:INFO:Calculating mean and std
2020-10-19 17:19:06,571:INFO:Creating metrics dataframe
2020-10-19 17:19:06,576:INFO:Uploading results into container
2020-10-19 17:19:06,576:INFO:Uploading model into container now
2020-10-19 17:19:06,576:INFO:create_model_container: 8
2020-10-19 17:19:06,576:INFO:master_model_container: 8
2020-10-19 17:19:06,577:INFO:display_container: 1
2020-10-19 17:19:06,577:INFO:<catboost.core.CatBoostRegressor object at 0x000001D8EEDD8A48>
2020-10-19 17:19:06,577:INFO:create_model() succesfully completed......................................
2020-10-19 17:19:06,698:INFO:SubProcess create_model() end ==================================
2020-10-19 17:19:06,698:INFO:Creating metrics dataframe
2020-10-19 17:19:06,740:INFO:Initializing create_model()
2020-10-19 17:19:06,740:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x000001D8EEDD8A48>, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 17:19:06,741:INFO:Checking exceptions
2020-10-19 17:19:06,741:INFO:Importing libraries
2020-10-19 17:19:06,741:INFO:Copying training dataset
2020-10-19 17:19:06,745:INFO:Defining folds
2020-10-19 17:19:06,745:INFO:Declaring metric variables
2020-10-19 17:19:06,745:INFO:Importing untrained model
2020-10-19 17:19:06,745:INFO:Declaring custom model
2020-10-19 17:19:06,745:INFO:CatBoost Regressor Imported succesfully
2020-10-19 17:19:06,746:INFO:Cross validation set to False
2020-10-19 17:19:06,746:INFO:Fitting Model
2020-10-19 17:19:38,107:INFO:<catboost.core.CatBoostRegressor object at 0x000001D8EFEFAD88>
2020-10-19 17:19:38,108:INFO:create_models() succesfully completed......................................
2020-10-19 17:19:38,244:INFO:create_model_container: 8
2020-10-19 17:19:38,244:INFO:master_model_container: 8
2020-10-19 17:19:38,244:INFO:display_container: 1
2020-10-19 17:19:38,244:INFO:<catboost.core.CatBoostRegressor object at 0x000001D8EFEFAD88>
2020-10-19 17:19:38,244:INFO:compare_models() succesfully completed......................................
2020-10-19 17:22:19,542:INFO:PyCaret Supervised Module
2020-10-19 17:22:19,542:INFO:ML Usecase: regression
2020-10-19 17:22:19,542:INFO:version 2.2.0
2020-10-19 17:22:19,542:INFO:Initializing setup()
2020-10-19 17:22:19,542:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 17:22:19,542:INFO:Checking environment
2020-10-19 17:22:19,542:INFO:python_version: 3.7.6
2020-10-19 17:22:19,542:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 17:22:19,542:INFO:machine: AMD64
2020-10-19 17:22:19,542:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 17:22:19,542:INFO:Memory: svmem(total=16969158656, available=12474408960, percent=26.5, used=4494749696, free=12474408960)
2020-10-19 17:22:19,542:INFO:Physical Core: 4
2020-10-19 17:22:19,542:INFO:Logical Core: 8
2020-10-19 17:22:19,542:INFO:Checking libraries
2020-10-19 17:22:19,542:INFO:pd==1.1.3
2020-10-19 17:22:19,542:INFO:numpy==1.18.1
2020-10-19 17:22:19,542:INFO:sklearn==0.23.2
2020-10-19 17:22:19,542:INFO:xgboost==1.2.1
2020-10-19 17:22:19,543:INFO:lightgbm==2.3.1
2020-10-19 17:22:19,543:INFO:catboost==0.24.2
2020-10-19 17:22:19,543:INFO:mlflow==1.11.0
2020-10-19 17:22:19,543:INFO:Checking Exceptions
2020-10-19 17:22:19,543:INFO:Declaring global variables
2020-10-19 17:22:19,543:INFO:USI: 451d
2020-10-19 17:22:19,543:INFO:pycaret_globals: {'stratify_param', 'logging_param', 'pycaret_globals', 'transform_target_param', '_internal_pipeline', 'X_test', 'display_container', '_all_models_internal', 'transform_target_method_param', '_all_metrics', 'html_param', '_ml_usecase', 'USI', 'X_train', 'target_param', 'X', 'seed', 'fold_generator', 'y_train', 'exp_name_log', 'prep_pipe', 'master_model_container', 'imputation_classifier', 'data_before_preprocess', 'fold_groups_param', 'y', 'fix_imbalance_param', 'n_jobs_param', 'create_model_container', 'imputation_regressor', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'fold_param', 'gpu_param', 'fold_shuffle_param', 'experiment__', '_all_models', 'log_plots_param', '_gpu_n_jobs_param', 'y_test'}
2020-10-19 17:22:19,543:INFO:Preparing display monitor
2020-10-19 17:22:19,543:INFO:Importing libraries
2020-10-19 17:22:19,543:INFO:Copying data for preprocessing
2020-10-19 17:22:19,577:INFO:Declaring preprocessing parameters
2020-10-19 17:22:19,634:INFO:Creating preprocessing pipeline
2020-10-19 17:22:20,561:INFO:Preprocessing pipeline created successfully
2020-10-19 17:22:20,562:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 17:22:20,562:INFO:Creating global containers
2020-10-19 17:22:20,562:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 17:22:26,074:INFO:Creating grid variables
2020-10-19 17:22:26,094:INFO:create_model_container: 0
2020-10-19 17:22:26,094:INFO:master_model_container: 0
2020-10-19 17:22:26,094:INFO:display_container: 0
2020-10-19 17:22:26,098:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 17:22:26,098:INFO:setup() succesfully completed......................................
2020-10-19 17:22:26,216:INFO:Initializing compare_models()
2020-10-19 17:22:26,217:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 17:22:26,217:INFO:Checking exceptions
2020-10-19 17:22:26,217:INFO:Preparing display monitor
2020-10-19 17:22:26,217:INFO:Preparing display monitor
2020-10-19 17:22:26,239:INFO:Initializing Linear Regression
2020-10-19 17:22:26,239:INFO:Total runtime is 0.0 minutes
2020-10-19 17:22:26,245:INFO:SubProcess create_model() called ==================================
2020-10-19 17:22:26,246:INFO:Initializing create_model()
2020-10-19 17:22:26,247:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8E440BDC8>, kwargs={})
2020-10-19 17:22:26,247:INFO:Checking exceptions
2020-10-19 17:22:26,247:INFO:Importing libraries
2020-10-19 17:22:26,248:INFO:Copying training dataset
2020-10-19 17:22:26,251:INFO:Defining folds
2020-10-19 17:22:26,251:INFO:Declaring metric variables
2020-10-19 17:22:26,258:INFO:Importing untrained model
2020-10-19 17:22:26,266:INFO:Linear Regression Imported succesfully
2020-10-19 17:22:26,277:INFO:Starting cross validation
2020-10-19 17:22:26,277:INFO:Cross validating with n_jobs=-1
2020-10-19 17:22:26,693:INFO:Calculating mean and std
2020-10-19 17:22:26,694:INFO:Creating metrics dataframe
2020-10-19 17:22:26,701:INFO:Uploading results into container
2020-10-19 17:22:26,701:INFO:Uploading model into container now
2020-10-19 17:22:26,702:INFO:create_model_container: 1
2020-10-19 17:22:26,702:INFO:master_model_container: 1
2020-10-19 17:22:26,702:INFO:display_container: 1
2020-10-19 17:22:26,702:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 17:22:26,702:INFO:create_model() succesfully completed......................................
2020-10-19 17:22:26,822:INFO:SubProcess create_model() end ==================================
2020-10-19 17:22:26,822:INFO:Creating metrics dataframe
2020-10-19 17:22:26,840:INFO:Initializing K Neighbors Regressor
2020-10-19 17:22:26,840:INFO:Total runtime is 0.010006594657897949 minutes
2020-10-19 17:22:26,848:INFO:SubProcess create_model() called ==================================
2020-10-19 17:22:26,848:INFO:Initializing create_model()
2020-10-19 17:22:26,848:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8E440BDC8>, kwargs={})
2020-10-19 17:22:26,848:INFO:Checking exceptions
2020-10-19 17:22:26,848:INFO:Importing libraries
2020-10-19 17:22:26,848:INFO:Copying training dataset
2020-10-19 17:22:26,852:INFO:Defining folds
2020-10-19 17:22:26,852:INFO:Declaring metric variables
2020-10-19 17:22:26,858:INFO:Importing untrained model
2020-10-19 17:22:26,866:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 17:22:26,883:INFO:Starting cross validation
2020-10-19 17:22:26,884:INFO:Cross validating with n_jobs=-1
2020-10-19 17:22:31,690:INFO:Calculating mean and std
2020-10-19 17:22:31,693:INFO:Creating metrics dataframe
2020-10-19 17:22:31,702:INFO:Uploading results into container
2020-10-19 17:22:31,702:INFO:Uploading model into container now
2020-10-19 17:22:31,702:INFO:create_model_container: 2
2020-10-19 17:22:31,703:INFO:master_model_container: 2
2020-10-19 17:22:31,703:INFO:display_container: 1
2020-10-19 17:22:31,704:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 17:22:31,704:INFO:create_model() succesfully completed......................................
2020-10-19 17:22:31,797:INFO:SubProcess create_model() end ==================================
2020-10-19 17:22:31,797:INFO:Creating metrics dataframe
2020-10-19 17:22:31,816:INFO:Initializing Decision Tree Regressor
2020-10-19 17:22:31,816:INFO:Total runtime is 0.09294971625010173 minutes
2020-10-19 17:22:31,824:INFO:SubProcess create_model() called ==================================
2020-10-19 17:22:31,825:INFO:Initializing create_model()
2020-10-19 17:22:31,825:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8E440BDC8>, kwargs={})
2020-10-19 17:22:31,825:INFO:Checking exceptions
2020-10-19 17:22:31,825:INFO:Importing libraries
2020-10-19 17:22:31,825:INFO:Copying training dataset
2020-10-19 17:22:31,830:INFO:Defining folds
2020-10-19 17:22:31,830:INFO:Declaring metric variables
2020-10-19 17:22:31,837:INFO:Importing untrained model
2020-10-19 17:22:31,844:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 17:22:31,858:INFO:Starting cross validation
2020-10-19 17:22:31,859:INFO:Cross validating with n_jobs=-1
2020-10-19 17:22:43,272:INFO:Calculating mean and std
2020-10-19 17:22:43,274:INFO:Creating metrics dataframe
2020-10-19 17:22:43,282:INFO:Uploading results into container
2020-10-19 17:22:43,282:INFO:Uploading model into container now
2020-10-19 17:22:43,282:INFO:create_model_container: 3
2020-10-19 17:22:43,282:INFO:master_model_container: 3
2020-10-19 17:22:43,282:INFO:display_container: 1
2020-10-19 17:22:43,282:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 17:22:43,283:INFO:create_model() succesfully completed......................................
2020-10-19 17:22:43,376:INFO:SubProcess create_model() end ==================================
2020-10-19 17:22:43,376:INFO:Creating metrics dataframe
2020-10-19 17:22:43,395:INFO:Initializing Random Forest Regressor
2020-10-19 17:22:43,395:INFO:Total runtime is 0.28591802914937336 minutes
2020-10-19 17:22:43,402:INFO:SubProcess create_model() called ==================================
2020-10-19 17:22:43,403:INFO:Initializing create_model()
2020-10-19 17:22:43,403:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8E440BDC8>, kwargs={})
2020-10-19 17:22:43,403:INFO:Checking exceptions
2020-10-19 17:22:43,403:INFO:Importing libraries
2020-10-19 17:22:43,403:INFO:Copying training dataset
2020-10-19 17:22:43,407:INFO:Defining folds
2020-10-19 17:22:43,407:INFO:Declaring metric variables
2020-10-19 17:22:43,414:INFO:Importing untrained model
2020-10-19 17:22:43,422:INFO:Random Forest Regressor Imported succesfully
2020-10-19 17:22:43,439:INFO:Starting cross validation
2020-10-19 17:22:43,440:INFO:Cross validating with n_jobs=-1
2020-10-19 17:36:42,369:INFO:Calculating mean and std
2020-10-19 17:36:42,439:INFO:Creating metrics dataframe
2020-10-19 17:36:42,516:INFO:Uploading results into container
2020-10-19 17:36:42,516:INFO:Uploading model into container now
2020-10-19 17:36:42,517:INFO:create_model_container: 4
2020-10-19 17:36:42,517:INFO:master_model_container: 4
2020-10-19 17:36:42,517:INFO:display_container: 1
2020-10-19 17:36:42,524:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 17:36:42,524:INFO:create_model() succesfully completed......................................
2020-10-19 17:36:43,764:INFO:SubProcess create_model() end ==================================
2020-10-19 17:36:43,764:INFO:Creating metrics dataframe
2020-10-19 17:36:43,807:INFO:Initializing Extra Trees Regressor
2020-10-19 17:36:43,807:INFO:Total runtime is 14.292790718873341 minutes
2020-10-19 17:36:43,819:INFO:SubProcess create_model() called ==================================
2020-10-19 17:36:43,819:INFO:Initializing create_model()
2020-10-19 17:36:43,819:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8E440BDC8>, kwargs={})
2020-10-19 17:36:43,819:INFO:Checking exceptions
2020-10-19 17:36:43,819:INFO:Importing libraries
2020-10-19 17:36:43,819:INFO:Copying training dataset
2020-10-19 17:36:43,858:INFO:Defining folds
2020-10-19 17:36:43,858:INFO:Declaring metric variables
2020-10-19 17:36:43,868:INFO:Importing untrained model
2020-10-19 17:36:43,882:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 17:36:43,908:INFO:Starting cross validation
2020-10-19 17:36:43,908:INFO:Cross validating with n_jobs=-1
2020-10-19 17:57:49,938:INFO:Calculating mean and std
2020-10-19 17:57:50,097:INFO:Creating metrics dataframe
2020-10-19 17:57:50,248:INFO:Uploading results into container
2020-10-19 17:57:50,249:INFO:Uploading model into container now
2020-10-19 17:57:50,249:INFO:create_model_container: 5
2020-10-19 17:57:50,249:INFO:master_model_container: 5
2020-10-19 17:57:50,250:INFO:display_container: 1
2020-10-19 17:57:50,270:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 17:57:50,271:INFO:create_model() succesfully completed......................................
2020-10-19 17:57:52,130:INFO:SubProcess create_model() end ==================================
2020-10-19 17:57:52,130:INFO:Creating metrics dataframe
2020-10-19 17:57:52,206:INFO:Initializing MLP Regressor
2020-10-19 17:57:52,206:INFO:Total runtime is 35.432772433757776 minutes
2020-10-19 17:57:52,232:INFO:SubProcess create_model() called ==================================
2020-10-19 17:57:52,233:INFO:Initializing create_model()
2020-10-19 17:57:52,233:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8E440BDC8>, kwargs={})
2020-10-19 17:57:52,233:INFO:Checking exceptions
2020-10-19 17:57:52,234:INFO:Importing libraries
2020-10-19 17:57:52,234:INFO:Copying training dataset
2020-10-19 17:57:52,337:INFO:Defining folds
2020-10-19 17:57:52,337:INFO:Declaring metric variables
2020-10-19 17:57:52,359:INFO:Importing untrained model
2020-10-19 17:57:52,381:INFO:MLP Regressor Imported succesfully
2020-10-19 17:57:52,422:INFO:Starting cross validation
2020-10-19 17:57:52,422:INFO:Cross validating with n_jobs=-1
2020-10-19 17:59:04,430:INFO:Calculating mean and std
2020-10-19 17:59:04,433:INFO:Creating metrics dataframe
2020-10-19 17:59:04,442:INFO:Uploading results into container
2020-10-19 17:59:04,442:INFO:Uploading model into container now
2020-10-19 17:59:04,442:INFO:create_model_container: 6
2020-10-19 17:59:04,443:INFO:master_model_container: 6
2020-10-19 17:59:04,443:INFO:display_container: 1
2020-10-19 17:59:04,444:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 17:59:04,445:INFO:create_model() succesfully completed......................................
2020-10-19 17:59:04,562:INFO:SubProcess create_model() end ==================================
2020-10-19 17:59:04,562:INFO:Creating metrics dataframe
2020-10-19 17:59:04,591:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 17:59:04,591:INFO:Total runtime is 36.63918636639912 minutes
2020-10-19 17:59:04,602:INFO:SubProcess create_model() called ==================================
2020-10-19 17:59:04,603:INFO:Initializing create_model()
2020-10-19 17:59:04,603:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8E440BDC8>, kwargs={})
2020-10-19 17:59:04,603:INFO:Checking exceptions
2020-10-19 17:59:04,603:INFO:Importing libraries
2020-10-19 17:59:04,603:INFO:Copying training dataset
2020-10-19 17:59:04,607:INFO:Defining folds
2020-10-19 17:59:04,608:INFO:Declaring metric variables
2020-10-19 17:59:04,616:INFO:Importing untrained model
2020-10-19 17:59:04,625:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 17:59:04,643:INFO:Starting cross validation
2020-10-19 17:59:04,643:INFO:Cross validating with n_jobs=-1
2020-10-19 17:59:13,283:INFO:Calculating mean and std
2020-10-19 17:59:13,284:INFO:Creating metrics dataframe
2020-10-19 17:59:13,288:INFO:Uploading results into container
2020-10-19 17:59:13,289:INFO:Uploading model into container now
2020-10-19 17:59:13,289:INFO:create_model_container: 7
2020-10-19 17:59:13,289:INFO:master_model_container: 7
2020-10-19 17:59:13,289:INFO:display_container: 1
2020-10-19 17:59:13,289:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 17:59:13,290:INFO:create_model() succesfully completed......................................
2020-10-19 17:59:13,404:INFO:SubProcess create_model() end ==================================
2020-10-19 17:59:13,404:INFO:Creating metrics dataframe
2020-10-19 17:59:13,434:INFO:Initializing CatBoost Regressor
2020-10-19 17:59:13,435:INFO:Total runtime is 36.78659886916478 minutes
2020-10-19 17:59:13,445:INFO:SubProcess create_model() called ==================================
2020-10-19 17:59:13,445:INFO:Initializing create_model()
2020-10-19 17:59:13,445:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8E440BDC8>, kwargs={})
2020-10-19 17:59:13,445:INFO:Checking exceptions
2020-10-19 17:59:13,446:INFO:Importing libraries
2020-10-19 17:59:13,446:INFO:Copying training dataset
2020-10-19 17:59:13,450:INFO:Defining folds
2020-10-19 17:59:13,450:INFO:Declaring metric variables
2020-10-19 17:59:13,459:INFO:Importing untrained model
2020-10-19 17:59:13,473:INFO:CatBoost Regressor Imported succesfully
2020-10-19 17:59:13,497:INFO:Starting cross validation
2020-10-19 17:59:13,497:INFO:Cross validating with n_jobs=-1
2020-10-19 18:04:16,583:INFO:Calculating mean and std
2020-10-19 18:04:16,584:INFO:Creating metrics dataframe
2020-10-19 18:04:16,589:INFO:Uploading results into container
2020-10-19 18:04:16,589:INFO:Uploading model into container now
2020-10-19 18:04:16,589:INFO:create_model_container: 8
2020-10-19 18:04:16,589:INFO:master_model_container: 8
2020-10-19 18:04:16,589:INFO:display_container: 1
2020-10-19 18:04:16,589:INFO:<catboost.core.CatBoostRegressor object at 0x000001D8EEDE0608>
2020-10-19 18:04:16,589:INFO:create_model() succesfully completed......................................
2020-10-19 18:04:16,709:INFO:SubProcess create_model() end ==================================
2020-10-19 18:04:16,709:INFO:Creating metrics dataframe
2020-10-19 18:04:16,766:INFO:Initializing create_model()
2020-10-19 18:04:16,766:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x000001D8EEDE0608>, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 18:04:16,767:INFO:Checking exceptions
2020-10-19 18:04:16,767:INFO:Importing libraries
2020-10-19 18:04:16,767:INFO:Copying training dataset
2020-10-19 18:04:16,771:INFO:Defining folds
2020-10-19 18:04:16,771:INFO:Declaring metric variables
2020-10-19 18:04:16,771:INFO:Importing untrained model
2020-10-19 18:04:16,772:INFO:Declaring custom model
2020-10-19 18:04:16,772:INFO:CatBoost Regressor Imported succesfully
2020-10-19 18:04:16,772:INFO:Cross validation set to False
2020-10-19 18:04:16,772:INFO:Fitting Model
2020-10-19 18:04:49,025:INFO:<catboost.core.CatBoostRegressor object at 0x000001D8EFD43508>
2020-10-19 18:04:49,025:INFO:create_models() succesfully completed......................................
2020-10-19 18:04:49,188:INFO:create_model_container: 8
2020-10-19 18:04:49,188:INFO:master_model_container: 8
2020-10-19 18:04:49,188:INFO:display_container: 1
2020-10-19 18:04:49,188:INFO:<catboost.core.CatBoostRegressor object at 0x000001D8EFD43508>
2020-10-19 18:04:49,188:INFO:compare_models() succesfully completed......................................
2020-10-19 18:06:56,982:INFO:PyCaret Supervised Module
2020-10-19 18:06:56,982:INFO:ML Usecase: regression
2020-10-19 18:06:56,982:INFO:version 2.2.0
2020-10-19 18:06:56,982:INFO:Initializing setup()
2020-10-19 18:06:56,982:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 18:06:56,983:INFO:Checking environment
2020-10-19 18:06:56,983:INFO:python_version: 3.7.6
2020-10-19 18:06:56,983:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 18:06:56,983:INFO:machine: AMD64
2020-10-19 18:06:56,983:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 18:06:56,983:INFO:Memory: svmem(total=16969158656, available=12524576768, percent=26.2, used=4444581888, free=12524576768)
2020-10-19 18:06:56,983:INFO:Physical Core: 4
2020-10-19 18:06:56,983:INFO:Logical Core: 8
2020-10-19 18:06:56,983:INFO:Checking libraries
2020-10-19 18:06:56,984:INFO:pd==1.1.3
2020-10-19 18:06:56,984:INFO:numpy==1.18.1
2020-10-19 18:06:56,984:INFO:sklearn==0.23.2
2020-10-19 18:06:56,984:INFO:xgboost==1.2.1
2020-10-19 18:06:56,984:INFO:lightgbm==2.3.1
2020-10-19 18:06:56,984:INFO:catboost==0.24.2
2020-10-19 18:06:56,984:INFO:mlflow==1.11.0
2020-10-19 18:06:56,984:INFO:Checking Exceptions
2020-10-19 18:06:56,984:INFO:Declaring global variables
2020-10-19 18:06:56,984:INFO:USI: af45
2020-10-19 18:06:56,985:INFO:pycaret_globals: {'stratify_param', 'logging_param', 'pycaret_globals', 'transform_target_param', '_internal_pipeline', 'X_test', 'display_container', '_all_models_internal', 'transform_target_method_param', '_all_metrics', 'html_param', '_ml_usecase', 'USI', 'X_train', 'target_param', 'X', 'seed', 'fold_generator', 'y_train', 'exp_name_log', 'prep_pipe', 'master_model_container', 'imputation_classifier', 'data_before_preprocess', 'fold_groups_param', 'y', 'fix_imbalance_param', 'n_jobs_param', 'create_model_container', 'imputation_regressor', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'fold_param', 'gpu_param', 'fold_shuffle_param', 'experiment__', '_all_models', 'log_plots_param', '_gpu_n_jobs_param', 'y_test'}
2020-10-19 18:06:56,985:INFO:Preparing display monitor
2020-10-19 18:06:56,985:INFO:Importing libraries
2020-10-19 18:06:56,985:INFO:Copying data for preprocessing
2020-10-19 18:06:57,025:INFO:Declaring preprocessing parameters
2020-10-19 18:06:57,097:INFO:Creating preprocessing pipeline
2020-10-19 18:06:58,276:INFO:Preprocessing pipeline created successfully
2020-10-19 18:06:58,276:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 18:06:58,276:INFO:Creating global containers
2020-10-19 18:06:58,276:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 18:07:05,118:INFO:Creating grid variables
2020-10-19 18:07:05,141:INFO:create_model_container: 0
2020-10-19 18:07:05,141:INFO:master_model_container: 0
2020-10-19 18:07:05,141:INFO:display_container: 0
2020-10-19 18:07:05,147:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 18:07:05,148:INFO:setup() succesfully completed......................................
2020-10-19 18:07:05,292:INFO:Initializing compare_models()
2020-10-19 18:07:05,292:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 18:07:05,292:INFO:Checking exceptions
2020-10-19 18:07:05,292:INFO:Preparing display monitor
2020-10-19 18:07:05,292:INFO:Preparing display monitor
2020-10-19 18:07:05,329:INFO:Initializing Linear Regression
2020-10-19 18:07:05,329:INFO:Total runtime is 0.0 minutes
2020-10-19 18:07:05,339:INFO:SubProcess create_model() called ==================================
2020-10-19 18:07:05,339:INFO:Initializing create_model()
2020-10-19 18:07:05,340:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8EC8E1588>, kwargs={})
2020-10-19 18:07:05,340:INFO:Checking exceptions
2020-10-19 18:07:05,340:INFO:Importing libraries
2020-10-19 18:07:05,340:INFO:Copying training dataset
2020-10-19 18:07:05,345:INFO:Defining folds
2020-10-19 18:07:05,345:INFO:Declaring metric variables
2020-10-19 18:07:05,356:INFO:Importing untrained model
2020-10-19 18:07:05,367:INFO:Linear Regression Imported succesfully
2020-10-19 18:07:05,386:INFO:Starting cross validation
2020-10-19 18:07:05,387:INFO:Cross validating with n_jobs=-1
2020-10-19 18:07:05,866:INFO:Calculating mean and std
2020-10-19 18:07:05,868:INFO:Creating metrics dataframe
2020-10-19 18:07:05,874:INFO:Uploading results into container
2020-10-19 18:07:05,874:INFO:Uploading model into container now
2020-10-19 18:07:05,875:INFO:create_model_container: 1
2020-10-19 18:07:05,875:INFO:master_model_container: 1
2020-10-19 18:07:05,875:INFO:display_container: 1
2020-10-19 18:07:05,875:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 18:07:05,875:INFO:create_model() succesfully completed......................................
2020-10-19 18:07:06,037:INFO:SubProcess create_model() end ==================================
2020-10-19 18:07:06,037:INFO:Creating metrics dataframe
2020-10-19 18:07:06,058:INFO:Initializing K Neighbors Regressor
2020-10-19 18:07:06,058:INFO:Total runtime is 0.012150096893310546 minutes
2020-10-19 18:07:06,069:INFO:SubProcess create_model() called ==================================
2020-10-19 18:07:06,069:INFO:Initializing create_model()
2020-10-19 18:07:06,069:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8EC8E1588>, kwargs={})
2020-10-19 18:07:06,069:INFO:Checking exceptions
2020-10-19 18:07:06,069:INFO:Importing libraries
2020-10-19 18:07:06,069:INFO:Copying training dataset
2020-10-19 18:07:06,073:INFO:Defining folds
2020-10-19 18:07:06,074:INFO:Declaring metric variables
2020-10-19 18:07:06,085:INFO:Importing untrained model
2020-10-19 18:07:06,096:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 18:07:06,115:INFO:Starting cross validation
2020-10-19 18:07:06,116:INFO:Cross validating with n_jobs=-1
2020-10-19 18:07:11,991:INFO:Calculating mean and std
2020-10-19 18:07:11,996:INFO:Creating metrics dataframe
2020-10-19 18:07:12,012:INFO:Uploading results into container
2020-10-19 18:07:12,014:INFO:Uploading model into container now
2020-10-19 18:07:12,014:INFO:create_model_container: 2
2020-10-19 18:07:12,014:INFO:master_model_container: 2
2020-10-19 18:07:12,014:INFO:display_container: 1
2020-10-19 18:07:12,016:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 18:07:12,016:INFO:create_model() succesfully completed......................................
2020-10-19 18:07:12,215:INFO:SubProcess create_model() end ==================================
2020-10-19 18:07:12,215:INFO:Creating metrics dataframe
2020-10-19 18:07:12,247:INFO:Initializing Decision Tree Regressor
2020-10-19 18:07:12,247:INFO:Total runtime is 0.11528356075286865 minutes
2020-10-19 18:07:12,261:INFO:SubProcess create_model() called ==================================
2020-10-19 18:07:12,262:INFO:Initializing create_model()
2020-10-19 18:07:12,262:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8EC8E1588>, kwargs={})
2020-10-19 18:07:12,262:INFO:Checking exceptions
2020-10-19 18:07:12,262:INFO:Importing libraries
2020-10-19 18:07:12,262:INFO:Copying training dataset
2020-10-19 18:07:12,267:INFO:Defining folds
2020-10-19 18:07:12,267:INFO:Declaring metric variables
2020-10-19 18:07:12,278:INFO:Importing untrained model
2020-10-19 18:07:12,287:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 18:07:12,304:INFO:Starting cross validation
2020-10-19 18:07:12,305:INFO:Cross validating with n_jobs=-1
2020-10-19 18:07:26,001:INFO:Calculating mean and std
2020-10-19 18:07:26,002:INFO:Creating metrics dataframe
2020-10-19 18:07:26,007:INFO:Uploading results into container
2020-10-19 18:07:26,007:INFO:Uploading model into container now
2020-10-19 18:07:26,007:INFO:create_model_container: 3
2020-10-19 18:07:26,007:INFO:master_model_container: 3
2020-10-19 18:07:26,007:INFO:display_container: 1
2020-10-19 18:07:26,008:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 18:07:26,008:INFO:create_model() succesfully completed......................................
2020-10-19 18:07:26,129:INFO:SubProcess create_model() end ==================================
2020-10-19 18:07:26,129:INFO:Creating metrics dataframe
2020-10-19 18:07:26,158:INFO:Initializing Random Forest Regressor
2020-10-19 18:07:26,159:INFO:Total runtime is 0.34714014132817583 minutes
2020-10-19 18:07:26,171:INFO:SubProcess create_model() called ==================================
2020-10-19 18:07:26,172:INFO:Initializing create_model()
2020-10-19 18:07:26,172:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8EC8E1588>, kwargs={})
2020-10-19 18:07:26,172:INFO:Checking exceptions
2020-10-19 18:07:26,172:INFO:Importing libraries
2020-10-19 18:07:26,172:INFO:Copying training dataset
2020-10-19 18:07:26,176:INFO:Defining folds
2020-10-19 18:07:26,177:INFO:Declaring metric variables
2020-10-19 18:07:26,187:INFO:Importing untrained model
2020-10-19 18:07:26,195:INFO:Random Forest Regressor Imported succesfully
2020-10-19 18:07:26,212:INFO:Starting cross validation
2020-10-19 18:07:26,212:INFO:Cross validating with n_jobs=-1
2020-10-19 18:22:31,445:INFO:Calculating mean and std
2020-10-19 18:22:31,479:INFO:Creating metrics dataframe
2020-10-19 18:22:31,520:INFO:Uploading results into container
2020-10-19 18:22:31,520:INFO:Uploading model into container now
2020-10-19 18:22:31,520:INFO:create_model_container: 4
2020-10-19 18:22:31,521:INFO:master_model_container: 4
2020-10-19 18:22:31,521:INFO:display_container: 1
2020-10-19 18:22:31,525:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 18:22:31,525:INFO:create_model() succesfully completed......................................
2020-10-19 18:22:32,309:INFO:SubProcess create_model() end ==================================
2020-10-19 18:22:32,309:INFO:Creating metrics dataframe
2020-10-19 18:22:32,354:INFO:Initializing Extra Trees Regressor
2020-10-19 18:22:32,354:INFO:Total runtime is 15.450407532850901 minutes
2020-10-19 18:22:32,370:INFO:SubProcess create_model() called ==================================
2020-10-19 18:22:32,371:INFO:Initializing create_model()
2020-10-19 18:22:32,371:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8EC8E1588>, kwargs={})
2020-10-19 18:22:32,371:INFO:Checking exceptions
2020-10-19 18:22:32,371:INFO:Importing libraries
2020-10-19 18:22:32,371:INFO:Copying training dataset
2020-10-19 18:22:32,429:INFO:Defining folds
2020-10-19 18:22:32,429:INFO:Declaring metric variables
2020-10-19 18:22:32,441:INFO:Importing untrained model
2020-10-19 18:22:32,449:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 18:22:32,469:INFO:Starting cross validation
2020-10-19 18:22:32,469:INFO:Cross validating with n_jobs=-1
2020-10-19 18:40:10,700:INFO:Calculating mean and std
2020-10-19 18:40:10,910:INFO:Creating metrics dataframe
2020-10-19 18:40:11,060:INFO:Uploading results into container
2020-10-19 18:40:11,062:INFO:Uploading model into container now
2020-10-19 18:40:11,064:INFO:create_model_container: 5
2020-10-19 18:40:11,064:INFO:master_model_container: 5
2020-10-19 18:40:11,065:INFO:display_container: 1
2020-10-19 18:40:11,087:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 18:40:11,088:INFO:create_model() succesfully completed......................................
2020-10-19 18:40:12,822:INFO:SubProcess create_model() end ==================================
2020-10-19 18:40:12,822:INFO:Creating metrics dataframe
2020-10-19 18:40:12,895:INFO:Initializing MLP Regressor
2020-10-19 18:40:12,895:INFO:Total runtime is 33.12608408133189 minutes
2020-10-19 18:40:12,905:INFO:SubProcess create_model() called ==================================
2020-10-19 18:40:12,906:INFO:Initializing create_model()
2020-10-19 18:40:12,906:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8EC8E1588>, kwargs={})
2020-10-19 18:40:12,906:INFO:Checking exceptions
2020-10-19 18:40:12,906:INFO:Importing libraries
2020-10-19 18:40:12,906:INFO:Copying training dataset
2020-10-19 18:40:13,021:INFO:Defining folds
2020-10-19 18:40:13,022:INFO:Declaring metric variables
2020-10-19 18:40:13,042:INFO:Importing untrained model
2020-10-19 18:40:13,059:INFO:MLP Regressor Imported succesfully
2020-10-19 18:40:13,086:INFO:Starting cross validation
2020-10-19 18:40:13,088:INFO:Cross validating with n_jobs=-1
2020-10-19 18:41:23,676:INFO:Calculating mean and std
2020-10-19 18:41:23,680:INFO:Creating metrics dataframe
2020-10-19 18:41:23,692:INFO:Uploading results into container
2020-10-19 18:41:23,695:INFO:Uploading model into container now
2020-10-19 18:41:23,695:INFO:create_model_container: 6
2020-10-19 18:41:23,695:INFO:master_model_container: 6
2020-10-19 18:41:23,695:INFO:display_container: 1
2020-10-19 18:41:23,697:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 18:41:23,697:INFO:create_model() succesfully completed......................................
2020-10-19 18:41:23,815:INFO:SubProcess create_model() end ==================================
2020-10-19 18:41:23,815:INFO:Creating metrics dataframe
2020-10-19 18:41:23,850:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 18:41:23,850:INFO:Total runtime is 34.30867735942205 minutes
2020-10-19 18:41:23,864:INFO:SubProcess create_model() called ==================================
2020-10-19 18:41:23,864:INFO:Initializing create_model()
2020-10-19 18:41:23,864:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8EC8E1588>, kwargs={})
2020-10-19 18:41:23,864:INFO:Checking exceptions
2020-10-19 18:41:23,864:INFO:Importing libraries
2020-10-19 18:41:23,864:INFO:Copying training dataset
2020-10-19 18:41:23,869:INFO:Defining folds
2020-10-19 18:41:23,869:INFO:Declaring metric variables
2020-10-19 18:41:23,878:INFO:Importing untrained model
2020-10-19 18:41:23,886:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 18:41:23,905:INFO:Starting cross validation
2020-10-19 18:41:23,905:INFO:Cross validating with n_jobs=-1
2020-10-19 18:41:31,785:INFO:Calculating mean and std
2020-10-19 18:41:31,788:INFO:Creating metrics dataframe
2020-10-19 18:41:31,800:INFO:Uploading results into container
2020-10-19 18:41:31,801:INFO:Uploading model into container now
2020-10-19 18:41:31,801:INFO:create_model_container: 7
2020-10-19 18:41:31,801:INFO:master_model_container: 7
2020-10-19 18:41:31,801:INFO:display_container: 1
2020-10-19 18:41:31,803:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 18:41:31,803:INFO:create_model() succesfully completed......................................
2020-10-19 18:41:31,930:INFO:SubProcess create_model() end ==================================
2020-10-19 18:41:31,930:INFO:Creating metrics dataframe
2020-10-19 18:41:31,965:INFO:Initializing CatBoost Regressor
2020-10-19 18:41:31,966:INFO:Total runtime is 34.44394644101461 minutes
2020-10-19 18:41:31,975:INFO:SubProcess create_model() called ==================================
2020-10-19 18:41:31,976:INFO:Initializing create_model()
2020-10-19 18:41:31,976:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8EC8E1588>, kwargs={})
2020-10-19 18:41:31,976:INFO:Checking exceptions
2020-10-19 18:41:31,976:INFO:Importing libraries
2020-10-19 18:41:31,976:INFO:Copying training dataset
2020-10-19 18:41:31,981:INFO:Defining folds
2020-10-19 18:41:31,981:INFO:Declaring metric variables
2020-10-19 18:41:31,989:INFO:Importing untrained model
2020-10-19 18:41:32,004:INFO:CatBoost Regressor Imported succesfully
2020-10-19 18:41:32,023:INFO:Starting cross validation
2020-10-19 18:41:32,024:INFO:Cross validating with n_jobs=-1
2020-10-19 18:46:26,320:INFO:Calculating mean and std
2020-10-19 18:46:26,323:INFO:Creating metrics dataframe
2020-10-19 18:46:26,334:INFO:Uploading results into container
2020-10-19 18:46:26,334:INFO:Uploading model into container now
2020-10-19 18:46:26,334:INFO:create_model_container: 8
2020-10-19 18:46:26,334:INFO:master_model_container: 8
2020-10-19 18:46:26,334:INFO:display_container: 1
2020-10-19 18:46:26,334:INFO:<catboost.core.CatBoostRegressor object at 0x000001D8CB391508>
2020-10-19 18:46:26,334:INFO:create_model() succesfully completed......................................
2020-10-19 18:46:26,510:INFO:SubProcess create_model() end ==================================
2020-10-19 18:46:26,511:INFO:Creating metrics dataframe
2020-10-19 18:46:26,617:INFO:Initializing create_model()
2020-10-19 18:46:26,617:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 18:46:26,618:INFO:Checking exceptions
2020-10-19 18:46:26,618:INFO:Importing libraries
2020-10-19 18:46:26,618:INFO:Copying training dataset
2020-10-19 18:46:26,625:INFO:Defining folds
2020-10-19 18:46:26,625:INFO:Declaring metric variables
2020-10-19 18:46:26,625:INFO:Importing untrained model
2020-10-19 18:46:26,625:INFO:Declaring custom model
2020-10-19 18:46:26,626:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 18:46:26,626:INFO:Cross validation set to False
2020-10-19 18:46:26,626:INFO:Fitting Model
2020-10-19 18:46:27,634:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 18:46:27,634:INFO:create_models() succesfully completed......................................
2020-10-19 18:46:27,817:INFO:create_model_container: 8
2020-10-19 18:46:27,817:INFO:master_model_container: 8
2020-10-19 18:46:27,817:INFO:display_container: 1
2020-10-19 18:46:27,818:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 18:46:27,818:INFO:compare_models() succesfully completed......................................
2020-10-19 18:54:26,910:INFO:PyCaret Supervised Module
2020-10-19 18:54:26,910:INFO:ML Usecase: regression
2020-10-19 18:54:26,910:INFO:version 2.2.0
2020-10-19 18:54:26,910:INFO:Initializing setup()
2020-10-19 18:54:26,910:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 18:54:26,910:INFO:Checking environment
2020-10-19 18:54:26,910:INFO:python_version: 3.7.6
2020-10-19 18:54:26,910:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 18:54:26,910:INFO:machine: AMD64
2020-10-19 18:54:26,910:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 18:54:26,910:INFO:Memory: svmem(total=16969158656, available=12667932672, percent=25.3, used=4301225984, free=12667932672)
2020-10-19 18:54:26,911:INFO:Physical Core: 4
2020-10-19 18:54:26,911:INFO:Logical Core: 8
2020-10-19 18:54:26,911:INFO:Checking libraries
2020-10-19 18:54:26,911:INFO:pd==1.1.3
2020-10-19 18:54:26,911:INFO:numpy==1.18.1
2020-10-19 18:54:26,911:INFO:sklearn==0.23.2
2020-10-19 18:54:26,911:INFO:xgboost==1.2.1
2020-10-19 18:54:26,911:INFO:lightgbm==2.3.1
2020-10-19 18:54:26,911:INFO:catboost==0.24.2
2020-10-19 18:54:26,911:INFO:mlflow==1.11.0
2020-10-19 18:54:26,911:INFO:Checking Exceptions
2020-10-19 18:54:26,911:INFO:Declaring global variables
2020-10-19 18:54:26,911:INFO:USI: 2a9e
2020-10-19 18:54:26,911:INFO:pycaret_globals: {'stratify_param', 'logging_param', 'pycaret_globals', 'transform_target_param', '_internal_pipeline', 'X_test', 'display_container', '_all_models_internal', 'transform_target_method_param', '_all_metrics', 'html_param', '_ml_usecase', 'USI', 'X_train', 'target_param', 'X', 'seed', 'fold_generator', 'y_train', 'exp_name_log', 'prep_pipe', 'master_model_container', 'imputation_classifier', 'data_before_preprocess', 'fold_groups_param', 'y', 'fix_imbalance_param', 'n_jobs_param', 'create_model_container', 'imputation_regressor', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'fold_param', 'gpu_param', 'fold_shuffle_param', 'experiment__', '_all_models', 'log_plots_param', '_gpu_n_jobs_param', 'y_test'}
2020-10-19 18:54:26,911:INFO:Preparing display monitor
2020-10-19 18:54:26,911:INFO:Importing libraries
2020-10-19 18:54:26,911:INFO:Copying data for preprocessing
2020-10-19 18:54:26,947:INFO:Declaring preprocessing parameters
2020-10-19 18:54:27,009:INFO:Creating preprocessing pipeline
2020-10-19 18:54:27,935:INFO:Preprocessing pipeline created successfully
2020-10-19 18:54:27,935:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 18:54:27,935:INFO:Creating global containers
2020-10-19 18:54:27,935:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 18:54:33,434:INFO:Creating grid variables
2020-10-19 18:54:33,455:INFO:create_model_container: 0
2020-10-19 18:54:33,455:INFO:master_model_container: 0
2020-10-19 18:54:33,455:INFO:display_container: 0
2020-10-19 18:54:33,459:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 18:54:33,459:INFO:setup() succesfully completed......................................
2020-10-19 18:54:33,585:INFO:Initializing compare_models()
2020-10-19 18:54:33,585:INFO:compare_models(include=['lr', 'knn', 'dt', 'rf', 'et', 'mlp', 'lightgbm', 'catboost'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2020-10-19 18:54:33,585:INFO:Checking exceptions
2020-10-19 18:54:33,585:INFO:Preparing display monitor
2020-10-19 18:54:33,586:INFO:Preparing display monitor
2020-10-19 18:54:33,612:INFO:Initializing Linear Regression
2020-10-19 18:54:33,612:INFO:Total runtime is 0.0 minutes
2020-10-19 18:54:33,619:INFO:SubProcess create_model() called ==================================
2020-10-19 18:54:33,619:INFO:Initializing create_model()
2020-10-19 18:54:33,619:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8BC170D08>, kwargs={})
2020-10-19 18:54:33,619:INFO:Checking exceptions
2020-10-19 18:54:33,619:INFO:Importing libraries
2020-10-19 18:54:33,619:INFO:Copying training dataset
2020-10-19 18:54:33,624:INFO:Defining folds
2020-10-19 18:54:33,624:INFO:Declaring metric variables
2020-10-19 18:54:33,631:INFO:Importing untrained model
2020-10-19 18:54:33,639:INFO:Linear Regression Imported succesfully
2020-10-19 18:54:33,659:INFO:Starting cross validation
2020-10-19 18:54:33,659:INFO:Cross validating with n_jobs=-1
2020-10-19 18:54:41,362:INFO:Calculating mean and std
2020-10-19 18:54:41,363:INFO:Creating metrics dataframe
2020-10-19 18:54:41,368:INFO:Uploading results into container
2020-10-19 18:54:41,368:INFO:Uploading model into container now
2020-10-19 18:54:41,368:INFO:create_model_container: 1
2020-10-19 18:54:41,368:INFO:master_model_container: 1
2020-10-19 18:54:41,368:INFO:display_container: 1
2020-10-19 18:54:41,368:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2020-10-19 18:54:41,368:INFO:create_model() succesfully completed......................................
2020-10-19 18:54:41,467:INFO:SubProcess create_model() end ==================================
2020-10-19 18:54:41,468:INFO:Creating metrics dataframe
2020-10-19 18:54:41,485:INFO:Initializing K Neighbors Regressor
2020-10-19 18:54:41,486:INFO:Total runtime is 0.13123185237248738 minutes
2020-10-19 18:54:41,494:INFO:SubProcess create_model() called ==================================
2020-10-19 18:54:41,494:INFO:Initializing create_model()
2020-10-19 18:54:41,495:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8BC170D08>, kwargs={})
2020-10-19 18:54:41,495:INFO:Checking exceptions
2020-10-19 18:54:41,495:INFO:Importing libraries
2020-10-19 18:54:41,495:INFO:Copying training dataset
2020-10-19 18:54:41,500:INFO:Defining folds
2020-10-19 18:54:41,500:INFO:Declaring metric variables
2020-10-19 18:54:41,508:INFO:Importing untrained model
2020-10-19 18:54:41,515:INFO:K Neighbors Regressor Imported succesfully
2020-10-19 18:54:41,528:INFO:Starting cross validation
2020-10-19 18:54:41,528:INFO:Cross validating with n_jobs=-1
2020-10-19 18:54:46,662:INFO:Calculating mean and std
2020-10-19 18:54:46,664:INFO:Creating metrics dataframe
2020-10-19 18:54:46,668:INFO:Uploading results into container
2020-10-19 18:54:46,668:INFO:Uploading model into container now
2020-10-19 18:54:46,668:INFO:create_model_container: 2
2020-10-19 18:54:46,668:INFO:master_model_container: 2
2020-10-19 18:54:46,668:INFO:display_container: 1
2020-10-19 18:54:46,668:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-19 18:54:46,669:INFO:create_model() succesfully completed......................................
2020-10-19 18:54:46,765:INFO:SubProcess create_model() end ==================================
2020-10-19 18:54:46,765:INFO:Creating metrics dataframe
2020-10-19 18:54:46,784:INFO:Initializing Decision Tree Regressor
2020-10-19 18:54:46,784:INFO:Total runtime is 0.2195370117823283 minutes
2020-10-19 18:54:46,793:INFO:SubProcess create_model() called ==================================
2020-10-19 18:54:46,793:INFO:Initializing create_model()
2020-10-19 18:54:46,793:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8BC170D08>, kwargs={})
2020-10-19 18:54:46,793:INFO:Checking exceptions
2020-10-19 18:54:46,793:INFO:Importing libraries
2020-10-19 18:54:46,793:INFO:Copying training dataset
2020-10-19 18:54:46,798:INFO:Defining folds
2020-10-19 18:54:46,798:INFO:Declaring metric variables
2020-10-19 18:54:46,807:INFO:Importing untrained model
2020-10-19 18:54:46,815:INFO:Decision Tree Regressor Imported succesfully
2020-10-19 18:54:46,831:INFO:Starting cross validation
2020-10-19 18:54:46,831:INFO:Cross validating with n_jobs=-1
2020-10-19 18:54:58,090:INFO:Calculating mean and std
2020-10-19 18:54:58,091:INFO:Creating metrics dataframe
2020-10-19 18:54:58,094:INFO:Uploading results into container
2020-10-19 18:54:58,094:INFO:Uploading model into container now
2020-10-19 18:54:58,094:INFO:create_model_container: 3
2020-10-19 18:54:58,094:INFO:master_model_container: 3
2020-10-19 18:54:58,095:INFO:display_container: 1
2020-10-19 18:54:58,095:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=0, splitter='best')
2020-10-19 18:54:58,095:INFO:create_model() succesfully completed......................................
2020-10-19 18:54:58,193:INFO:SubProcess create_model() end ==================================
2020-10-19 18:54:58,193:INFO:Creating metrics dataframe
2020-10-19 18:54:58,212:INFO:Initializing Random Forest Regressor
2020-10-19 18:54:58,213:INFO:Total runtime is 0.4100211222966512 minutes
2020-10-19 18:54:58,221:INFO:SubProcess create_model() called ==================================
2020-10-19 18:54:58,221:INFO:Initializing create_model()
2020-10-19 18:54:58,221:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8BC170D08>, kwargs={})
2020-10-19 18:54:58,222:INFO:Checking exceptions
2020-10-19 18:54:58,222:INFO:Importing libraries
2020-10-19 18:54:58,222:INFO:Copying training dataset
2020-10-19 18:54:58,226:INFO:Defining folds
2020-10-19 18:54:58,227:INFO:Declaring metric variables
2020-10-19 18:54:58,234:INFO:Importing untrained model
2020-10-19 18:54:58,243:INFO:Random Forest Regressor Imported succesfully
2020-10-19 18:54:58,266:INFO:Starting cross validation
2020-10-19 18:54:58,266:INFO:Cross validating with n_jobs=-1
2020-10-19 19:07:37,866:INFO:Calculating mean and std
2020-10-19 19:07:37,962:INFO:Creating metrics dataframe
2020-10-19 19:07:38,071:INFO:Uploading results into container
2020-10-19 19:07:38,072:INFO:Uploading model into container now
2020-10-19 19:07:38,073:INFO:create_model_container: 4
2020-10-19 19:07:38,073:INFO:master_model_container: 4
2020-10-19 19:07:38,073:INFO:display_container: 1
2020-10-19 19:07:38,081:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=0, verbose=0, warm_start=False)
2020-10-19 19:07:38,081:INFO:create_model() succesfully completed......................................
2020-10-19 19:07:39,591:INFO:SubProcess create_model() end ==================================
2020-10-19 19:07:39,591:INFO:Creating metrics dataframe
2020-10-19 19:07:39,648:INFO:Initializing Extra Trees Regressor
2020-10-19 19:07:39,648:INFO:Total runtime is 13.10060799519221 minutes
2020-10-19 19:07:39,661:INFO:SubProcess create_model() called ==================================
2020-10-19 19:07:39,661:INFO:Initializing create_model()
2020-10-19 19:07:39,661:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8BC170D08>, kwargs={})
2020-10-19 19:07:39,661:INFO:Checking exceptions
2020-10-19 19:07:39,661:INFO:Importing libraries
2020-10-19 19:07:39,661:INFO:Copying training dataset
2020-10-19 19:07:39,727:INFO:Defining folds
2020-10-19 19:07:39,727:INFO:Declaring metric variables
2020-10-19 19:07:39,733:INFO:Importing untrained model
2020-10-19 19:07:39,740:INFO:Extra Trees Regressor Imported succesfully
2020-10-19 19:07:39,752:INFO:Starting cross validation
2020-10-19 19:07:39,753:INFO:Cross validating with n_jobs=-1
2020-10-19 19:38:20,126:INFO:Calculating mean and std
2020-10-19 19:38:20,411:INFO:Creating metrics dataframe
2020-10-19 19:38:20,560:INFO:Uploading results into container
2020-10-19 19:38:20,560:INFO:Uploading model into container now
2020-10-19 19:38:20,561:INFO:create_model_container: 5
2020-10-19 19:38:20,561:INFO:master_model_container: 5
2020-10-19 19:38:20,561:INFO:display_container: 1
2020-10-19 19:38:20,579:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-19 19:38:20,579:INFO:create_model() succesfully completed......................................
2020-10-19 19:38:22,620:INFO:SubProcess create_model() end ==================================
2020-10-19 19:38:22,620:INFO:Creating metrics dataframe
2020-10-19 19:38:22,674:INFO:Initializing MLP Regressor
2020-10-19 19:38:22,674:INFO:Total runtime is 43.817709672451016 minutes
2020-10-19 19:38:22,686:INFO:SubProcess create_model() called ==================================
2020-10-19 19:38:22,686:INFO:Initializing create_model()
2020-10-19 19:38:22,686:INFO:create_model(estimator=mlp, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8BC170D08>, kwargs={})
2020-10-19 19:38:22,686:INFO:Checking exceptions
2020-10-19 19:38:22,686:INFO:Importing libraries
2020-10-19 19:38:22,687:INFO:Copying training dataset
2020-10-19 19:38:22,794:INFO:Defining folds
2020-10-19 19:38:22,794:INFO:Declaring metric variables
2020-10-19 19:38:22,800:INFO:Importing untrained model
2020-10-19 19:38:22,807:INFO:MLP Regressor Imported succesfully
2020-10-19 19:38:22,820:INFO:Starting cross validation
2020-10-19 19:38:22,820:INFO:Cross validating with n_jobs=-1
2020-10-19 19:39:35,844:INFO:Calculating mean and std
2020-10-19 19:39:35,845:INFO:Creating metrics dataframe
2020-10-19 19:39:35,849:INFO:Uploading results into container
2020-10-19 19:39:35,850:INFO:Uploading model into container now
2020-10-19 19:39:35,850:INFO:create_model_container: 6
2020-10-19 19:39:35,850:INFO:master_model_container: 6
2020-10-19 19:39:35,850:INFO:display_container: 1
2020-10-19 19:39:35,852:INFO:TunableMLPRegressor(activation='relu', alpha=0.0001, batch_size='auto',
                    beta_1=0.9, beta_2=0.999, early_stopping=False,
                    epsilon=1e-08, hidden_layer_size_0=100,
                    hidden_layer_sizes=[100], learning_rate='constant',
                    learning_rate_init=0.001, max_fun=15000, max_iter=500,
                    momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
                    power_t=0.5, random_state=0, shuffle=True, solver='adam',
                    tol=0.0001, validation_fraction=0.1, verbose=False,
                    warm_start=False)
2020-10-19 19:39:35,852:INFO:create_model() succesfully completed......................................
2020-10-19 19:39:35,953:INFO:SubProcess create_model() end ==================================
2020-10-19 19:39:35,953:INFO:Creating metrics dataframe
2020-10-19 19:39:35,980:INFO:Initializing Light Gradient Boosting Machine
2020-10-19 19:39:35,980:INFO:Total runtime is 45.039471836884815 minutes
2020-10-19 19:39:35,992:INFO:SubProcess create_model() called ==================================
2020-10-19 19:39:35,992:INFO:Initializing create_model()
2020-10-19 19:39:35,992:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8BC170D08>, kwargs={})
2020-10-19 19:39:35,992:INFO:Checking exceptions
2020-10-19 19:39:35,992:INFO:Importing libraries
2020-10-19 19:39:35,992:INFO:Copying training dataset
2020-10-19 19:39:35,996:INFO:Defining folds
2020-10-19 19:39:35,997:INFO:Declaring metric variables
2020-10-19 19:39:36,008:INFO:Importing untrained model
2020-10-19 19:39:36,016:INFO:Light Gradient Boosting Machine Imported succesfully
2020-10-19 19:39:36,034:INFO:Starting cross validation
2020-10-19 19:39:36,034:INFO:Cross validating with n_jobs=-1
2020-10-19 19:39:45,692:INFO:Calculating mean and std
2020-10-19 19:39:45,693:INFO:Creating metrics dataframe
2020-10-19 19:39:45,698:INFO:Uploading results into container
2020-10-19 19:39:45,698:INFO:Uploading model into container now
2020-10-19 19:39:45,698:INFO:create_model_container: 7
2020-10-19 19:39:45,699:INFO:master_model_container: 7
2020-10-19 19:39:45,699:INFO:display_container: 1
2020-10-19 19:39:45,701:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2020-10-19 19:39:45,701:INFO:create_model() succesfully completed......................................
2020-10-19 19:39:45,797:INFO:SubProcess create_model() end ==================================
2020-10-19 19:39:45,797:INFO:Creating metrics dataframe
2020-10-19 19:39:45,830:INFO:Initializing CatBoost Regressor
2020-10-19 19:39:45,831:INFO:Total runtime is 45.20364327033361 minutes
2020-10-19 19:39:45,845:INFO:SubProcess create_model() called ==================================
2020-10-19 19:39:45,845:INFO:Initializing create_model()
2020-10-19 19:39:45,845:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001D8BC170D08>, kwargs={})
2020-10-19 19:39:45,845:INFO:Checking exceptions
2020-10-19 19:39:45,846:INFO:Importing libraries
2020-10-19 19:39:45,846:INFO:Copying training dataset
2020-10-19 19:39:45,852:INFO:Defining folds
2020-10-19 19:39:45,853:INFO:Declaring metric variables
2020-10-19 19:39:45,861:INFO:Importing untrained model
2020-10-19 19:39:45,877:INFO:CatBoost Regressor Imported succesfully
2020-10-19 19:39:45,894:INFO:Starting cross validation
2020-10-19 19:39:45,895:INFO:Cross validating with n_jobs=-1
2020-10-19 19:44:39,271:INFO:Calculating mean and std
2020-10-19 19:44:39,272:INFO:Creating metrics dataframe
2020-10-19 19:44:39,277:INFO:Uploading results into container
2020-10-19 19:44:39,277:INFO:Uploading model into container now
2020-10-19 19:44:39,277:INFO:create_model_container: 8
2020-10-19 19:44:39,277:INFO:master_model_container: 8
2020-10-19 19:44:39,277:INFO:display_container: 1
2020-10-19 19:44:39,277:INFO:<catboost.core.CatBoostRegressor object at 0x000001D8F0771C48>
2020-10-19 19:44:39,277:INFO:create_model() succesfully completed......................................
2020-10-19 19:44:39,390:INFO:SubProcess create_model() end ==================================
2020-10-19 19:44:39,390:INFO:Creating metrics dataframe
2020-10-19 19:44:39,441:INFO:Initializing create_model()
2020-10-19 19:44:39,441:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x000001D8F0771C48>, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2020-10-19 19:44:39,441:INFO:Checking exceptions
2020-10-19 19:44:39,441:INFO:Importing libraries
2020-10-19 19:44:39,442:INFO:Copying training dataset
2020-10-19 19:44:39,445:INFO:Defining folds
2020-10-19 19:44:39,446:INFO:Declaring metric variables
2020-10-19 19:44:39,446:INFO:Importing untrained model
2020-10-19 19:44:39,446:INFO:Declaring custom model
2020-10-19 19:44:39,446:INFO:CatBoost Regressor Imported succesfully
2020-10-19 19:44:39,446:INFO:Cross validation set to False
2020-10-19 19:44:39,446:INFO:Fitting Model
2020-10-19 19:45:12,052:INFO:<catboost.core.CatBoostRegressor object at 0x000001D8EFE01588>
2020-10-19 19:45:12,052:INFO:create_models() succesfully completed......................................
2020-10-19 19:45:12,193:INFO:create_model_container: 8
2020-10-19 19:45:12,193:INFO:master_model_container: 8
2020-10-19 19:45:12,194:INFO:display_container: 1
2020-10-19 19:45:12,194:INFO:<catboost.core.CatBoostRegressor object at 0x000001D8EFE01588>
2020-10-19 19:45:12,194:INFO:compare_models() succesfully completed......................................
2020-10-19 21:52:16,636:INFO:PyCaret Supervised Module
2020-10-19 21:52:16,636:INFO:ML Usecase: regression
2020-10-19 21:52:16,636:INFO:version 2.2.0
2020-10-19 21:52:16,636:INFO:Initializing setup()
2020-10-19 21:52:16,636:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-19 21:52:16,636:INFO:Checking environment
2020-10-19 21:52:16,636:INFO:python_version: 3.7.6
2020-10-19 21:52:16,637:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-19 21:52:16,637:INFO:machine: AMD64
2020-10-19 21:52:16,637:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-19 21:52:16,637:INFO:Memory: svmem(total=16969158656, available=8601071616, percent=49.3, used=8368087040, free=8601071616)
2020-10-19 21:52:16,637:INFO:Physical Core: 4
2020-10-19 21:52:16,637:INFO:Logical Core: 8
2020-10-19 21:52:16,637:INFO:Checking libraries
2020-10-19 21:52:16,637:INFO:pd==1.1.3
2020-10-19 21:52:16,637:INFO:numpy==1.18.1
2020-10-19 21:52:16,637:INFO:sklearn==0.23.2
2020-10-19 21:52:17,199:INFO:xgboost==1.2.1
2020-10-19 21:52:17,199:INFO:lightgbm==2.3.1
2020-10-19 21:52:17,211:INFO:catboost==0.24.2
2020-10-19 21:52:18,076:INFO:mlflow==1.11.0
2020-10-19 21:52:18,076:INFO:Checking Exceptions
2020-10-19 21:52:18,076:INFO:Declaring global variables
2020-10-19 21:52:18,076:INFO:USI: 75f9
2020-10-19 21:52:18,076:INFO:pycaret_globals: {'fold_shuffle_param', '_all_models', '_ml_usecase', 'data_before_preprocess', 'y', 'create_model_container', 'X_train', 'transform_target_param', '_all_metrics', '_internal_pipeline', 'fix_imbalance_param', 'iterative_imputation_iters_param', 'pycaret_globals', 'fix_imbalance_method_param', 'transform_target_method_param', 'n_jobs_param', 'y_test', '_gpu_n_jobs_param', 'target_param', 'prep_pipe', 'y_train', 'fold_param', 'display_container', 'imputation_regressor', 'log_plots_param', 'USI', 'stratify_param', 'logging_param', '_all_models_internal', 'imputation_classifier', 'exp_name_log', 'gpu_param', 'master_model_container', 'seed', 'X_test', 'fold_groups_param', 'X', 'experiment__', 'html_param', 'fold_generator'}
2020-10-19 21:52:18,076:INFO:Preparing display monitor
2020-10-19 21:52:18,076:INFO:Importing libraries
2020-10-19 21:52:18,076:INFO:Copying data for preprocessing
2020-10-19 21:52:18,109:INFO:Declaring preprocessing parameters
2020-10-19 21:52:18,168:INFO:Creating preprocessing pipeline
2020-10-19 21:52:19,327:INFO:Preprocessing pipeline created successfully
2020-10-19 21:52:19,327:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-19 21:52:19,327:INFO:Creating global containers
2020-10-19 21:52:19,329:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-19 21:52:25,661:INFO:Creating grid variables
2020-10-19 21:52:25,681:INFO:create_model_container: 0
2020-10-19 21:52:25,682:INFO:master_model_container: 0
2020-10-19 21:52:25,682:INFO:display_container: 0
2020-10-19 21:52:25,687:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-19 21:52:25,687:INFO:setup() succesfully completed......................................
2020-10-19 22:13:08,020:INFO:Initializing tune_model()
2020-10-19 22:13:08,021:INFO:tune_model(estimator=catboost, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-19 22:13:08,021:INFO:Checking exceptions
2020-10-19 22:13:28,735:INFO:Initializing tune_model()
2020-10-19 22:13:28,735:INFO:tune_model(estimator=catboost, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-19 22:13:28,736:INFO:Checking exceptions
2020-10-19 22:14:10,588:INFO:Initializing create_model()
2020-10-19 22:14:10,588:INFO:create_model(estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2020-10-19 22:14:10,589:INFO:Checking exceptions
2020-10-19 22:14:10,589:INFO:Preparing display monitor
2020-10-19 22:14:10,617:INFO:Importing libraries
2020-10-19 22:14:10,617:INFO:Copying training dataset
2020-10-19 22:14:10,623:INFO:Defining folds
2020-10-19 22:14:10,623:INFO:Declaring metric variables
2020-10-19 22:14:10,629:INFO:Importing untrained model
2020-10-19 22:14:10,636:INFO:CatBoost Regressor Imported succesfully
2020-10-19 22:14:10,650:INFO:Starting cross validation
2020-10-19 22:14:10,658:INFO:Cross validating with n_jobs=-1
2020-10-19 22:18:44,897:INFO:Calculating mean and std
2020-10-19 22:18:44,899:INFO:Creating metrics dataframe
2020-10-19 22:18:44,923:INFO:Finalizing model
2020-10-19 22:19:15,145:INFO:Uploading results into container
2020-10-19 22:19:15,145:INFO:Uploading model into container now
2020-10-19 22:19:15,165:INFO:create_model_container: 1
2020-10-19 22:19:15,165:INFO:master_model_container: 1
2020-10-19 22:19:15,165:INFO:display_container: 1
2020-10-19 22:19:15,166:INFO:<catboost.core.CatBoostRegressor object at 0x000002963F498348>
2020-10-19 22:19:15,166:INFO:create_model() succesfully completed......................................
2020-10-19 22:19:15,271:INFO:Initializing tune_model()
2020-10-19 22:19:15,271:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963F498348>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-19 22:19:15,271:INFO:Checking exceptions
2020-10-19 22:19:15,271:INFO:Preparing display monitor
2020-10-19 22:19:15,290:INFO:Copying training dataset
2020-10-19 22:19:15,294:INFO:Checking base model
2020-10-19 22:19:15,294:INFO:Base model : CatBoost Regressor
2020-10-19 22:19:15,304:INFO:Declaring metric variables
2020-10-19 22:19:15,315:INFO:Defining Hyperparameters
2020-10-19 22:19:15,407:INFO:Tuning with n_jobs=-1
2020-10-19 22:19:15,407:INFO:Initializing RandomizedSearchCV
2020-10-19 22:30:56,452:INFO:best_params: {'actual_estimator__random_strength': 0.7, 'actual_estimator__n_estimators': 250, 'actual_estimator__l2_leaf_reg': 8, 'actual_estimator__depth': 11}
2020-10-19 22:30:56,453:INFO:Random search completed
2020-10-19 22:30:56,453:INFO:SubProcess create_model() called ==================================
2020-10-19 22:30:56,453:INFO:Initializing create_model()
2020-10-19 22:30:56,454:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D85E408>, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002963D867E88>, kwargs={'random_strength': 0.7, 'n_estimators': 250, 'l2_leaf_reg': 8, 'depth': 11})
2020-10-19 22:30:56,454:INFO:Checking exceptions
2020-10-19 22:30:56,454:INFO:Importing libraries
2020-10-19 22:30:56,454:INFO:Copying training dataset
2020-10-19 22:30:56,460:INFO:Defining folds
2020-10-19 22:30:56,460:INFO:Declaring metric variables
2020-10-19 22:30:56,474:INFO:Importing untrained model
2020-10-19 22:30:56,475:INFO:Declaring custom model
2020-10-19 22:30:56,488:INFO:CatBoost Regressor Imported succesfully
2020-10-19 22:30:56,512:INFO:Starting cross validation
2020-10-19 22:30:56,513:INFO:Cross validating with n_jobs=-1
2020-10-19 22:33:37,921:INFO:Calculating mean and std
2020-10-19 22:33:37,922:INFO:Creating metrics dataframe
2020-10-19 22:33:37,934:INFO:Finalizing model
2020-10-19 22:33:57,810:INFO:Uploading results into container
2020-10-19 22:33:57,810:INFO:Uploading model into container now
2020-10-19 22:33:57,810:INFO:create_model_container: 2
2020-10-19 22:33:57,810:INFO:master_model_container: 2
2020-10-19 22:33:57,811:INFO:display_container: 2
2020-10-19 22:33:57,811:INFO:<catboost.core.CatBoostRegressor object at 0x000002963D868988>
2020-10-19 22:33:57,811:INFO:create_model() succesfully completed......................................
2020-10-19 22:33:57,904:INFO:SubProcess create_model() end ==================================
2020-10-19 22:33:57,918:INFO:create_model_container: 2
2020-10-19 22:33:57,918:INFO:master_model_container: 2
2020-10-19 22:33:57,918:INFO:display_container: 2
2020-10-19 22:33:57,918:INFO:<catboost.core.CatBoostRegressor object at 0x000002963D868988>
2020-10-19 22:33:57,918:INFO:tune_model() succesfully completed......................................
2020-10-19 22:34:10,717:INFO:Initializing predict_model()
2020-10-19 22:34:10,717:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:10,717:INFO:Checking exceptions
2020-10-19 22:34:10,718:INFO:Preloading libraries
2020-10-19 22:34:10,718:INFO:Preparing display monitor
2020-10-19 22:34:10,923:INFO:Initializing predict_model()
2020-10-19 22:34:10,924:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:10,924:INFO:Checking exceptions
2020-10-19 22:34:10,924:INFO:Preloading libraries
2020-10-19 22:34:10,924:INFO:Preparing display monitor
2020-10-19 22:34:11,057:INFO:Initializing predict_model()
2020-10-19 22:34:11,057:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:11,057:INFO:Checking exceptions
2020-10-19 22:34:11,057:INFO:Preloading libraries
2020-10-19 22:34:11,058:INFO:Preparing display monitor
2020-10-19 22:34:11,186:INFO:Initializing predict_model()
2020-10-19 22:34:11,186:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:11,186:INFO:Checking exceptions
2020-10-19 22:34:11,186:INFO:Preloading libraries
2020-10-19 22:34:11,186:INFO:Preparing display monitor
2020-10-19 22:34:11,322:INFO:Initializing predict_model()
2020-10-19 22:34:11,322:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:11,322:INFO:Checking exceptions
2020-10-19 22:34:11,322:INFO:Preloading libraries
2020-10-19 22:34:11,322:INFO:Preparing display monitor
2020-10-19 22:34:11,458:INFO:Initializing predict_model()
2020-10-19 22:34:11,458:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:11,458:INFO:Checking exceptions
2020-10-19 22:34:11,458:INFO:Preloading libraries
2020-10-19 22:34:11,458:INFO:Preparing display monitor
2020-10-19 22:34:11,588:INFO:Initializing predict_model()
2020-10-19 22:34:11,588:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:11,588:INFO:Checking exceptions
2020-10-19 22:34:11,588:INFO:Preloading libraries
2020-10-19 22:34:11,588:INFO:Preparing display monitor
2020-10-19 22:34:11,718:INFO:Initializing predict_model()
2020-10-19 22:34:11,718:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:11,718:INFO:Checking exceptions
2020-10-19 22:34:11,719:INFO:Preloading libraries
2020-10-19 22:34:11,719:INFO:Preparing display monitor
2020-10-19 22:34:11,849:INFO:Initializing predict_model()
2020-10-19 22:34:11,849:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:11,849:INFO:Checking exceptions
2020-10-19 22:34:11,849:INFO:Preloading libraries
2020-10-19 22:34:11,849:INFO:Preparing display monitor
2020-10-19 22:34:11,977:INFO:Initializing predict_model()
2020-10-19 22:34:11,977:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:11,977:INFO:Checking exceptions
2020-10-19 22:34:11,978:INFO:Preloading libraries
2020-10-19 22:34:11,978:INFO:Preparing display monitor
2020-10-19 22:34:12,107:INFO:Initializing predict_model()
2020-10-19 22:34:12,107:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:12,107:INFO:Checking exceptions
2020-10-19 22:34:12,107:INFO:Preloading libraries
2020-10-19 22:34:12,107:INFO:Preparing display monitor
2020-10-19 22:34:12,236:INFO:Initializing predict_model()
2020-10-19 22:34:12,236:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:12,236:INFO:Checking exceptions
2020-10-19 22:34:12,236:INFO:Preloading libraries
2020-10-19 22:34:12,236:INFO:Preparing display monitor
2020-10-19 22:34:12,370:INFO:Initializing predict_model()
2020-10-19 22:34:12,370:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:12,370:INFO:Checking exceptions
2020-10-19 22:34:12,370:INFO:Preloading libraries
2020-10-19 22:34:12,370:INFO:Preparing display monitor
2020-10-19 22:34:12,505:INFO:Initializing predict_model()
2020-10-19 22:34:12,505:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:12,506:INFO:Checking exceptions
2020-10-19 22:34:12,506:INFO:Preloading libraries
2020-10-19 22:34:12,506:INFO:Preparing display monitor
2020-10-19 22:34:12,636:INFO:Initializing predict_model()
2020-10-19 22:34:12,637:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:12,637:INFO:Checking exceptions
2020-10-19 22:34:12,637:INFO:Preloading libraries
2020-10-19 22:34:12,637:INFO:Preparing display monitor
2020-10-19 22:34:12,771:INFO:Initializing predict_model()
2020-10-19 22:34:12,771:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:12,771:INFO:Checking exceptions
2020-10-19 22:34:12,771:INFO:Preloading libraries
2020-10-19 22:34:12,771:INFO:Preparing display monitor
2020-10-19 22:34:12,903:INFO:Initializing predict_model()
2020-10-19 22:34:12,903:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:12,903:INFO:Checking exceptions
2020-10-19 22:34:12,903:INFO:Preloading libraries
2020-10-19 22:34:12,903:INFO:Preparing display monitor
2020-10-19 22:34:13,030:INFO:Initializing predict_model()
2020-10-19 22:34:13,030:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:13,031:INFO:Checking exceptions
2020-10-19 22:34:13,031:INFO:Preloading libraries
2020-10-19 22:34:13,031:INFO:Preparing display monitor
2020-10-19 22:34:13,158:INFO:Initializing predict_model()
2020-10-19 22:34:13,158:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:13,158:INFO:Checking exceptions
2020-10-19 22:34:13,158:INFO:Preloading libraries
2020-10-19 22:34:13,159:INFO:Preparing display monitor
2020-10-19 22:34:13,286:INFO:Initializing predict_model()
2020-10-19 22:34:13,286:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:13,286:INFO:Checking exceptions
2020-10-19 22:34:13,286:INFO:Preloading libraries
2020-10-19 22:34:13,286:INFO:Preparing display monitor
2020-10-19 22:34:13,413:INFO:Initializing predict_model()
2020-10-19 22:34:13,413:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:13,413:INFO:Checking exceptions
2020-10-19 22:34:13,413:INFO:Preloading libraries
2020-10-19 22:34:13,413:INFO:Preparing display monitor
2020-10-19 22:34:13,541:INFO:Initializing predict_model()
2020-10-19 22:34:13,541:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:13,541:INFO:Checking exceptions
2020-10-19 22:34:13,541:INFO:Preloading libraries
2020-10-19 22:34:13,541:INFO:Preparing display monitor
2020-10-19 22:34:13,670:INFO:Initializing predict_model()
2020-10-19 22:34:13,670:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:13,670:INFO:Checking exceptions
2020-10-19 22:34:13,670:INFO:Preloading libraries
2020-10-19 22:34:13,670:INFO:Preparing display monitor
2020-10-19 22:34:13,804:INFO:Initializing predict_model()
2020-10-19 22:34:13,804:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:13,804:INFO:Checking exceptions
2020-10-19 22:34:13,804:INFO:Preloading libraries
2020-10-19 22:34:13,804:INFO:Preparing display monitor
2020-10-19 22:34:13,937:INFO:Initializing predict_model()
2020-10-19 22:34:13,938:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:13,938:INFO:Checking exceptions
2020-10-19 22:34:13,938:INFO:Preloading libraries
2020-10-19 22:34:13,938:INFO:Preparing display monitor
2020-10-19 22:34:14,070:INFO:Initializing predict_model()
2020-10-19 22:34:14,070:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:14,070:INFO:Checking exceptions
2020-10-19 22:34:14,070:INFO:Preloading libraries
2020-10-19 22:34:14,070:INFO:Preparing display monitor
2020-10-19 22:34:14,204:INFO:Initializing predict_model()
2020-10-19 22:34:14,204:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:14,204:INFO:Checking exceptions
2020-10-19 22:34:14,204:INFO:Preloading libraries
2020-10-19 22:34:14,204:INFO:Preparing display monitor
2020-10-19 22:34:14,334:INFO:Initializing predict_model()
2020-10-19 22:34:14,334:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:14,334:INFO:Checking exceptions
2020-10-19 22:34:14,334:INFO:Preloading libraries
2020-10-19 22:34:14,334:INFO:Preparing display monitor
2020-10-19 22:34:14,461:INFO:Initializing predict_model()
2020-10-19 22:34:14,461:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:14,461:INFO:Checking exceptions
2020-10-19 22:34:14,461:INFO:Preloading libraries
2020-10-19 22:34:14,462:INFO:Preparing display monitor
2020-10-19 22:34:14,588:INFO:Initializing predict_model()
2020-10-19 22:34:14,588:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:14,588:INFO:Checking exceptions
2020-10-19 22:34:14,588:INFO:Preloading libraries
2020-10-19 22:34:14,588:INFO:Preparing display monitor
2020-10-19 22:34:14,716:INFO:Initializing predict_model()
2020-10-19 22:34:14,716:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:14,716:INFO:Checking exceptions
2020-10-19 22:34:14,716:INFO:Preloading libraries
2020-10-19 22:34:14,716:INFO:Preparing display monitor
2020-10-19 22:34:14,843:INFO:Initializing predict_model()
2020-10-19 22:34:14,843:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:14,843:INFO:Checking exceptions
2020-10-19 22:34:14,843:INFO:Preloading libraries
2020-10-19 22:34:14,843:INFO:Preparing display monitor
2020-10-19 22:34:14,970:INFO:Initializing predict_model()
2020-10-19 22:34:14,970:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:14,970:INFO:Checking exceptions
2020-10-19 22:34:14,970:INFO:Preloading libraries
2020-10-19 22:34:14,970:INFO:Preparing display monitor
2020-10-19 22:34:15,100:INFO:Initializing predict_model()
2020-10-19 22:34:15,100:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:15,100:INFO:Checking exceptions
2020-10-19 22:34:15,100:INFO:Preloading libraries
2020-10-19 22:34:15,100:INFO:Preparing display monitor
2020-10-19 22:34:15,233:INFO:Initializing predict_model()
2020-10-19 22:34:15,234:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:15,234:INFO:Checking exceptions
2020-10-19 22:34:15,234:INFO:Preloading libraries
2020-10-19 22:34:15,234:INFO:Preparing display monitor
2020-10-19 22:34:15,364:INFO:Initializing predict_model()
2020-10-19 22:34:15,364:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:15,364:INFO:Checking exceptions
2020-10-19 22:34:15,364:INFO:Preloading libraries
2020-10-19 22:34:15,364:INFO:Preparing display monitor
2020-10-19 22:34:15,495:INFO:Initializing predict_model()
2020-10-19 22:34:15,495:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:15,495:INFO:Checking exceptions
2020-10-19 22:34:15,496:INFO:Preloading libraries
2020-10-19 22:34:15,496:INFO:Preparing display monitor
2020-10-19 22:34:15,630:INFO:Initializing predict_model()
2020-10-19 22:34:15,630:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:15,630:INFO:Checking exceptions
2020-10-19 22:34:15,630:INFO:Preloading libraries
2020-10-19 22:34:15,630:INFO:Preparing display monitor
2020-10-19 22:34:15,756:INFO:Initializing predict_model()
2020-10-19 22:34:15,756:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:15,757:INFO:Checking exceptions
2020-10-19 22:34:15,757:INFO:Preloading libraries
2020-10-19 22:34:15,757:INFO:Preparing display monitor
2020-10-19 22:34:15,882:INFO:Initializing predict_model()
2020-10-19 22:34:15,882:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:34:15,882:INFO:Checking exceptions
2020-10-19 22:34:15,882:INFO:Preloading libraries
2020-10-19 22:34:15,883:INFO:Preparing display monitor
2020-10-19 22:35:23,185:INFO:Initializing save_model()
2020-10-19 22:35:23,185:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, model_name=models/model_single_distance, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-19 22:35:23,185:INFO:Adding model into prep_pipe
2020-10-19 22:35:23,280:INFO:models/model_single_distance.pkl saved in current working directory
2020-10-19 22:35:23,284:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D868988>]],
         verbose=False)
2020-10-19 22:35:23,284:INFO:save_model() succesfully completed......................................
2020-10-19 22:35:37,979:INFO:Initializing save_model()
2020-10-19 22:35:37,979:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, model_name=models/single_distance, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-19 22:35:37,979:INFO:Adding model into prep_pipe
2020-10-19 22:35:38,076:INFO:models/single_distance.pkl saved in current working directory
2020-10-19 22:35:38,080:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D868988>]],
         verbose=False)
2020-10-19 22:35:38,080:INFO:save_model() succesfully completed......................................
2020-10-19 22:36:26,177:INFO:Initializing load_model()
2020-10-19 22:36:26,177:INFO:load_model(model_name=models/single_distance, platform=None, authentication=None, verbose=True)
2020-10-19 22:36:46,226:INFO:Initializing predict_model()
2020-10-19 22:36:46,226:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:46,226:INFO:Checking exceptions
2020-10-19 22:36:46,226:INFO:Preloading libraries
2020-10-19 22:36:46,226:INFO:Preparing display monitor
2020-10-19 22:36:46,368:INFO:Initializing predict_model()
2020-10-19 22:36:46,368:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:46,368:INFO:Checking exceptions
2020-10-19 22:36:46,368:INFO:Preloading libraries
2020-10-19 22:36:46,368:INFO:Preparing display monitor
2020-10-19 22:36:46,471:INFO:Initializing predict_model()
2020-10-19 22:36:46,471:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:46,472:INFO:Checking exceptions
2020-10-19 22:36:46,472:INFO:Preloading libraries
2020-10-19 22:36:46,472:INFO:Preparing display monitor
2020-10-19 22:36:46,595:INFO:Initializing predict_model()
2020-10-19 22:36:46,595:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:46,595:INFO:Checking exceptions
2020-10-19 22:36:46,595:INFO:Preloading libraries
2020-10-19 22:36:46,595:INFO:Preparing display monitor
2020-10-19 22:36:46,718:INFO:Initializing predict_model()
2020-10-19 22:36:46,719:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:46,719:INFO:Checking exceptions
2020-10-19 22:36:46,719:INFO:Preloading libraries
2020-10-19 22:36:46,719:INFO:Preparing display monitor
2020-10-19 22:36:46,843:INFO:Initializing predict_model()
2020-10-19 22:36:46,843:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:46,843:INFO:Checking exceptions
2020-10-19 22:36:46,843:INFO:Preloading libraries
2020-10-19 22:36:46,844:INFO:Preparing display monitor
2020-10-19 22:36:46,964:INFO:Initializing predict_model()
2020-10-19 22:36:46,964:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:46,965:INFO:Checking exceptions
2020-10-19 22:36:46,965:INFO:Preloading libraries
2020-10-19 22:36:46,965:INFO:Preparing display monitor
2020-10-19 22:36:47,087:INFO:Initializing predict_model()
2020-10-19 22:36:47,087:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:47,087:INFO:Checking exceptions
2020-10-19 22:36:47,087:INFO:Preloading libraries
2020-10-19 22:36:47,087:INFO:Preparing display monitor
2020-10-19 22:36:47,211:INFO:Initializing predict_model()
2020-10-19 22:36:47,211:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:47,211:INFO:Checking exceptions
2020-10-19 22:36:47,211:INFO:Preloading libraries
2020-10-19 22:36:47,211:INFO:Preparing display monitor
2020-10-19 22:36:47,331:INFO:Initializing predict_model()
2020-10-19 22:36:47,331:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:47,331:INFO:Checking exceptions
2020-10-19 22:36:47,331:INFO:Preloading libraries
2020-10-19 22:36:47,331:INFO:Preparing display monitor
2020-10-19 22:36:47,455:INFO:Initializing predict_model()
2020-10-19 22:36:47,455:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:47,455:INFO:Checking exceptions
2020-10-19 22:36:47,455:INFO:Preloading libraries
2020-10-19 22:36:47,455:INFO:Preparing display monitor
2020-10-19 22:36:47,572:INFO:Initializing predict_model()
2020-10-19 22:36:47,572:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:47,572:INFO:Checking exceptions
2020-10-19 22:36:47,572:INFO:Preloading libraries
2020-10-19 22:36:47,572:INFO:Preparing display monitor
2020-10-19 22:36:47,690:INFO:Initializing predict_model()
2020-10-19 22:36:47,690:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:47,690:INFO:Checking exceptions
2020-10-19 22:36:47,690:INFO:Preloading libraries
2020-10-19 22:36:47,690:INFO:Preparing display monitor
2020-10-19 22:36:47,807:INFO:Initializing predict_model()
2020-10-19 22:36:47,807:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:47,807:INFO:Checking exceptions
2020-10-19 22:36:47,807:INFO:Preloading libraries
2020-10-19 22:36:47,807:INFO:Preparing display monitor
2020-10-19 22:36:47,922:INFO:Initializing predict_model()
2020-10-19 22:36:47,922:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:47,922:INFO:Checking exceptions
2020-10-19 22:36:47,922:INFO:Preloading libraries
2020-10-19 22:36:47,922:INFO:Preparing display monitor
2020-10-19 22:36:48,038:INFO:Initializing predict_model()
2020-10-19 22:36:48,038:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:48,038:INFO:Checking exceptions
2020-10-19 22:36:48,038:INFO:Preloading libraries
2020-10-19 22:36:48,038:INFO:Preparing display monitor
2020-10-19 22:36:48,159:INFO:Initializing predict_model()
2020-10-19 22:36:48,159:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:48,160:INFO:Checking exceptions
2020-10-19 22:36:48,160:INFO:Preloading libraries
2020-10-19 22:36:48,160:INFO:Preparing display monitor
2020-10-19 22:36:48,280:INFO:Initializing predict_model()
2020-10-19 22:36:48,280:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:48,280:INFO:Checking exceptions
2020-10-19 22:36:48,280:INFO:Preloading libraries
2020-10-19 22:36:48,280:INFO:Preparing display monitor
2020-10-19 22:36:48,399:INFO:Initializing predict_model()
2020-10-19 22:36:48,399:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:48,399:INFO:Checking exceptions
2020-10-19 22:36:48,399:INFO:Preloading libraries
2020-10-19 22:36:48,399:INFO:Preparing display monitor
2020-10-19 22:36:48,521:INFO:Initializing predict_model()
2020-10-19 22:36:48,521:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:48,521:INFO:Checking exceptions
2020-10-19 22:36:48,521:INFO:Preloading libraries
2020-10-19 22:36:48,521:INFO:Preparing display monitor
2020-10-19 22:36:48,642:INFO:Initializing predict_model()
2020-10-19 22:36:48,642:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:48,642:INFO:Checking exceptions
2020-10-19 22:36:48,642:INFO:Preloading libraries
2020-10-19 22:36:48,642:INFO:Preparing display monitor
2020-10-19 22:36:48,752:INFO:Initializing predict_model()
2020-10-19 22:36:48,752:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:48,752:INFO:Checking exceptions
2020-10-19 22:36:48,752:INFO:Preloading libraries
2020-10-19 22:36:48,752:INFO:Preparing display monitor
2020-10-19 22:36:48,862:INFO:Initializing predict_model()
2020-10-19 22:36:48,862:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:48,862:INFO:Checking exceptions
2020-10-19 22:36:48,863:INFO:Preloading libraries
2020-10-19 22:36:48,863:INFO:Preparing display monitor
2020-10-19 22:36:48,976:INFO:Initializing predict_model()
2020-10-19 22:36:48,976:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:48,976:INFO:Checking exceptions
2020-10-19 22:36:48,976:INFO:Preloading libraries
2020-10-19 22:36:48,976:INFO:Preparing display monitor
2020-10-19 22:36:49,090:INFO:Initializing predict_model()
2020-10-19 22:36:49,090:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:49,090:INFO:Checking exceptions
2020-10-19 22:36:49,090:INFO:Preloading libraries
2020-10-19 22:36:49,090:INFO:Preparing display monitor
2020-10-19 22:36:49,207:INFO:Initializing predict_model()
2020-10-19 22:36:49,207:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:49,207:INFO:Checking exceptions
2020-10-19 22:36:49,207:INFO:Preloading libraries
2020-10-19 22:36:49,207:INFO:Preparing display monitor
2020-10-19 22:36:49,323:INFO:Initializing predict_model()
2020-10-19 22:36:49,323:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:49,323:INFO:Checking exceptions
2020-10-19 22:36:49,323:INFO:Preloading libraries
2020-10-19 22:36:49,323:INFO:Preparing display monitor
2020-10-19 22:36:49,437:INFO:Initializing predict_model()
2020-10-19 22:36:49,438:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:49,438:INFO:Checking exceptions
2020-10-19 22:36:49,438:INFO:Preloading libraries
2020-10-19 22:36:49,438:INFO:Preparing display monitor
2020-10-19 22:36:49,557:INFO:Initializing predict_model()
2020-10-19 22:36:49,557:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:49,558:INFO:Checking exceptions
2020-10-19 22:36:49,558:INFO:Preloading libraries
2020-10-19 22:36:49,558:INFO:Preparing display monitor
2020-10-19 22:36:49,680:INFO:Initializing predict_model()
2020-10-19 22:36:49,680:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:49,680:INFO:Checking exceptions
2020-10-19 22:36:49,680:INFO:Preloading libraries
2020-10-19 22:36:49,680:INFO:Preparing display monitor
2020-10-19 22:36:49,798:INFO:Initializing predict_model()
2020-10-19 22:36:49,798:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:49,798:INFO:Checking exceptions
2020-10-19 22:36:49,798:INFO:Preloading libraries
2020-10-19 22:36:49,798:INFO:Preparing display monitor
2020-10-19 22:36:49,918:INFO:Initializing predict_model()
2020-10-19 22:36:49,918:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:49,918:INFO:Checking exceptions
2020-10-19 22:36:49,918:INFO:Preloading libraries
2020-10-19 22:36:49,918:INFO:Preparing display monitor
2020-10-19 22:36:50,041:INFO:Initializing predict_model()
2020-10-19 22:36:50,041:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:50,041:INFO:Checking exceptions
2020-10-19 22:36:50,041:INFO:Preloading libraries
2020-10-19 22:36:50,041:INFO:Preparing display monitor
2020-10-19 22:36:50,159:INFO:Initializing predict_model()
2020-10-19 22:36:50,159:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:50,160:INFO:Checking exceptions
2020-10-19 22:36:50,160:INFO:Preloading libraries
2020-10-19 22:36:50,160:INFO:Preparing display monitor
2020-10-19 22:36:50,276:INFO:Initializing predict_model()
2020-10-19 22:36:50,276:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:50,276:INFO:Checking exceptions
2020-10-19 22:36:50,276:INFO:Preloading libraries
2020-10-19 22:36:50,276:INFO:Preparing display monitor
2020-10-19 22:36:50,392:INFO:Initializing predict_model()
2020-10-19 22:36:50,393:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:50,393:INFO:Checking exceptions
2020-10-19 22:36:50,393:INFO:Preloading libraries
2020-10-19 22:36:50,393:INFO:Preparing display monitor
2020-10-19 22:36:50,508:INFO:Initializing predict_model()
2020-10-19 22:36:50,508:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:50,508:INFO:Checking exceptions
2020-10-19 22:36:50,508:INFO:Preloading libraries
2020-10-19 22:36:50,508:INFO:Preparing display monitor
2020-10-19 22:36:50,623:INFO:Initializing predict_model()
2020-10-19 22:36:50,624:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:50,624:INFO:Checking exceptions
2020-10-19 22:36:50,624:INFO:Preloading libraries
2020-10-19 22:36:50,624:INFO:Preparing display monitor
2020-10-19 22:36:50,739:INFO:Initializing predict_model()
2020-10-19 22:36:50,739:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:50,739:INFO:Checking exceptions
2020-10-19 22:36:50,739:INFO:Preloading libraries
2020-10-19 22:36:50,739:INFO:Preparing display monitor
2020-10-19 22:36:50,854:INFO:Initializing predict_model()
2020-10-19 22:36:50,854:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-19 22:36:50,854:INFO:Checking exceptions
2020-10-19 22:36:50,854:INFO:Preloading libraries
2020-10-19 22:36:50,854:INFO:Preparing display monitor
2020-10-19 22:37:40,979:INFO:Initializing save_model()
2020-10-19 22:37:40,979:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, model_name=results/models/single_distance, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-19 22:37:40,979:INFO:Adding model into prep_pipe
2020-10-19 22:37:41,082:INFO:results/models/single_distance.pkl saved in current working directory
2020-10-19 22:37:41,086:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D868988>]],
         verbose=False)
2020-10-19 22:37:41,086:INFO:save_model() succesfully completed......................................
2020-10-19 22:38:37,021:INFO:Initializing save_model()
2020-10-19 22:38:37,021:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, model_name=results/single_distance/model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-19 22:38:37,021:INFO:Adding model into prep_pipe
2020-10-19 22:39:22,974:INFO:Initializing save_model()
2020-10-19 22:39:22,974:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, model_name=results/single_distance/model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-19 22:39:22,975:INFO:Adding model into prep_pipe
2020-10-19 22:39:35,400:INFO:Initializing save_model()
2020-10-19 22:39:35,400:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, model_name=results/single_distance/model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-19 22:39:35,400:INFO:Adding model into prep_pipe
2020-10-19 22:40:57,774:INFO:Initializing save_model()
2020-10-19 22:40:57,775:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, model_name=results/single_distance/model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-19 22:40:57,775:INFO:Adding model into prep_pipe
2020-10-19 22:40:57,873:INFO:results/single_distance/model.pkl saved in current working directory
2020-10-19 22:40:57,877:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D868988>]],
         verbose=False)
2020-10-19 22:40:57,877:INFO:save_model() succesfully completed......................................
2020-10-20 00:06:46,726:INFO:Initializing save_model()
2020-10-20 00:06:46,727:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, model_name=./results/single_r/model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-20 00:06:46,727:INFO:Adding model into prep_pipe
2020-10-20 00:06:46,826:INFO:./results/single_r/model.pkl saved in current working directory
2020-10-20 00:06:46,830:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D868988>]],
         verbose=False)
2020-10-20 00:06:46,830:INFO:save_model() succesfully completed......................................
2020-10-20 00:07:09,749:INFO:Initializing predict_model()
2020-10-20 00:07:09,749:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:09,749:INFO:Checking exceptions
2020-10-20 00:07:09,749:INFO:Preloading libraries
2020-10-20 00:07:09,749:INFO:Preparing display monitor
2020-10-20 00:07:09,946:INFO:Initializing predict_model()
2020-10-20 00:07:09,946:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:09,946:INFO:Checking exceptions
2020-10-20 00:07:09,946:INFO:Preloading libraries
2020-10-20 00:07:09,946:INFO:Preparing display monitor
2020-10-20 00:07:10,119:INFO:Initializing predict_model()
2020-10-20 00:07:10,119:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:10,120:INFO:Checking exceptions
2020-10-20 00:07:10,120:INFO:Preloading libraries
2020-10-20 00:07:10,120:INFO:Preparing display monitor
2020-10-20 00:07:10,292:INFO:Initializing predict_model()
2020-10-20 00:07:10,292:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:10,292:INFO:Checking exceptions
2020-10-20 00:07:10,292:INFO:Preloading libraries
2020-10-20 00:07:10,292:INFO:Preparing display monitor
2020-10-20 00:07:10,448:INFO:Initializing predict_model()
2020-10-20 00:07:10,448:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:10,448:INFO:Checking exceptions
2020-10-20 00:07:10,448:INFO:Preloading libraries
2020-10-20 00:07:10,448:INFO:Preparing display monitor
2020-10-20 00:07:10,627:INFO:Initializing predict_model()
2020-10-20 00:07:10,627:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:10,627:INFO:Checking exceptions
2020-10-20 00:07:10,627:INFO:Preloading libraries
2020-10-20 00:07:10,627:INFO:Preparing display monitor
2020-10-20 00:07:10,797:INFO:Initializing predict_model()
2020-10-20 00:07:10,797:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:10,797:INFO:Checking exceptions
2020-10-20 00:07:10,797:INFO:Preloading libraries
2020-10-20 00:07:10,797:INFO:Preparing display monitor
2020-10-20 00:07:10,974:INFO:Initializing predict_model()
2020-10-20 00:07:10,974:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:10,974:INFO:Checking exceptions
2020-10-20 00:07:10,975:INFO:Preloading libraries
2020-10-20 00:07:10,975:INFO:Preparing display monitor
2020-10-20 00:07:11,149:INFO:Initializing predict_model()
2020-10-20 00:07:11,149:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:11,150:INFO:Checking exceptions
2020-10-20 00:07:11,150:INFO:Preloading libraries
2020-10-20 00:07:11,150:INFO:Preparing display monitor
2020-10-20 00:07:11,329:INFO:Initializing predict_model()
2020-10-20 00:07:11,329:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:11,329:INFO:Checking exceptions
2020-10-20 00:07:11,329:INFO:Preloading libraries
2020-10-20 00:07:11,330:INFO:Preparing display monitor
2020-10-20 00:07:11,503:INFO:Initializing predict_model()
2020-10-20 00:07:11,503:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:11,503:INFO:Checking exceptions
2020-10-20 00:07:11,503:INFO:Preloading libraries
2020-10-20 00:07:11,503:INFO:Preparing display monitor
2020-10-20 00:07:11,681:INFO:Initializing predict_model()
2020-10-20 00:07:11,681:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:11,681:INFO:Checking exceptions
2020-10-20 00:07:11,681:INFO:Preloading libraries
2020-10-20 00:07:11,681:INFO:Preparing display monitor
2020-10-20 00:07:11,852:INFO:Initializing predict_model()
2020-10-20 00:07:11,853:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:11,853:INFO:Checking exceptions
2020-10-20 00:07:11,853:INFO:Preloading libraries
2020-10-20 00:07:11,853:INFO:Preparing display monitor
2020-10-20 00:07:12,027:INFO:Initializing predict_model()
2020-10-20 00:07:12,027:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:12,027:INFO:Checking exceptions
2020-10-20 00:07:12,027:INFO:Preloading libraries
2020-10-20 00:07:12,027:INFO:Preparing display monitor
2020-10-20 00:07:12,200:INFO:Initializing predict_model()
2020-10-20 00:07:12,200:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:12,200:INFO:Checking exceptions
2020-10-20 00:07:12,200:INFO:Preloading libraries
2020-10-20 00:07:12,200:INFO:Preparing display monitor
2020-10-20 00:07:12,369:INFO:Initializing predict_model()
2020-10-20 00:07:12,369:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:12,369:INFO:Checking exceptions
2020-10-20 00:07:12,369:INFO:Preloading libraries
2020-10-20 00:07:12,370:INFO:Preparing display monitor
2020-10-20 00:07:12,539:INFO:Initializing predict_model()
2020-10-20 00:07:12,539:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:12,539:INFO:Checking exceptions
2020-10-20 00:07:12,539:INFO:Preloading libraries
2020-10-20 00:07:12,539:INFO:Preparing display monitor
2020-10-20 00:07:12,719:INFO:Initializing predict_model()
2020-10-20 00:07:12,719:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:12,719:INFO:Checking exceptions
2020-10-20 00:07:12,719:INFO:Preloading libraries
2020-10-20 00:07:12,719:INFO:Preparing display monitor
2020-10-20 00:07:12,891:INFO:Initializing predict_model()
2020-10-20 00:07:12,891:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:12,891:INFO:Checking exceptions
2020-10-20 00:07:12,892:INFO:Preloading libraries
2020-10-20 00:07:12,892:INFO:Preparing display monitor
2020-10-20 00:07:13,073:INFO:Initializing predict_model()
2020-10-20 00:07:13,073:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:13,073:INFO:Checking exceptions
2020-10-20 00:07:13,073:INFO:Preloading libraries
2020-10-20 00:07:13,073:INFO:Preparing display monitor
2020-10-20 00:07:13,241:INFO:Initializing predict_model()
2020-10-20 00:07:13,241:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:13,241:INFO:Checking exceptions
2020-10-20 00:07:13,241:INFO:Preloading libraries
2020-10-20 00:07:13,241:INFO:Preparing display monitor
2020-10-20 00:07:13,412:INFO:Initializing predict_model()
2020-10-20 00:07:13,412:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:13,412:INFO:Checking exceptions
2020-10-20 00:07:13,412:INFO:Preloading libraries
2020-10-20 00:07:13,412:INFO:Preparing display monitor
2020-10-20 00:07:13,587:INFO:Initializing predict_model()
2020-10-20 00:07:13,587:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:13,587:INFO:Checking exceptions
2020-10-20 00:07:13,587:INFO:Preloading libraries
2020-10-20 00:07:13,587:INFO:Preparing display monitor
2020-10-20 00:07:13,755:INFO:Initializing predict_model()
2020-10-20 00:07:13,755:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:13,755:INFO:Checking exceptions
2020-10-20 00:07:13,755:INFO:Preloading libraries
2020-10-20 00:07:13,755:INFO:Preparing display monitor
2020-10-20 00:07:13,924:INFO:Initializing predict_model()
2020-10-20 00:07:13,924:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:13,924:INFO:Checking exceptions
2020-10-20 00:07:13,924:INFO:Preloading libraries
2020-10-20 00:07:13,924:INFO:Preparing display monitor
2020-10-20 00:07:14,106:INFO:Initializing predict_model()
2020-10-20 00:07:14,106:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:14,106:INFO:Checking exceptions
2020-10-20 00:07:14,106:INFO:Preloading libraries
2020-10-20 00:07:14,106:INFO:Preparing display monitor
2020-10-20 00:07:14,278:INFO:Initializing predict_model()
2020-10-20 00:07:14,278:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:14,278:INFO:Checking exceptions
2020-10-20 00:07:14,278:INFO:Preloading libraries
2020-10-20 00:07:14,278:INFO:Preparing display monitor
2020-10-20 00:07:14,455:INFO:Initializing predict_model()
2020-10-20 00:07:14,455:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:14,456:INFO:Checking exceptions
2020-10-20 00:07:14,456:INFO:Preloading libraries
2020-10-20 00:07:14,456:INFO:Preparing display monitor
2020-10-20 00:07:14,631:INFO:Initializing predict_model()
2020-10-20 00:07:14,631:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:14,631:INFO:Checking exceptions
2020-10-20 00:07:14,631:INFO:Preloading libraries
2020-10-20 00:07:14,631:INFO:Preparing display monitor
2020-10-20 00:07:14,800:INFO:Initializing predict_model()
2020-10-20 00:07:14,800:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:14,800:INFO:Checking exceptions
2020-10-20 00:07:14,800:INFO:Preloading libraries
2020-10-20 00:07:14,801:INFO:Preparing display monitor
2020-10-20 00:07:14,970:INFO:Initializing predict_model()
2020-10-20 00:07:14,970:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:14,970:INFO:Checking exceptions
2020-10-20 00:07:14,970:INFO:Preloading libraries
2020-10-20 00:07:14,970:INFO:Preparing display monitor
2020-10-20 00:07:15,139:INFO:Initializing predict_model()
2020-10-20 00:07:15,139:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:15,139:INFO:Checking exceptions
2020-10-20 00:07:15,139:INFO:Preloading libraries
2020-10-20 00:07:15,139:INFO:Preparing display monitor
2020-10-20 00:07:15,310:INFO:Initializing predict_model()
2020-10-20 00:07:15,310:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:15,310:INFO:Checking exceptions
2020-10-20 00:07:15,310:INFO:Preloading libraries
2020-10-20 00:07:15,310:INFO:Preparing display monitor
2020-10-20 00:07:15,490:INFO:Initializing predict_model()
2020-10-20 00:07:15,491:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:15,491:INFO:Checking exceptions
2020-10-20 00:07:15,491:INFO:Preloading libraries
2020-10-20 00:07:15,491:INFO:Preparing display monitor
2020-10-20 00:07:15,665:INFO:Initializing predict_model()
2020-10-20 00:07:15,665:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:15,665:INFO:Checking exceptions
2020-10-20 00:07:15,665:INFO:Preloading libraries
2020-10-20 00:07:15,665:INFO:Preparing display monitor
2020-10-20 00:07:15,843:INFO:Initializing predict_model()
2020-10-20 00:07:15,843:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:15,843:INFO:Checking exceptions
2020-10-20 00:07:15,843:INFO:Preloading libraries
2020-10-20 00:07:15,843:INFO:Preparing display monitor
2020-10-20 00:07:16,016:INFO:Initializing predict_model()
2020-10-20 00:07:16,016:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:16,017:INFO:Checking exceptions
2020-10-20 00:07:16,017:INFO:Preloading libraries
2020-10-20 00:07:16,017:INFO:Preparing display monitor
2020-10-20 00:07:16,185:INFO:Initializing predict_model()
2020-10-20 00:07:16,185:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:16,185:INFO:Checking exceptions
2020-10-20 00:07:16,185:INFO:Preloading libraries
2020-10-20 00:07:16,186:INFO:Preparing display monitor
2020-10-20 00:07:16,354:INFO:Initializing predict_model()
2020-10-20 00:07:16,354:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:16,354:INFO:Checking exceptions
2020-10-20 00:07:16,354:INFO:Preloading libraries
2020-10-20 00:07:16,354:INFO:Preparing display monitor
2020-10-20 00:07:16,529:INFO:Initializing predict_model()
2020-10-20 00:07:16,529:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002963D85EC08>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:16,529:INFO:Checking exceptions
2020-10-20 00:07:16,529:INFO:Preloading libraries
2020-10-20 00:07:16,529:INFO:Preparing display monitor
2020-10-20 00:07:17,444:INFO:Initializing predict_model()
2020-10-20 00:07:17,445:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:17,445:INFO:Checking exceptions
2020-10-20 00:07:17,445:INFO:Preloading libraries
2020-10-20 00:07:17,445:INFO:Preparing display monitor
2020-10-20 00:07:17,630:INFO:Initializing predict_model()
2020-10-20 00:07:17,630:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:17,631:INFO:Checking exceptions
2020-10-20 00:07:17,631:INFO:Preloading libraries
2020-10-20 00:07:17,631:INFO:Preparing display monitor
2020-10-20 00:07:17,815:INFO:Initializing predict_model()
2020-10-20 00:07:17,815:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:17,815:INFO:Checking exceptions
2020-10-20 00:07:17,815:INFO:Preloading libraries
2020-10-20 00:07:17,815:INFO:Preparing display monitor
2020-10-20 00:07:17,997:INFO:Initializing predict_model()
2020-10-20 00:07:17,997:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:17,998:INFO:Checking exceptions
2020-10-20 00:07:17,998:INFO:Preloading libraries
2020-10-20 00:07:17,998:INFO:Preparing display monitor
2020-10-20 00:07:18,179:INFO:Initializing predict_model()
2020-10-20 00:07:18,179:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:18,179:INFO:Checking exceptions
2020-10-20 00:07:18,179:INFO:Preloading libraries
2020-10-20 00:07:18,179:INFO:Preparing display monitor
2020-10-20 00:07:18,369:INFO:Initializing predict_model()
2020-10-20 00:07:18,369:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:18,369:INFO:Checking exceptions
2020-10-20 00:07:18,369:INFO:Preloading libraries
2020-10-20 00:07:18,369:INFO:Preparing display monitor
2020-10-20 00:07:18,552:INFO:Initializing predict_model()
2020-10-20 00:07:18,552:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:18,552:INFO:Checking exceptions
2020-10-20 00:07:18,552:INFO:Preloading libraries
2020-10-20 00:07:18,553:INFO:Preparing display monitor
2020-10-20 00:07:18,744:INFO:Initializing predict_model()
2020-10-20 00:07:18,744:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:18,745:INFO:Checking exceptions
2020-10-20 00:07:18,745:INFO:Preloading libraries
2020-10-20 00:07:18,745:INFO:Preparing display monitor
2020-10-20 00:07:18,924:INFO:Initializing predict_model()
2020-10-20 00:07:18,924:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:18,924:INFO:Checking exceptions
2020-10-20 00:07:18,924:INFO:Preloading libraries
2020-10-20 00:07:18,925:INFO:Preparing display monitor
2020-10-20 00:07:19,102:INFO:Initializing predict_model()
2020-10-20 00:07:19,102:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:19,102:INFO:Checking exceptions
2020-10-20 00:07:19,102:INFO:Preloading libraries
2020-10-20 00:07:19,103:INFO:Preparing display monitor
2020-10-20 00:07:19,282:INFO:Initializing predict_model()
2020-10-20 00:07:19,282:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:19,282:INFO:Checking exceptions
2020-10-20 00:07:19,282:INFO:Preloading libraries
2020-10-20 00:07:19,282:INFO:Preparing display monitor
2020-10-20 00:07:19,460:INFO:Initializing predict_model()
2020-10-20 00:07:19,460:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:19,460:INFO:Checking exceptions
2020-10-20 00:07:19,460:INFO:Preloading libraries
2020-10-20 00:07:19,460:INFO:Preparing display monitor
2020-10-20 00:07:19,644:INFO:Initializing predict_model()
2020-10-20 00:07:19,644:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:19,644:INFO:Checking exceptions
2020-10-20 00:07:19,644:INFO:Preloading libraries
2020-10-20 00:07:19,644:INFO:Preparing display monitor
2020-10-20 00:07:19,837:INFO:Initializing predict_model()
2020-10-20 00:07:19,837:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:19,837:INFO:Checking exceptions
2020-10-20 00:07:19,837:INFO:Preloading libraries
2020-10-20 00:07:19,837:INFO:Preparing display monitor
2020-10-20 00:07:20,024:INFO:Initializing predict_model()
2020-10-20 00:07:20,024:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:20,024:INFO:Checking exceptions
2020-10-20 00:07:20,024:INFO:Preloading libraries
2020-10-20 00:07:20,024:INFO:Preparing display monitor
2020-10-20 00:07:20,211:INFO:Initializing predict_model()
2020-10-20 00:07:20,211:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:20,211:INFO:Checking exceptions
2020-10-20 00:07:20,211:INFO:Preloading libraries
2020-10-20 00:07:20,211:INFO:Preparing display monitor
2020-10-20 00:07:20,390:INFO:Initializing predict_model()
2020-10-20 00:07:20,390:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:20,390:INFO:Checking exceptions
2020-10-20 00:07:20,390:INFO:Preloading libraries
2020-10-20 00:07:20,390:INFO:Preparing display monitor
2020-10-20 00:07:20,568:INFO:Initializing predict_model()
2020-10-20 00:07:20,568:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:20,568:INFO:Checking exceptions
2020-10-20 00:07:20,568:INFO:Preloading libraries
2020-10-20 00:07:20,568:INFO:Preparing display monitor
2020-10-20 00:07:20,743:INFO:Initializing predict_model()
2020-10-20 00:07:20,743:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:20,743:INFO:Checking exceptions
2020-10-20 00:07:20,743:INFO:Preloading libraries
2020-10-20 00:07:20,743:INFO:Preparing display monitor
2020-10-20 00:07:20,913:INFO:Initializing predict_model()
2020-10-20 00:07:20,913:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:20,913:INFO:Checking exceptions
2020-10-20 00:07:20,913:INFO:Preloading libraries
2020-10-20 00:07:20,914:INFO:Preparing display monitor
2020-10-20 00:07:21,099:INFO:Initializing predict_model()
2020-10-20 00:07:21,100:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:21,100:INFO:Checking exceptions
2020-10-20 00:07:21,100:INFO:Preloading libraries
2020-10-20 00:07:21,100:INFO:Preparing display monitor
2020-10-20 00:07:21,286:INFO:Initializing predict_model()
2020-10-20 00:07:21,286:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:21,286:INFO:Checking exceptions
2020-10-20 00:07:21,286:INFO:Preloading libraries
2020-10-20 00:07:21,287:INFO:Preparing display monitor
2020-10-20 00:07:21,476:INFO:Initializing predict_model()
2020-10-20 00:07:21,476:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:21,476:INFO:Checking exceptions
2020-10-20 00:07:21,476:INFO:Preloading libraries
2020-10-20 00:07:21,477:INFO:Preparing display monitor
2020-10-20 00:07:21,664:INFO:Initializing predict_model()
2020-10-20 00:07:21,664:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:21,664:INFO:Checking exceptions
2020-10-20 00:07:21,664:INFO:Preloading libraries
2020-10-20 00:07:21,664:INFO:Preparing display monitor
2020-10-20 00:07:21,844:INFO:Initializing predict_model()
2020-10-20 00:07:21,844:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:21,845:INFO:Checking exceptions
2020-10-20 00:07:21,845:INFO:Preloading libraries
2020-10-20 00:07:21,845:INFO:Preparing display monitor
2020-10-20 00:07:22,031:INFO:Initializing predict_model()
2020-10-20 00:07:22,032:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:22,032:INFO:Checking exceptions
2020-10-20 00:07:22,032:INFO:Preloading libraries
2020-10-20 00:07:22,032:INFO:Preparing display monitor
2020-10-20 00:07:22,211:INFO:Initializing predict_model()
2020-10-20 00:07:22,211:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:22,211:INFO:Checking exceptions
2020-10-20 00:07:22,211:INFO:Preloading libraries
2020-10-20 00:07:22,211:INFO:Preparing display monitor
2020-10-20 00:07:22,390:INFO:Initializing predict_model()
2020-10-20 00:07:22,390:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:22,390:INFO:Checking exceptions
2020-10-20 00:07:22,390:INFO:Preloading libraries
2020-10-20 00:07:22,390:INFO:Preparing display monitor
2020-10-20 00:07:22,582:INFO:Initializing predict_model()
2020-10-20 00:07:22,582:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:22,582:INFO:Checking exceptions
2020-10-20 00:07:22,583:INFO:Preloading libraries
2020-10-20 00:07:22,583:INFO:Preparing display monitor
2020-10-20 00:07:22,764:INFO:Initializing predict_model()
2020-10-20 00:07:22,764:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:22,764:INFO:Checking exceptions
2020-10-20 00:07:22,764:INFO:Preloading libraries
2020-10-20 00:07:22,764:INFO:Preparing display monitor
2020-10-20 00:07:22,952:INFO:Initializing predict_model()
2020-10-20 00:07:22,952:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:22,952:INFO:Checking exceptions
2020-10-20 00:07:22,952:INFO:Preloading libraries
2020-10-20 00:07:22,952:INFO:Preparing display monitor
2020-10-20 00:07:23,134:INFO:Initializing predict_model()
2020-10-20 00:07:23,135:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:23,135:INFO:Checking exceptions
2020-10-20 00:07:23,135:INFO:Preloading libraries
2020-10-20 00:07:23,135:INFO:Preparing display monitor
2020-10-20 00:07:23,312:INFO:Initializing predict_model()
2020-10-20 00:07:23,313:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:23,313:INFO:Checking exceptions
2020-10-20 00:07:23,313:INFO:Preloading libraries
2020-10-20 00:07:23,313:INFO:Preparing display monitor
2020-10-20 00:07:23,494:INFO:Initializing predict_model()
2020-10-20 00:07:23,494:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:23,494:INFO:Checking exceptions
2020-10-20 00:07:23,494:INFO:Preloading libraries
2020-10-20 00:07:23,494:INFO:Preparing display monitor
2020-10-20 00:07:23,673:INFO:Initializing predict_model()
2020-10-20 00:07:23,673:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:23,673:INFO:Checking exceptions
2020-10-20 00:07:23,674:INFO:Preloading libraries
2020-10-20 00:07:23,674:INFO:Preparing display monitor
2020-10-20 00:07:23,887:INFO:Initializing predict_model()
2020-10-20 00:07:23,887:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:23,887:INFO:Checking exceptions
2020-10-20 00:07:23,888:INFO:Preloading libraries
2020-10-20 00:07:23,888:INFO:Preparing display monitor
2020-10-20 00:07:24,129:INFO:Initializing predict_model()
2020-10-20 00:07:24,129:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:24,129:INFO:Checking exceptions
2020-10-20 00:07:24,129:INFO:Preloading libraries
2020-10-20 00:07:24,129:INFO:Preparing display monitor
2020-10-20 00:07:24,324:INFO:Initializing predict_model()
2020-10-20 00:07:24,324:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:24,324:INFO:Checking exceptions
2020-10-20 00:07:24,324:INFO:Preloading libraries
2020-10-20 00:07:24,324:INFO:Preparing display monitor
2020-10-20 00:07:24,511:INFO:Initializing predict_model()
2020-10-20 00:07:24,511:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:24,512:INFO:Checking exceptions
2020-10-20 00:07:24,512:INFO:Preloading libraries
2020-10-20 00:07:24,512:INFO:Preparing display monitor
2020-10-20 00:07:24,698:INFO:Initializing predict_model()
2020-10-20 00:07:24,698:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:07:24,699:INFO:Checking exceptions
2020-10-20 00:07:24,699:INFO:Preloading libraries
2020-10-20 00:07:24,699:INFO:Preparing display monitor
2020-10-20 00:15:40,269:INFO:Initializing evaluate_model()
2020-10-20 00:15:40,269:INFO:evaluate_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, fold=None, fit_kwargs=None, feature_name=None, groups=None)
2020-10-20 00:15:40,286:INFO:Initializing plot_model()
2020-10-20 00:15:40,286:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=0, shuffle=False), verbose=True, display=None, estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2020-10-20 00:15:40,286:INFO:Checking exceptions
2020-10-20 00:15:40,287:INFO:Preparing display monitor
2020-10-20 00:15:40,292:INFO:Preloading libraries
2020-10-20 00:15:40,306:INFO:Copying training dataset
2020-10-20 00:15:40,312:INFO:Copying test dataset
2020-10-20 00:15:40,313:INFO:Plot type: parameter
2020-10-20 00:15:40,366:INFO:Visual Rendered Successfully
2020-10-20 00:15:40,585:INFO:plot_model() succesfully completed......................................
2020-10-20 00:16:13,189:INFO:Initializing predict_model()
2020-10-20 00:16:13,190:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:16:13,190:INFO:Checking exceptions
2020-10-20 00:16:13,190:INFO:Preloading libraries
2020-10-20 00:16:13,190:INFO:Preparing display monitor
2020-10-20 00:16:21,753:INFO:Initializing predict_model()
2020-10-20 00:16:21,753:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:16:21,753:INFO:Checking exceptions
2020-10-20 00:16:21,753:INFO:Preloading libraries
2020-10-20 00:16:21,754:INFO:Preparing display monitor
2020-10-20 00:23:56,153:INFO:Initializing predict_model()
2020-10-20 00:23:56,153:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:56,154:INFO:Checking exceptions
2020-10-20 00:23:56,154:INFO:Preloading libraries
2020-10-20 00:23:56,154:INFO:Preparing display monitor
2020-10-20 00:23:56,406:INFO:Initializing predict_model()
2020-10-20 00:23:56,407:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:56,407:INFO:Checking exceptions
2020-10-20 00:23:56,407:INFO:Preloading libraries
2020-10-20 00:23:56,407:INFO:Preparing display monitor
2020-10-20 00:23:56,586:INFO:Initializing predict_model()
2020-10-20 00:23:56,586:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:56,586:INFO:Checking exceptions
2020-10-20 00:23:56,586:INFO:Preloading libraries
2020-10-20 00:23:56,586:INFO:Preparing display monitor
2020-10-20 00:23:56,771:INFO:Initializing predict_model()
2020-10-20 00:23:56,771:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:56,771:INFO:Checking exceptions
2020-10-20 00:23:56,771:INFO:Preloading libraries
2020-10-20 00:23:56,771:INFO:Preparing display monitor
2020-10-20 00:23:56,962:INFO:Initializing predict_model()
2020-10-20 00:23:56,962:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:56,963:INFO:Checking exceptions
2020-10-20 00:23:56,963:INFO:Preloading libraries
2020-10-20 00:23:56,963:INFO:Preparing display monitor
2020-10-20 00:23:57,161:INFO:Initializing predict_model()
2020-10-20 00:23:57,161:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:57,161:INFO:Checking exceptions
2020-10-20 00:23:57,162:INFO:Preloading libraries
2020-10-20 00:23:57,162:INFO:Preparing display monitor
2020-10-20 00:23:57,357:INFO:Initializing predict_model()
2020-10-20 00:23:57,357:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:57,357:INFO:Checking exceptions
2020-10-20 00:23:57,357:INFO:Preloading libraries
2020-10-20 00:23:57,357:INFO:Preparing display monitor
2020-10-20 00:23:57,549:INFO:Initializing predict_model()
2020-10-20 00:23:57,549:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:57,550:INFO:Checking exceptions
2020-10-20 00:23:57,550:INFO:Preloading libraries
2020-10-20 00:23:57,550:INFO:Preparing display monitor
2020-10-20 00:23:57,735:INFO:Initializing predict_model()
2020-10-20 00:23:57,735:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:57,735:INFO:Checking exceptions
2020-10-20 00:23:57,735:INFO:Preloading libraries
2020-10-20 00:23:57,735:INFO:Preparing display monitor
2020-10-20 00:23:57,917:INFO:Initializing predict_model()
2020-10-20 00:23:57,917:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:57,918:INFO:Checking exceptions
2020-10-20 00:23:57,918:INFO:Preloading libraries
2020-10-20 00:23:57,918:INFO:Preparing display monitor
2020-10-20 00:23:58,102:INFO:Initializing predict_model()
2020-10-20 00:23:58,102:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:58,102:INFO:Checking exceptions
2020-10-20 00:23:58,102:INFO:Preloading libraries
2020-10-20 00:23:58,102:INFO:Preparing display monitor
2020-10-20 00:23:58,288:INFO:Initializing predict_model()
2020-10-20 00:23:58,288:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:58,288:INFO:Checking exceptions
2020-10-20 00:23:58,288:INFO:Preloading libraries
2020-10-20 00:23:58,288:INFO:Preparing display monitor
2020-10-20 00:23:58,478:INFO:Initializing predict_model()
2020-10-20 00:23:58,478:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:58,479:INFO:Checking exceptions
2020-10-20 00:23:58,479:INFO:Preloading libraries
2020-10-20 00:23:58,479:INFO:Preparing display monitor
2020-10-20 00:23:58,665:INFO:Initializing predict_model()
2020-10-20 00:23:58,665:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:58,665:INFO:Checking exceptions
2020-10-20 00:23:58,665:INFO:Preloading libraries
2020-10-20 00:23:58,665:INFO:Preparing display monitor
2020-10-20 00:23:58,858:INFO:Initializing predict_model()
2020-10-20 00:23:58,858:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:58,858:INFO:Checking exceptions
2020-10-20 00:23:58,858:INFO:Preloading libraries
2020-10-20 00:23:58,858:INFO:Preparing display monitor
2020-10-20 00:23:59,041:INFO:Initializing predict_model()
2020-10-20 00:23:59,041:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:59,041:INFO:Checking exceptions
2020-10-20 00:23:59,041:INFO:Preloading libraries
2020-10-20 00:23:59,041:INFO:Preparing display monitor
2020-10-20 00:23:59,200:INFO:Initializing predict_model()
2020-10-20 00:23:59,200:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:59,201:INFO:Checking exceptions
2020-10-20 00:23:59,201:INFO:Preloading libraries
2020-10-20 00:23:59,201:INFO:Preparing display monitor
2020-10-20 00:23:59,393:INFO:Initializing predict_model()
2020-10-20 00:23:59,393:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:59,393:INFO:Checking exceptions
2020-10-20 00:23:59,393:INFO:Preloading libraries
2020-10-20 00:23:59,393:INFO:Preparing display monitor
2020-10-20 00:23:59,575:INFO:Initializing predict_model()
2020-10-20 00:23:59,575:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:59,575:INFO:Checking exceptions
2020-10-20 00:23:59,575:INFO:Preloading libraries
2020-10-20 00:23:59,575:INFO:Preparing display monitor
2020-10-20 00:23:59,757:INFO:Initializing predict_model()
2020-10-20 00:23:59,757:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:59,757:INFO:Checking exceptions
2020-10-20 00:23:59,757:INFO:Preloading libraries
2020-10-20 00:23:59,757:INFO:Preparing display monitor
2020-10-20 00:23:59,951:INFO:Initializing predict_model()
2020-10-20 00:23:59,951:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:23:59,951:INFO:Checking exceptions
2020-10-20 00:23:59,951:INFO:Preloading libraries
2020-10-20 00:23:59,952:INFO:Preparing display monitor
2020-10-20 00:24:00,139:INFO:Initializing predict_model()
2020-10-20 00:24:00,139:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:00,139:INFO:Checking exceptions
2020-10-20 00:24:00,139:INFO:Preloading libraries
2020-10-20 00:24:00,139:INFO:Preparing display monitor
2020-10-20 00:24:00,332:INFO:Initializing predict_model()
2020-10-20 00:24:00,332:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:00,332:INFO:Checking exceptions
2020-10-20 00:24:00,332:INFO:Preloading libraries
2020-10-20 00:24:00,332:INFO:Preparing display monitor
2020-10-20 00:24:00,518:INFO:Initializing predict_model()
2020-10-20 00:24:00,518:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:00,518:INFO:Checking exceptions
2020-10-20 00:24:00,518:INFO:Preloading libraries
2020-10-20 00:24:00,518:INFO:Preparing display monitor
2020-10-20 00:24:00,701:INFO:Initializing predict_model()
2020-10-20 00:24:00,701:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:00,701:INFO:Checking exceptions
2020-10-20 00:24:00,701:INFO:Preloading libraries
2020-10-20 00:24:00,701:INFO:Preparing display monitor
2020-10-20 00:24:00,881:INFO:Initializing predict_model()
2020-10-20 00:24:00,881:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:00,882:INFO:Checking exceptions
2020-10-20 00:24:00,882:INFO:Preloading libraries
2020-10-20 00:24:00,882:INFO:Preparing display monitor
2020-10-20 00:24:01,069:INFO:Initializing predict_model()
2020-10-20 00:24:01,069:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:01,069:INFO:Checking exceptions
2020-10-20 00:24:01,069:INFO:Preloading libraries
2020-10-20 00:24:01,069:INFO:Preparing display monitor
2020-10-20 00:24:01,256:INFO:Initializing predict_model()
2020-10-20 00:24:01,256:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:01,256:INFO:Checking exceptions
2020-10-20 00:24:01,256:INFO:Preloading libraries
2020-10-20 00:24:01,256:INFO:Preparing display monitor
2020-10-20 00:24:01,443:INFO:Initializing predict_model()
2020-10-20 00:24:01,444:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:01,444:INFO:Checking exceptions
2020-10-20 00:24:01,444:INFO:Preloading libraries
2020-10-20 00:24:01,444:INFO:Preparing display monitor
2020-10-20 00:24:01,634:INFO:Initializing predict_model()
2020-10-20 00:24:01,634:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:01,634:INFO:Checking exceptions
2020-10-20 00:24:01,634:INFO:Preloading libraries
2020-10-20 00:24:01,635:INFO:Preparing display monitor
2020-10-20 00:24:01,826:INFO:Initializing predict_model()
2020-10-20 00:24:01,826:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:01,826:INFO:Checking exceptions
2020-10-20 00:24:01,826:INFO:Preloading libraries
2020-10-20 00:24:01,826:INFO:Preparing display monitor
2020-10-20 00:24:02,055:INFO:Initializing predict_model()
2020-10-20 00:24:02,055:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:02,055:INFO:Checking exceptions
2020-10-20 00:24:02,055:INFO:Preloading libraries
2020-10-20 00:24:02,055:INFO:Preparing display monitor
2020-10-20 00:24:02,280:INFO:Initializing predict_model()
2020-10-20 00:24:02,281:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:02,281:INFO:Checking exceptions
2020-10-20 00:24:02,281:INFO:Preloading libraries
2020-10-20 00:24:02,281:INFO:Preparing display monitor
2020-10-20 00:24:02,466:INFO:Initializing predict_model()
2020-10-20 00:24:02,466:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:02,466:INFO:Checking exceptions
2020-10-20 00:24:02,466:INFO:Preloading libraries
2020-10-20 00:24:02,466:INFO:Preparing display monitor
2020-10-20 00:24:02,695:INFO:Initializing predict_model()
2020-10-20 00:24:02,695:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:02,695:INFO:Checking exceptions
2020-10-20 00:24:02,695:INFO:Preloading libraries
2020-10-20 00:24:02,696:INFO:Preparing display monitor
2020-10-20 00:24:02,922:INFO:Initializing predict_model()
2020-10-20 00:24:02,923:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:02,923:INFO:Checking exceptions
2020-10-20 00:24:02,923:INFO:Preloading libraries
2020-10-20 00:24:02,923:INFO:Preparing display monitor
2020-10-20 00:24:03,120:INFO:Initializing predict_model()
2020-10-20 00:24:03,121:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:03,121:INFO:Checking exceptions
2020-10-20 00:24:03,121:INFO:Preloading libraries
2020-10-20 00:24:03,121:INFO:Preparing display monitor
2020-10-20 00:24:03,306:INFO:Initializing predict_model()
2020-10-20 00:24:03,306:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:03,306:INFO:Checking exceptions
2020-10-20 00:24:03,306:INFO:Preloading libraries
2020-10-20 00:24:03,306:INFO:Preparing display monitor
2020-10-20 00:24:03,490:INFO:Initializing predict_model()
2020-10-20 00:24:03,490:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:03,490:INFO:Checking exceptions
2020-10-20 00:24:03,490:INFO:Preloading libraries
2020-10-20 00:24:03,490:INFO:Preparing display monitor
2020-10-20 00:24:03,673:INFO:Initializing predict_model()
2020-10-20 00:24:03,673:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:03,674:INFO:Checking exceptions
2020-10-20 00:24:03,674:INFO:Preloading libraries
2020-10-20 00:24:03,674:INFO:Preparing display monitor
2020-10-20 00:24:40,427:INFO:Initializing predict_model()
2020-10-20 00:24:40,428:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:24:40,428:INFO:Checking exceptions
2020-10-20 00:24:40,428:INFO:Preloading libraries
2020-10-20 00:24:40,428:INFO:Preparing display monitor
2020-10-20 00:25:21,013:INFO:Initializing predict_model()
2020-10-20 00:25:21,013:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:21,013:INFO:Checking exceptions
2020-10-20 00:25:21,013:INFO:Preloading libraries
2020-10-20 00:25:21,013:INFO:Preparing display monitor
2020-10-20 00:25:21,267:INFO:Initializing predict_model()
2020-10-20 00:25:21,267:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:21,267:INFO:Checking exceptions
2020-10-20 00:25:21,267:INFO:Preloading libraries
2020-10-20 00:25:21,267:INFO:Preparing display monitor
2020-10-20 00:25:21,448:INFO:Initializing predict_model()
2020-10-20 00:25:21,448:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:21,448:INFO:Checking exceptions
2020-10-20 00:25:21,448:INFO:Preloading libraries
2020-10-20 00:25:21,448:INFO:Preparing display monitor
2020-10-20 00:25:21,637:INFO:Initializing predict_model()
2020-10-20 00:25:21,637:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:21,637:INFO:Checking exceptions
2020-10-20 00:25:21,637:INFO:Preloading libraries
2020-10-20 00:25:21,637:INFO:Preparing display monitor
2020-10-20 00:25:21,866:INFO:Initializing predict_model()
2020-10-20 00:25:21,866:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:21,866:INFO:Checking exceptions
2020-10-20 00:25:21,866:INFO:Preloading libraries
2020-10-20 00:25:21,866:INFO:Preparing display monitor
2020-10-20 00:25:22,106:INFO:Initializing predict_model()
2020-10-20 00:25:22,106:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:22,106:INFO:Checking exceptions
2020-10-20 00:25:22,106:INFO:Preloading libraries
2020-10-20 00:25:22,107:INFO:Preparing display monitor
2020-10-20 00:25:22,315:INFO:Initializing predict_model()
2020-10-20 00:25:22,315:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:22,315:INFO:Checking exceptions
2020-10-20 00:25:22,315:INFO:Preloading libraries
2020-10-20 00:25:22,315:INFO:Preparing display monitor
2020-10-20 00:25:22,510:INFO:Initializing predict_model()
2020-10-20 00:25:22,510:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:22,510:INFO:Checking exceptions
2020-10-20 00:25:22,510:INFO:Preloading libraries
2020-10-20 00:25:22,511:INFO:Preparing display monitor
2020-10-20 00:25:22,694:INFO:Initializing predict_model()
2020-10-20 00:25:22,694:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:22,694:INFO:Checking exceptions
2020-10-20 00:25:22,694:INFO:Preloading libraries
2020-10-20 00:25:22,694:INFO:Preparing display monitor
2020-10-20 00:25:22,876:INFO:Initializing predict_model()
2020-10-20 00:25:22,877:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:22,877:INFO:Checking exceptions
2020-10-20 00:25:22,877:INFO:Preloading libraries
2020-10-20 00:25:22,877:INFO:Preparing display monitor
2020-10-20 00:25:23,065:INFO:Initializing predict_model()
2020-10-20 00:25:23,065:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:23,065:INFO:Checking exceptions
2020-10-20 00:25:23,065:INFO:Preloading libraries
2020-10-20 00:25:23,065:INFO:Preparing display monitor
2020-10-20 00:25:23,245:INFO:Initializing predict_model()
2020-10-20 00:25:23,245:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:23,246:INFO:Checking exceptions
2020-10-20 00:25:23,246:INFO:Preloading libraries
2020-10-20 00:25:23,246:INFO:Preparing display monitor
2020-10-20 00:25:23,434:INFO:Initializing predict_model()
2020-10-20 00:25:23,434:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:23,434:INFO:Checking exceptions
2020-10-20 00:25:23,434:INFO:Preloading libraries
2020-10-20 00:25:23,434:INFO:Preparing display monitor
2020-10-20 00:25:23,624:INFO:Initializing predict_model()
2020-10-20 00:25:23,624:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:23,624:INFO:Checking exceptions
2020-10-20 00:25:23,624:INFO:Preloading libraries
2020-10-20 00:25:23,624:INFO:Preparing display monitor
2020-10-20 00:25:23,816:INFO:Initializing predict_model()
2020-10-20 00:25:23,816:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:23,817:INFO:Checking exceptions
2020-10-20 00:25:23,817:INFO:Preloading libraries
2020-10-20 00:25:23,817:INFO:Preparing display monitor
2020-10-20 00:25:24,003:INFO:Initializing predict_model()
2020-10-20 00:25:24,004:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:24,004:INFO:Checking exceptions
2020-10-20 00:25:24,004:INFO:Preloading libraries
2020-10-20 00:25:24,004:INFO:Preparing display monitor
2020-10-20 00:25:24,187:INFO:Initializing predict_model()
2020-10-20 00:25:24,187:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:24,187:INFO:Checking exceptions
2020-10-20 00:25:24,187:INFO:Preloading libraries
2020-10-20 00:25:24,188:INFO:Preparing display monitor
2020-10-20 00:25:24,371:INFO:Initializing predict_model()
2020-10-20 00:25:24,371:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:24,371:INFO:Checking exceptions
2020-10-20 00:25:24,371:INFO:Preloading libraries
2020-10-20 00:25:24,371:INFO:Preparing display monitor
2020-10-20 00:25:24,553:INFO:Initializing predict_model()
2020-10-20 00:25:24,553:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:24,553:INFO:Checking exceptions
2020-10-20 00:25:24,554:INFO:Preloading libraries
2020-10-20 00:25:24,554:INFO:Preparing display monitor
2020-10-20 00:25:24,746:INFO:Initializing predict_model()
2020-10-20 00:25:24,746:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:24,746:INFO:Checking exceptions
2020-10-20 00:25:24,746:INFO:Preloading libraries
2020-10-20 00:25:24,746:INFO:Preparing display monitor
2020-10-20 00:25:24,939:INFO:Initializing predict_model()
2020-10-20 00:25:24,939:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:24,940:INFO:Checking exceptions
2020-10-20 00:25:24,940:INFO:Preloading libraries
2020-10-20 00:25:24,940:INFO:Preparing display monitor
2020-10-20 00:25:25,121:INFO:Initializing predict_model()
2020-10-20 00:25:25,121:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:25,121:INFO:Checking exceptions
2020-10-20 00:25:25,121:INFO:Preloading libraries
2020-10-20 00:25:25,121:INFO:Preparing display monitor
2020-10-20 00:25:25,314:INFO:Initializing predict_model()
2020-10-20 00:25:25,314:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:25,314:INFO:Checking exceptions
2020-10-20 00:25:25,314:INFO:Preloading libraries
2020-10-20 00:25:25,315:INFO:Preparing display monitor
2020-10-20 00:25:25,504:INFO:Initializing predict_model()
2020-10-20 00:25:25,504:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:25,504:INFO:Checking exceptions
2020-10-20 00:25:25,504:INFO:Preloading libraries
2020-10-20 00:25:25,504:INFO:Preparing display monitor
2020-10-20 00:25:25,687:INFO:Initializing predict_model()
2020-10-20 00:25:25,687:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:25,687:INFO:Checking exceptions
2020-10-20 00:25:25,687:INFO:Preloading libraries
2020-10-20 00:25:25,688:INFO:Preparing display monitor
2020-10-20 00:25:25,869:INFO:Initializing predict_model()
2020-10-20 00:25:25,869:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:25,869:INFO:Checking exceptions
2020-10-20 00:25:25,869:INFO:Preloading libraries
2020-10-20 00:25:25,869:INFO:Preparing display monitor
2020-10-20 00:25:26,059:INFO:Initializing predict_model()
2020-10-20 00:25:26,059:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:26,059:INFO:Checking exceptions
2020-10-20 00:25:26,059:INFO:Preloading libraries
2020-10-20 00:25:26,060:INFO:Preparing display monitor
2020-10-20 00:25:26,256:INFO:Initializing predict_model()
2020-10-20 00:25:26,257:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:26,257:INFO:Checking exceptions
2020-10-20 00:25:26,257:INFO:Preloading libraries
2020-10-20 00:25:26,257:INFO:Preparing display monitor
2020-10-20 00:25:26,488:INFO:Initializing predict_model()
2020-10-20 00:25:26,488:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:26,488:INFO:Checking exceptions
2020-10-20 00:25:26,488:INFO:Preloading libraries
2020-10-20 00:25:26,488:INFO:Preparing display monitor
2020-10-20 00:25:26,715:INFO:Initializing predict_model()
2020-10-20 00:25:26,715:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:26,715:INFO:Checking exceptions
2020-10-20 00:25:26,715:INFO:Preloading libraries
2020-10-20 00:25:26,716:INFO:Preparing display monitor
2020-10-20 00:25:26,912:INFO:Initializing predict_model()
2020-10-20 00:25:26,913:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:26,913:INFO:Checking exceptions
2020-10-20 00:25:26,913:INFO:Preloading libraries
2020-10-20 00:25:26,913:INFO:Preparing display monitor
2020-10-20 00:25:27,092:INFO:Initializing predict_model()
2020-10-20 00:25:27,092:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:27,092:INFO:Checking exceptions
2020-10-20 00:25:27,092:INFO:Preloading libraries
2020-10-20 00:25:27,092:INFO:Preparing display monitor
2020-10-20 00:25:27,272:INFO:Initializing predict_model()
2020-10-20 00:25:27,272:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:27,272:INFO:Checking exceptions
2020-10-20 00:25:27,272:INFO:Preloading libraries
2020-10-20 00:25:27,273:INFO:Preparing display monitor
2020-10-20 00:25:27,489:INFO:Initializing predict_model()
2020-10-20 00:25:27,489:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:27,489:INFO:Checking exceptions
2020-10-20 00:25:27,489:INFO:Preloading libraries
2020-10-20 00:25:27,489:INFO:Preparing display monitor
2020-10-20 00:25:27,707:INFO:Initializing predict_model()
2020-10-20 00:25:27,707:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:27,707:INFO:Checking exceptions
2020-10-20 00:25:27,707:INFO:Preloading libraries
2020-10-20 00:25:27,707:INFO:Preparing display monitor
2020-10-20 00:25:27,897:INFO:Initializing predict_model()
2020-10-20 00:25:27,897:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:27,897:INFO:Checking exceptions
2020-10-20 00:25:27,897:INFO:Preloading libraries
2020-10-20 00:25:27,897:INFO:Preparing display monitor
2020-10-20 00:25:28,091:INFO:Initializing predict_model()
2020-10-20 00:25:28,091:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:28,091:INFO:Checking exceptions
2020-10-20 00:25:28,091:INFO:Preloading libraries
2020-10-20 00:25:28,091:INFO:Preparing display monitor
2020-10-20 00:25:28,286:INFO:Initializing predict_model()
2020-10-20 00:25:28,287:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:28,287:INFO:Checking exceptions
2020-10-20 00:25:28,287:INFO:Preloading libraries
2020-10-20 00:25:28,287:INFO:Preparing display monitor
2020-10-20 00:25:28,467:INFO:Initializing predict_model()
2020-10-20 00:25:28,468:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:28,468:INFO:Checking exceptions
2020-10-20 00:25:28,468:INFO:Preloading libraries
2020-10-20 00:25:28,468:INFO:Preparing display monitor
2020-10-20 00:25:28,649:INFO:Initializing predict_model()
2020-10-20 00:25:28,650:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963D868988>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:25:28,650:INFO:Checking exceptions
2020-10-20 00:25:28,650:INFO:Preloading libraries
2020-10-20 00:25:28,650:INFO:Preparing display monitor
2020-10-20 00:27:10,405:INFO:PyCaret Supervised Module
2020-10-20 00:27:10,405:INFO:ML Usecase: regression
2020-10-20 00:27:10,405:INFO:version 2.2.0
2020-10-20 00:27:10,405:INFO:Initializing setup()
2020-10-20 00:27:10,405:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-20 00:27:10,405:INFO:Checking environment
2020-10-20 00:27:10,405:INFO:python_version: 3.7.6
2020-10-20 00:27:10,405:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-20 00:27:10,405:INFO:machine: AMD64
2020-10-20 00:27:10,405:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-20 00:27:10,406:INFO:Memory: svmem(total=16969158656, available=7392149504, percent=56.4, used=9577009152, free=7392149504)
2020-10-20 00:27:10,406:INFO:Physical Core: 4
2020-10-20 00:27:10,406:INFO:Logical Core: 8
2020-10-20 00:27:10,406:INFO:Checking libraries
2020-10-20 00:27:10,406:INFO:pd==1.1.3
2020-10-20 00:27:10,406:INFO:numpy==1.18.1
2020-10-20 00:27:10,406:INFO:sklearn==0.23.2
2020-10-20 00:27:10,406:INFO:xgboost==1.2.1
2020-10-20 00:27:10,406:INFO:lightgbm==2.3.1
2020-10-20 00:27:10,406:INFO:catboost==0.24.2
2020-10-20 00:27:10,406:INFO:mlflow==1.11.0
2020-10-20 00:27:10,406:INFO:Checking Exceptions
2020-10-20 00:27:10,406:INFO:Declaring global variables
2020-10-20 00:27:10,406:INFO:USI: d23f
2020-10-20 00:27:10,406:INFO:pycaret_globals: {'fold_shuffle_param', '_all_models', '_ml_usecase', 'data_before_preprocess', 'y', 'create_model_container', 'X_train', 'transform_target_param', '_all_metrics', '_internal_pipeline', 'fix_imbalance_param', 'iterative_imputation_iters_param', 'pycaret_globals', 'fix_imbalance_method_param', 'transform_target_method_param', 'n_jobs_param', 'y_test', '_gpu_n_jobs_param', 'target_param', 'prep_pipe', 'y_train', 'fold_param', 'display_container', 'imputation_regressor', 'log_plots_param', 'USI', 'stratify_param', 'logging_param', '_all_models_internal', 'imputation_classifier', 'exp_name_log', 'gpu_param', 'master_model_container', 'seed', 'X_test', 'fold_groups_param', 'X', 'experiment__', 'html_param', 'fold_generator'}
2020-10-20 00:27:10,406:INFO:Preparing display monitor
2020-10-20 00:27:10,406:INFO:Importing libraries
2020-10-20 00:27:10,406:INFO:Copying data for preprocessing
2020-10-20 00:27:10,437:INFO:Declaring preprocessing parameters
2020-10-20 00:27:10,488:INFO:Creating preprocessing pipeline
2020-10-20 00:27:11,445:INFO:Preprocessing pipeline created successfully
2020-10-20 00:27:11,446:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-20 00:27:11,446:INFO:Creating global containers
2020-10-20 00:27:11,446:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-20 00:27:16,605:INFO:Creating grid variables
2020-10-20 00:27:16,623:INFO:create_model_container: 0
2020-10-20 00:27:16,623:INFO:master_model_container: 0
2020-10-20 00:27:16,623:INFO:display_container: 0
2020-10-20 00:27:16,627:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-20 00:27:16,627:INFO:setup() succesfully completed......................................
2020-10-20 00:27:16,791:INFO:Initializing create_model()
2020-10-20 00:27:16,791:INFO:create_model(estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2020-10-20 00:27:16,792:INFO:Checking exceptions
2020-10-20 00:27:16,792:INFO:Preparing display monitor
2020-10-20 00:27:16,809:INFO:Importing libraries
2020-10-20 00:27:16,809:INFO:Copying training dataset
2020-10-20 00:27:16,813:INFO:Defining folds
2020-10-20 00:27:16,813:INFO:Declaring metric variables
2020-10-20 00:27:16,823:INFO:Importing untrained model
2020-10-20 00:27:16,835:INFO:CatBoost Regressor Imported succesfully
2020-10-20 00:27:16,852:INFO:Starting cross validation
2020-10-20 00:27:16,853:INFO:Cross validating with n_jobs=-1
2020-10-20 00:31:50,963:INFO:Calculating mean and std
2020-10-20 00:31:50,964:INFO:Creating metrics dataframe
2020-10-20 00:31:50,977:INFO:Finalizing model
2020-10-20 00:32:18,809:INFO:Uploading results into container
2020-10-20 00:32:18,809:INFO:Uploading model into container now
2020-10-20 00:32:18,826:INFO:create_model_container: 1
2020-10-20 00:32:18,827:INFO:master_model_container: 1
2020-10-20 00:32:18,827:INFO:display_container: 1
2020-10-20 00:32:18,827:INFO:<catboost.core.CatBoostRegressor object at 0x000002963988F948>
2020-10-20 00:32:18,827:INFO:create_model() succesfully completed......................................
2020-10-20 00:32:19,007:INFO:Initializing tune_model()
2020-10-20 00:32:19,007:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002963988F948>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-20 00:32:19,007:INFO:Checking exceptions
2020-10-20 00:32:19,007:INFO:Preparing display monitor
2020-10-20 00:32:19,025:INFO:Copying training dataset
2020-10-20 00:32:19,029:INFO:Checking base model
2020-10-20 00:32:19,029:INFO:Base model : CatBoost Regressor
2020-10-20 00:32:19,037:INFO:Declaring metric variables
2020-10-20 00:32:19,047:INFO:Defining Hyperparameters
2020-10-20 00:32:19,190:INFO:Tuning with n_jobs=-1
2020-10-20 00:32:19,190:INFO:Initializing RandomizedSearchCV
2020-10-20 00:43:40,039:INFO:best_params: {'actual_estimator__random_strength': 0.7, 'actual_estimator__n_estimators': 250, 'actual_estimator__l2_leaf_reg': 8, 'actual_estimator__depth': 11}
2020-10-20 00:43:40,041:INFO:Random search completed
2020-10-20 00:43:40,042:INFO:SubProcess create_model() called ==================================
2020-10-20 00:43:40,042:INFO:Initializing create_model()
2020-10-20 00:43:40,043:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x000002964B7E91C8>, fold=KFold(n_splits=10, random_state=0, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002963CCB0E48>, kwargs={'random_strength': 0.7, 'n_estimators': 250, 'l2_leaf_reg': 8, 'depth': 11})
2020-10-20 00:43:40,043:INFO:Checking exceptions
2020-10-20 00:43:40,043:INFO:Importing libraries
2020-10-20 00:43:40,043:INFO:Copying training dataset
2020-10-20 00:43:40,052:INFO:Defining folds
2020-10-20 00:43:40,053:INFO:Declaring metric variables
2020-10-20 00:43:40,072:INFO:Importing untrained model
2020-10-20 00:43:40,072:INFO:Declaring custom model
2020-10-20 00:43:40,093:INFO:CatBoost Regressor Imported succesfully
2020-10-20 00:43:40,131:INFO:Starting cross validation
2020-10-20 00:43:40,131:INFO:Cross validating with n_jobs=-1
2020-10-20 00:46:27,467:INFO:Calculating mean and std
2020-10-20 00:46:27,468:INFO:Creating metrics dataframe
2020-10-20 00:46:27,482:INFO:Finalizing model
2020-10-20 00:46:47,587:INFO:Uploading results into container
2020-10-20 00:46:47,587:INFO:Uploading model into container now
2020-10-20 00:46:47,588:INFO:create_model_container: 2
2020-10-20 00:46:47,588:INFO:master_model_container: 2
2020-10-20 00:46:47,588:INFO:display_container: 2
2020-10-20 00:46:47,588:INFO:<catboost.core.CatBoostRegressor object at 0x0000029639884208>
2020-10-20 00:46:47,588:INFO:create_model() succesfully completed......................................
2020-10-20 00:46:47,734:INFO:SubProcess create_model() end ==================================
2020-10-20 00:46:47,750:INFO:create_model_container: 2
2020-10-20 00:46:47,750:INFO:master_model_container: 2
2020-10-20 00:46:47,751:INFO:display_container: 2
2020-10-20 00:46:47,751:INFO:<catboost.core.CatBoostRegressor object at 0x0000029639884208>
2020-10-20 00:46:47,751:INFO:tune_model() succesfully completed......................................
2020-10-20 00:46:47,898:INFO:Initializing save_model()
2020-10-20 00:46:47,899:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, model_name=./results/single_z/model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-20 00:46:47,899:INFO:Adding model into prep_pipe
2020-10-20 00:46:47,995:INFO:./results/single_z/model.pkl saved in current working directory
2020-10-20 00:46:47,999:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000029639884208>]],
         verbose=False)
2020-10-20 00:46:47,999:INFO:save_model() succesfully completed......................................
2020-10-20 00:50:54,695:INFO:Initializing predict_model()
2020-10-20 00:50:54,696:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:54,696:INFO:Checking exceptions
2020-10-20 00:50:54,696:INFO:Preloading libraries
2020-10-20 00:50:54,696:INFO:Preparing display monitor
2020-10-20 00:50:54,892:INFO:Initializing predict_model()
2020-10-20 00:50:54,893:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:54,893:INFO:Checking exceptions
2020-10-20 00:50:54,893:INFO:Preloading libraries
2020-10-20 00:50:54,893:INFO:Preparing display monitor
2020-10-20 00:50:55,072:INFO:Initializing predict_model()
2020-10-20 00:50:55,072:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:55,072:INFO:Checking exceptions
2020-10-20 00:50:55,072:INFO:Preloading libraries
2020-10-20 00:50:55,072:INFO:Preparing display monitor
2020-10-20 00:50:55,256:INFO:Initializing predict_model()
2020-10-20 00:50:55,257:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:55,257:INFO:Checking exceptions
2020-10-20 00:50:55,257:INFO:Preloading libraries
2020-10-20 00:50:55,257:INFO:Preparing display monitor
2020-10-20 00:50:55,457:INFO:Initializing predict_model()
2020-10-20 00:50:55,457:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:55,457:INFO:Checking exceptions
2020-10-20 00:50:55,457:INFO:Preloading libraries
2020-10-20 00:50:55,457:INFO:Preparing display monitor
2020-10-20 00:50:55,640:INFO:Initializing predict_model()
2020-10-20 00:50:55,640:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:55,640:INFO:Checking exceptions
2020-10-20 00:50:55,640:INFO:Preloading libraries
2020-10-20 00:50:55,641:INFO:Preparing display monitor
2020-10-20 00:50:55,827:INFO:Initializing predict_model()
2020-10-20 00:50:55,827:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:55,827:INFO:Checking exceptions
2020-10-20 00:50:55,827:INFO:Preloading libraries
2020-10-20 00:50:55,827:INFO:Preparing display monitor
2020-10-20 00:50:56,013:INFO:Initializing predict_model()
2020-10-20 00:50:56,013:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:56,013:INFO:Checking exceptions
2020-10-20 00:50:56,013:INFO:Preloading libraries
2020-10-20 00:50:56,013:INFO:Preparing display monitor
2020-10-20 00:50:56,201:INFO:Initializing predict_model()
2020-10-20 00:50:56,201:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:56,201:INFO:Checking exceptions
2020-10-20 00:50:56,201:INFO:Preloading libraries
2020-10-20 00:50:56,201:INFO:Preparing display monitor
2020-10-20 00:50:56,395:INFO:Initializing predict_model()
2020-10-20 00:50:56,395:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:56,395:INFO:Checking exceptions
2020-10-20 00:50:56,395:INFO:Preloading libraries
2020-10-20 00:50:56,396:INFO:Preparing display monitor
2020-10-20 00:50:56,583:INFO:Initializing predict_model()
2020-10-20 00:50:56,583:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:56,583:INFO:Checking exceptions
2020-10-20 00:50:56,583:INFO:Preloading libraries
2020-10-20 00:50:56,583:INFO:Preparing display monitor
2020-10-20 00:50:56,776:INFO:Initializing predict_model()
2020-10-20 00:50:56,776:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:56,776:INFO:Checking exceptions
2020-10-20 00:50:56,776:INFO:Preloading libraries
2020-10-20 00:50:56,776:INFO:Preparing display monitor
2020-10-20 00:50:56,960:INFO:Initializing predict_model()
2020-10-20 00:50:56,960:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:56,960:INFO:Checking exceptions
2020-10-20 00:50:56,960:INFO:Preloading libraries
2020-10-20 00:50:56,960:INFO:Preparing display monitor
2020-10-20 00:50:57,141:INFO:Initializing predict_model()
2020-10-20 00:50:57,141:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:57,141:INFO:Checking exceptions
2020-10-20 00:50:57,141:INFO:Preloading libraries
2020-10-20 00:50:57,141:INFO:Preparing display monitor
2020-10-20 00:50:57,325:INFO:Initializing predict_model()
2020-10-20 00:50:57,325:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:57,325:INFO:Checking exceptions
2020-10-20 00:50:57,325:INFO:Preloading libraries
2020-10-20 00:50:57,325:INFO:Preparing display monitor
2020-10-20 00:50:57,507:INFO:Initializing predict_model()
2020-10-20 00:50:57,507:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:57,507:INFO:Checking exceptions
2020-10-20 00:50:57,507:INFO:Preloading libraries
2020-10-20 00:50:57,507:INFO:Preparing display monitor
2020-10-20 00:50:57,698:INFO:Initializing predict_model()
2020-10-20 00:50:57,698:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:57,698:INFO:Checking exceptions
2020-10-20 00:50:57,699:INFO:Preloading libraries
2020-10-20 00:50:57,699:INFO:Preparing display monitor
2020-10-20 00:50:57,885:INFO:Initializing predict_model()
2020-10-20 00:50:57,886:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:57,886:INFO:Checking exceptions
2020-10-20 00:50:57,886:INFO:Preloading libraries
2020-10-20 00:50:57,886:INFO:Preparing display monitor
2020-10-20 00:50:58,077:INFO:Initializing predict_model()
2020-10-20 00:50:58,077:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:58,077:INFO:Checking exceptions
2020-10-20 00:50:58,077:INFO:Preloading libraries
2020-10-20 00:50:58,077:INFO:Preparing display monitor
2020-10-20 00:50:58,261:INFO:Initializing predict_model()
2020-10-20 00:50:58,261:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:58,261:INFO:Checking exceptions
2020-10-20 00:50:58,261:INFO:Preloading libraries
2020-10-20 00:50:58,261:INFO:Preparing display monitor
2020-10-20 00:50:58,441:INFO:Initializing predict_model()
2020-10-20 00:50:58,441:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:58,441:INFO:Checking exceptions
2020-10-20 00:50:58,441:INFO:Preloading libraries
2020-10-20 00:50:58,442:INFO:Preparing display monitor
2020-10-20 00:50:58,621:INFO:Initializing predict_model()
2020-10-20 00:50:58,621:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:58,621:INFO:Checking exceptions
2020-10-20 00:50:58,621:INFO:Preloading libraries
2020-10-20 00:50:58,622:INFO:Preparing display monitor
2020-10-20 00:50:58,800:INFO:Initializing predict_model()
2020-10-20 00:50:58,800:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:58,800:INFO:Checking exceptions
2020-10-20 00:50:58,800:INFO:Preloading libraries
2020-10-20 00:50:58,801:INFO:Preparing display monitor
2020-10-20 00:50:58,980:INFO:Initializing predict_model()
2020-10-20 00:50:58,980:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:58,980:INFO:Checking exceptions
2020-10-20 00:50:58,980:INFO:Preloading libraries
2020-10-20 00:50:58,981:INFO:Preparing display monitor
2020-10-20 00:50:59,170:INFO:Initializing predict_model()
2020-10-20 00:50:59,170:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:59,170:INFO:Checking exceptions
2020-10-20 00:50:59,170:INFO:Preloading libraries
2020-10-20 00:50:59,170:INFO:Preparing display monitor
2020-10-20 00:50:59,353:INFO:Initializing predict_model()
2020-10-20 00:50:59,353:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:59,354:INFO:Checking exceptions
2020-10-20 00:50:59,354:INFO:Preloading libraries
2020-10-20 00:50:59,354:INFO:Preparing display monitor
2020-10-20 00:50:59,543:INFO:Initializing predict_model()
2020-10-20 00:50:59,543:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:59,543:INFO:Checking exceptions
2020-10-20 00:50:59,543:INFO:Preloading libraries
2020-10-20 00:50:59,543:INFO:Preparing display monitor
2020-10-20 00:50:59,724:INFO:Initializing predict_model()
2020-10-20 00:50:59,724:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:59,724:INFO:Checking exceptions
2020-10-20 00:50:59,724:INFO:Preloading libraries
2020-10-20 00:50:59,724:INFO:Preparing display monitor
2020-10-20 00:50:59,902:INFO:Initializing predict_model()
2020-10-20 00:50:59,902:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:50:59,902:INFO:Checking exceptions
2020-10-20 00:50:59,902:INFO:Preloading libraries
2020-10-20 00:50:59,902:INFO:Preparing display monitor
2020-10-20 00:51:00,087:INFO:Initializing predict_model()
2020-10-20 00:51:00,087:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:00,087:INFO:Checking exceptions
2020-10-20 00:51:00,087:INFO:Preloading libraries
2020-10-20 00:51:00,087:INFO:Preparing display monitor
2020-10-20 00:51:00,267:INFO:Initializing predict_model()
2020-10-20 00:51:00,267:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:00,267:INFO:Checking exceptions
2020-10-20 00:51:00,268:INFO:Preloading libraries
2020-10-20 00:51:00,268:INFO:Preparing display monitor
2020-10-20 00:51:00,452:INFO:Initializing predict_model()
2020-10-20 00:51:00,452:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:00,452:INFO:Checking exceptions
2020-10-20 00:51:00,452:INFO:Preloading libraries
2020-10-20 00:51:00,453:INFO:Preparing display monitor
2020-10-20 00:51:00,643:INFO:Initializing predict_model()
2020-10-20 00:51:00,643:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:00,643:INFO:Checking exceptions
2020-10-20 00:51:00,643:INFO:Preloading libraries
2020-10-20 00:51:00,643:INFO:Preparing display monitor
2020-10-20 00:51:00,827:INFO:Initializing predict_model()
2020-10-20 00:51:00,828:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:00,828:INFO:Checking exceptions
2020-10-20 00:51:00,828:INFO:Preloading libraries
2020-10-20 00:51:00,828:INFO:Preparing display monitor
2020-10-20 00:51:01,017:INFO:Initializing predict_model()
2020-10-20 00:51:01,017:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:01,017:INFO:Checking exceptions
2020-10-20 00:51:01,017:INFO:Preloading libraries
2020-10-20 00:51:01,018:INFO:Preparing display monitor
2020-10-20 00:51:01,197:INFO:Initializing predict_model()
2020-10-20 00:51:01,198:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:01,198:INFO:Checking exceptions
2020-10-20 00:51:01,198:INFO:Preloading libraries
2020-10-20 00:51:01,198:INFO:Preparing display monitor
2020-10-20 00:51:01,376:INFO:Initializing predict_model()
2020-10-20 00:51:01,376:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:01,376:INFO:Checking exceptions
2020-10-20 00:51:01,376:INFO:Preloading libraries
2020-10-20 00:51:01,376:INFO:Preparing display monitor
2020-10-20 00:51:01,556:INFO:Initializing predict_model()
2020-10-20 00:51:01,556:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:01,556:INFO:Checking exceptions
2020-10-20 00:51:01,556:INFO:Preloading libraries
2020-10-20 00:51:01,556:INFO:Preparing display monitor
2020-10-20 00:51:01,734:INFO:Initializing predict_model()
2020-10-20 00:51:01,734:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:01,734:INFO:Checking exceptions
2020-10-20 00:51:01,734:INFO:Preloading libraries
2020-10-20 00:51:01,735:INFO:Preparing display monitor
2020-10-20 00:51:01,920:INFO:Initializing predict_model()
2020-10-20 00:51:01,920:INFO:predict_model(estimator=<catboost.core.CatBoostRegressor object at 0x0000029639884208>, probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 00:51:01,920:INFO:Checking exceptions
2020-10-20 00:51:01,920:INFO:Preloading libraries
2020-10-20 00:51:01,921:INFO:Preparing display monitor
2020-10-20 00:52:01,621:INFO:PyCaret Supervised Module
2020-10-20 00:52:01,621:INFO:ML Usecase: regression
2020-10-20 00:52:01,621:INFO:version 2.2.0
2020-10-20 00:52:01,621:INFO:Initializing setup()
2020-10-20 00:52:01,621:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-20 00:52:01,621:INFO:Checking environment
2020-10-20 00:52:01,621:INFO:python_version: 3.7.6
2020-10-20 00:52:01,621:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-20 00:52:01,621:INFO:machine: AMD64
2020-10-20 00:52:01,621:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-20 00:52:01,621:INFO:Memory: svmem(total=16969158656, available=7959212032, percent=53.1, used=9009946624, free=7959212032)
2020-10-20 00:52:01,621:INFO:Physical Core: 4
2020-10-20 00:52:01,621:INFO:Logical Core: 8
2020-10-20 00:52:01,622:INFO:Checking libraries
2020-10-20 00:52:01,622:INFO:pd==1.1.3
2020-10-20 00:52:01,622:INFO:numpy==1.18.1
2020-10-20 00:52:01,622:INFO:sklearn==0.23.2
2020-10-20 00:52:01,622:INFO:xgboost==1.2.1
2020-10-20 00:52:01,622:INFO:lightgbm==2.3.1
2020-10-20 00:52:01,622:INFO:catboost==0.24.2
2020-10-20 00:52:01,622:INFO:mlflow==1.11.0
2020-10-20 00:52:01,622:INFO:Checking Exceptions
2020-10-20 00:52:01,622:INFO:Declaring global variables
2020-10-20 00:52:01,622:INFO:USI: 3e98
2020-10-20 00:52:01,622:INFO:pycaret_globals: {'fold_shuffle_param', '_all_models', '_ml_usecase', 'data_before_preprocess', 'y', 'create_model_container', 'X_train', 'transform_target_param', '_all_metrics', '_internal_pipeline', 'fix_imbalance_param', 'iterative_imputation_iters_param', 'pycaret_globals', 'fix_imbalance_method_param', 'transform_target_method_param', 'n_jobs_param', 'y_test', '_gpu_n_jobs_param', 'target_param', 'prep_pipe', 'y_train', 'fold_param', 'display_container', 'imputation_regressor', 'log_plots_param', 'USI', 'stratify_param', 'logging_param', '_all_models_internal', 'imputation_classifier', 'exp_name_log', 'gpu_param', 'master_model_container', 'seed', 'X_test', 'fold_groups_param', 'X', 'experiment__', 'html_param', 'fold_generator'}
2020-10-20 00:52:01,622:INFO:Preparing display monitor
2020-10-20 00:52:01,622:INFO:Importing libraries
2020-10-20 00:52:01,622:INFO:Copying data for preprocessing
2020-10-20 00:52:01,853:INFO:Declaring preprocessing parameters
2020-10-20 00:52:02,062:INFO:Creating preprocessing pipeline
2020-10-20 00:52:03,591:INFO:Preprocessing pipeline created successfully
2020-10-20 00:52:03,591:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-20 00:52:03,591:INFO:Creating global containers
2020-10-20 00:52:03,591:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-20 00:52:13,649:INFO:Creating grid variables
2020-10-20 00:52:13,693:INFO:create_model_container: 0
2020-10-20 00:52:13,693:INFO:master_model_container: 0
2020-10-20 00:52:13,693:INFO:display_container: 0
2020-10-20 00:52:13,697:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-20 00:52:13,697:INFO:setup() succesfully completed......................................
2020-10-20 00:52:13,871:INFO:Initializing create_model()
2020-10-20 00:52:13,871:INFO:create_model(estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2020-10-20 00:52:13,871:INFO:Checking exceptions
2020-10-20 00:52:13,872:INFO:Preparing display monitor
2020-10-20 00:52:13,886:INFO:Importing libraries
2020-10-20 00:52:13,886:INFO:Copying training dataset
2020-10-20 00:52:13,894:INFO:Defining folds
2020-10-20 00:52:13,894:INFO:Declaring metric variables
2020-10-20 00:52:13,900:INFO:Importing untrained model
2020-10-20 00:52:13,907:INFO:Extra Trees Regressor Imported succesfully
2020-10-20 00:52:13,922:INFO:Starting cross validation
2020-10-20 00:52:13,924:INFO:Cross validating with n_jobs=-1
2020-10-20 01:05:32,936:INFO:Calculating mean and std
2020-10-20 01:05:33,202:INFO:Creating metrics dataframe
2020-10-20 01:05:33,442:INFO:Finalizing model
2020-10-20 01:06:21,893:INFO:Uploading results into container
2020-10-20 01:06:21,893:INFO:Uploading model into container now
2020-10-20 01:06:21,942:INFO:create_model_container: 1
2020-10-20 01:06:21,942:INFO:master_model_container: 1
2020-10-20 01:06:21,942:INFO:display_container: 1
2020-10-20 01:06:21,943:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-20 01:06:21,944:INFO:create_model() succesfully completed......................................
2020-10-20 01:06:23,120:INFO:Initializing tune_model()
2020-10-20 01:06:23,120:INFO:tune_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-20 01:06:23,120:INFO:Checking exceptions
2020-10-20 01:06:23,120:INFO:Preparing display monitor
2020-10-20 01:06:23,140:INFO:Copying training dataset
2020-10-20 01:06:23,329:INFO:Checking base model
2020-10-20 01:06:23,330:INFO:Base model : Extra Trees Regressor
2020-10-20 01:06:23,337:INFO:Declaring metric variables
2020-10-20 01:06:23,344:INFO:Defining Hyperparameters
2020-10-20 01:06:23,492:INFO:Tuning with n_jobs=-1
2020-10-20 01:06:23,492:INFO:Initializing RandomizedSearchCV
2020-10-20 11:11:46,000:INFO:PyCaret Supervised Module
2020-10-20 11:11:46,002:INFO:ML Usecase: regression
2020-10-20 11:11:46,002:INFO:version 2.2.0
2020-10-20 11:11:46,002:INFO:Initializing setup()
2020-10-20 11:11:46,002:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-20 11:11:46,002:INFO:Checking environment
2020-10-20 11:11:46,002:INFO:python_version: 3.7.6
2020-10-20 11:11:46,002:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-20 11:11:46,002:INFO:machine: AMD64
2020-10-20 11:11:46,003:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-20 11:11:46,003:INFO:Memory: svmem(total=16969158656, available=10252226560, percent=39.6, used=6716932096, free=10252226560)
2020-10-20 11:11:46,003:INFO:Physical Core: 4
2020-10-20 11:11:46,003:INFO:Logical Core: 8
2020-10-20 11:11:46,003:INFO:Checking libraries
2020-10-20 11:11:46,003:INFO:pd==1.1.3
2020-10-20 11:11:46,003:INFO:numpy==1.18.1
2020-10-20 11:11:46,003:INFO:sklearn==0.23.2
2020-10-20 11:11:46,508:INFO:xgboost==1.2.1
2020-10-20 11:11:46,508:INFO:lightgbm==2.3.1
2020-10-20 11:11:46,749:INFO:catboost==0.24.2
2020-10-20 11:11:47,484:INFO:mlflow==1.11.0
2020-10-20 11:11:47,484:INFO:Checking Exceptions
2020-10-20 11:11:47,484:INFO:Declaring global variables
2020-10-20 11:11:47,485:INFO:USI: dc94
2020-10-20 11:11:47,485:INFO:pycaret_globals: {'_internal_pipeline', 'logging_param', 'fix_imbalance_method_param', 'fold_shuffle_param', 'create_model_container', 'imputation_regressor', 'y_train', 'fix_imbalance_param', 'X', 'transform_target_method_param', 'experiment__', 'X_test', 'data_before_preprocess', 'pycaret_globals', 'log_plots_param', 'stratify_param', '_gpu_n_jobs_param', '_all_models_internal', 'exp_name_log', 'fold_groups_param', 'USI', 'transform_target_param', '_all_metrics', 'gpu_param', 'prep_pipe', 'display_container', '_all_models', 'fold_param', 'master_model_container', 'seed', 'imputation_classifier', 'iterative_imputation_iters_param', 'X_train', 'html_param', 'y_test', 'n_jobs_param', 'y', '_ml_usecase', 'fold_generator', 'target_param'}
2020-10-20 11:11:47,485:INFO:Preparing display monitor
2020-10-20 11:11:47,485:INFO:Importing libraries
2020-10-20 11:11:47,485:INFO:Copying data for preprocessing
2020-10-20 11:11:47,710:INFO:Declaring preprocessing parameters
2020-10-20 11:11:47,895:INFO:Creating preprocessing pipeline
2020-10-20 11:11:49,402:INFO:Preprocessing pipeline created successfully
2020-10-20 11:11:49,402:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-20 11:11:49,402:INFO:Creating global containers
2020-10-20 11:11:49,406:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-20 11:11:58,457:INFO:Creating grid variables
2020-10-20 11:11:58,499:INFO:create_model_container: 0
2020-10-20 11:11:58,499:INFO:master_model_container: 0
2020-10-20 11:11:58,499:INFO:display_container: 0
2020-10-20 11:11:58,503:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-20 11:11:58,503:INFO:setup() succesfully completed......................................
2020-10-20 11:11:58,584:INFO:Initializing create_model()
2020-10-20 11:11:58,584:INFO:create_model(estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2020-10-20 11:11:58,584:INFO:Checking exceptions
2020-10-20 11:11:58,584:INFO:Preparing display monitor
2020-10-20 11:11:58,613:INFO:Importing libraries
2020-10-20 11:11:58,613:INFO:Copying training dataset
2020-10-20 11:11:58,620:INFO:Defining folds
2020-10-20 11:11:58,620:INFO:Declaring metric variables
2020-10-20 11:11:58,627:INFO:Importing untrained model
2020-10-20 11:11:58,635:INFO:Extra Trees Regressor Imported succesfully
2020-10-20 11:11:58,649:INFO:Starting cross validation
2020-10-20 11:11:58,655:INFO:Cross validating with n_jobs=-1
2020-10-20 11:24:13,470:INFO:Calculating mean and std
2020-10-20 11:24:13,566:INFO:Creating metrics dataframe
2020-10-20 11:24:13,723:INFO:Finalizing model
2020-10-20 11:24:58,350:INFO:Uploading results into container
2020-10-20 11:24:58,351:INFO:Uploading model into container now
2020-10-20 11:24:58,490:INFO:create_model_container: 1
2020-10-20 11:24:58,490:INFO:master_model_container: 1
2020-10-20 11:24:58,490:INFO:display_container: 1
2020-10-20 11:24:58,491:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-20 11:24:58,492:INFO:create_model() succesfully completed......................................
2020-10-20 11:24:59,213:INFO:Initializing tune_model()
2020-10-20 11:24:59,213:INFO:tune_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2020-10-20 11:24:59,214:INFO:Checking exceptions
2020-10-20 11:24:59,214:INFO:Preparing display monitor
2020-10-20 11:24:59,232:INFO:Copying training dataset
2020-10-20 11:24:59,350:INFO:Checking base model
2020-10-20 11:24:59,351:INFO:Base model : Extra Trees Regressor
2020-10-20 11:24:59,359:INFO:Declaring metric variables
2020-10-20 11:24:59,368:INFO:Defining Hyperparameters
2020-10-20 11:24:59,460:INFO:Tuning with n_jobs=-1
2020-10-20 11:24:59,460:INFO:Initializing RandomizedSearchCV
2020-10-20 12:27:25,045:INFO:PyCaret Supervised Module
2020-10-20 12:27:25,045:INFO:ML Usecase: regression
2020-10-20 12:27:25,045:INFO:version 2.2.0
2020-10-20 12:27:25,046:INFO:Initializing setup()
2020-10-20 12:27:25,046:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-20 12:27:25,046:INFO:Checking environment
2020-10-20 12:27:25,046:INFO:python_version: 3.7.6
2020-10-20 12:27:25,046:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-20 12:27:25,046:INFO:machine: AMD64
2020-10-20 12:27:25,046:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-20 12:27:25,046:INFO:Memory: svmem(total=16969158656, available=10728488960, percent=36.8, used=6240669696, free=10728488960)
2020-10-20 12:27:25,046:INFO:Physical Core: 4
2020-10-20 12:27:25,046:INFO:Logical Core: 8
2020-10-20 12:27:25,046:INFO:Checking libraries
2020-10-20 12:27:25,046:INFO:pd==1.1.3
2020-10-20 12:27:25,046:INFO:numpy==1.18.1
2020-10-20 12:27:25,046:INFO:sklearn==0.23.2
2020-10-20 12:27:25,602:INFO:xgboost==1.2.1
2020-10-20 12:27:25,602:INFO:lightgbm==2.3.1
2020-10-20 12:27:25,738:INFO:catboost==0.24.2
2020-10-20 12:27:26,469:INFO:mlflow==1.11.0
2020-10-20 12:27:26,469:INFO:Checking Exceptions
2020-10-20 12:27:26,469:INFO:Declaring global variables
2020-10-20 12:27:26,469:INFO:USI: 765a
2020-10-20 12:27:26,469:INFO:pycaret_globals: {'target_param', 'logging_param', 'pycaret_globals', 'imputation_classifier', '_all_models_internal', 'fold_param', 'stratify_param', 'X', 'create_model_container', 'fold_generator', '_ml_usecase', '_gpu_n_jobs_param', '_all_models', 'fix_imbalance_method_param', 'fold_groups_param', 'exp_name_log', 'USI', 'transform_target_param', 'transform_target_method_param', 'fix_imbalance_param', 'y_test', 'log_plots_param', 'X_train', 'experiment__', 'seed', 'iterative_imputation_iters_param', '_internal_pipeline', 'y', 'fold_shuffle_param', 'html_param', 'display_container', '_all_metrics', 'imputation_regressor', 'master_model_container', 'y_train', 'prep_pipe', 'data_before_preprocess', 'X_test', 'gpu_param', 'n_jobs_param'}
2020-10-20 12:27:26,470:INFO:Preparing display monitor
2020-10-20 12:27:26,470:INFO:Importing libraries
2020-10-20 12:27:26,470:INFO:Copying data for preprocessing
2020-10-20 12:27:26,665:INFO:Declaring preprocessing parameters
2020-10-20 12:27:26,870:INFO:Creating preprocessing pipeline
2020-10-20 12:27:28,525:INFO:Preprocessing pipeline created successfully
2020-10-20 12:27:28,525:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-20 12:27:28,525:INFO:Creating global containers
2020-10-20 12:27:28,526:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-20 12:27:39,489:INFO:Creating grid variables
2020-10-20 12:27:39,534:INFO:create_model_container: 0
2020-10-20 12:27:39,534:INFO:master_model_container: 0
2020-10-20 12:27:39,534:INFO:display_container: 0
2020-10-20 12:27:39,538:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-20 12:27:39,538:INFO:setup() succesfully completed......................................
2020-10-20 12:27:39,622:INFO:Initializing create_model()
2020-10-20 12:27:39,622:INFO:create_model(estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2020-10-20 12:27:39,622:INFO:Checking exceptions
2020-10-20 12:27:39,622:INFO:Preparing display monitor
2020-10-20 12:27:39,643:INFO:Importing libraries
2020-10-20 12:27:39,643:INFO:Copying training dataset
2020-10-20 12:27:39,650:INFO:Defining folds
2020-10-20 12:27:39,651:INFO:Declaring metric variables
2020-10-20 12:27:39,657:INFO:Importing untrained model
2020-10-20 12:27:39,664:INFO:Extra Trees Regressor Imported succesfully
2020-10-20 12:27:39,676:INFO:Starting cross validation
2020-10-20 12:27:39,682:INFO:Cross validating with n_jobs=-1
2020-10-20 12:40:26,209:INFO:Calculating mean and std
2020-10-20 12:40:26,251:INFO:Creating metrics dataframe
2020-10-20 12:40:26,351:INFO:Finalizing model
2020-10-20 12:41:14,819:INFO:Uploading results into container
2020-10-20 12:41:14,819:INFO:Uploading model into container now
2020-10-20 12:41:14,921:INFO:create_model_container: 1
2020-10-20 12:41:14,921:INFO:master_model_container: 1
2020-10-20 12:41:14,921:INFO:display_container: 1
2020-10-20 12:41:14,923:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-20 12:41:14,923:INFO:create_model() succesfully completed......................................
2020-10-20 12:41:15,574:INFO:Initializing save_model()
2020-10-20 12:41:15,575:INFO:save_model(model=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), model_name=./results/parallel_r/model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-20 12:41:15,575:INFO:Adding model into prep_pipe
2020-10-20 12:41:20,674:INFO:./results/parallel_r/model.pkl saved in current working directory
2020-10-20 12:41:20,680:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                 ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0,
                                     criterion='mse', max_depth=None,
                                     max_features='auto', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, random_state=0, verbose=0,
                                     warm_start=False)]],
         verbose=False)
2020-10-20 12:41:20,681:INFO:save_model() succesfully completed......................................
2020-10-20 13:10:28,619:INFO:Initializing predict_model()
2020-10-20 13:10:28,620:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:28,620:INFO:Checking exceptions
2020-10-20 13:10:28,620:INFO:Preloading libraries
2020-10-20 13:10:28,620:INFO:Preparing display monitor
2020-10-20 13:10:29,269:INFO:Initializing predict_model()
2020-10-20 13:10:29,269:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:29,269:INFO:Checking exceptions
2020-10-20 13:10:29,269:INFO:Preloading libraries
2020-10-20 13:10:29,269:INFO:Preparing display monitor
2020-10-20 13:10:29,546:INFO:Initializing predict_model()
2020-10-20 13:10:29,546:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:29,546:INFO:Checking exceptions
2020-10-20 13:10:29,546:INFO:Preloading libraries
2020-10-20 13:10:29,547:INFO:Preparing display monitor
2020-10-20 13:10:29,817:INFO:Initializing predict_model()
2020-10-20 13:10:29,817:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:29,817:INFO:Checking exceptions
2020-10-20 13:10:29,817:INFO:Preloading libraries
2020-10-20 13:10:29,817:INFO:Preparing display monitor
2020-10-20 13:10:30,096:INFO:Initializing predict_model()
2020-10-20 13:10:30,096:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:30,097:INFO:Checking exceptions
2020-10-20 13:10:30,097:INFO:Preloading libraries
2020-10-20 13:10:30,097:INFO:Preparing display monitor
2020-10-20 13:10:30,369:INFO:Initializing predict_model()
2020-10-20 13:10:30,369:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:30,369:INFO:Checking exceptions
2020-10-20 13:10:30,369:INFO:Preloading libraries
2020-10-20 13:10:30,369:INFO:Preparing display monitor
2020-10-20 13:10:30,646:INFO:Initializing predict_model()
2020-10-20 13:10:30,646:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:30,646:INFO:Checking exceptions
2020-10-20 13:10:30,646:INFO:Preloading libraries
2020-10-20 13:10:30,646:INFO:Preparing display monitor
2020-10-20 13:10:30,902:INFO:Initializing predict_model()
2020-10-20 13:10:30,902:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:30,902:INFO:Checking exceptions
2020-10-20 13:10:30,902:INFO:Preloading libraries
2020-10-20 13:10:30,902:INFO:Preparing display monitor
2020-10-20 13:10:31,153:INFO:Initializing predict_model()
2020-10-20 13:10:31,153:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:31,153:INFO:Checking exceptions
2020-10-20 13:10:31,153:INFO:Preloading libraries
2020-10-20 13:10:31,153:INFO:Preparing display monitor
2020-10-20 13:10:31,408:INFO:Initializing predict_model()
2020-10-20 13:10:31,408:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:31,408:INFO:Checking exceptions
2020-10-20 13:10:31,408:INFO:Preloading libraries
2020-10-20 13:10:31,409:INFO:Preparing display monitor
2020-10-20 13:10:31,661:INFO:Initializing predict_model()
2020-10-20 13:10:31,661:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:31,661:INFO:Checking exceptions
2020-10-20 13:10:31,661:INFO:Preloading libraries
2020-10-20 13:10:31,661:INFO:Preparing display monitor
2020-10-20 13:10:31,934:INFO:Initializing predict_model()
2020-10-20 13:10:31,935:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:31,935:INFO:Checking exceptions
2020-10-20 13:10:31,935:INFO:Preloading libraries
2020-10-20 13:10:31,935:INFO:Preparing display monitor
2020-10-20 13:10:32,217:INFO:Initializing predict_model()
2020-10-20 13:10:32,217:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:32,217:INFO:Checking exceptions
2020-10-20 13:10:32,217:INFO:Preloading libraries
2020-10-20 13:10:32,217:INFO:Preparing display monitor
2020-10-20 13:10:32,481:INFO:Initializing predict_model()
2020-10-20 13:10:32,481:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:32,481:INFO:Checking exceptions
2020-10-20 13:10:32,481:INFO:Preloading libraries
2020-10-20 13:10:32,482:INFO:Preparing display monitor
2020-10-20 13:10:32,745:INFO:Initializing predict_model()
2020-10-20 13:10:32,746:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:32,746:INFO:Checking exceptions
2020-10-20 13:10:32,746:INFO:Preloading libraries
2020-10-20 13:10:32,746:INFO:Preparing display monitor
2020-10-20 13:10:33,023:INFO:Initializing predict_model()
2020-10-20 13:10:33,024:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:33,024:INFO:Checking exceptions
2020-10-20 13:10:33,024:INFO:Preloading libraries
2020-10-20 13:10:33,024:INFO:Preparing display monitor
2020-10-20 13:10:33,295:INFO:Initializing predict_model()
2020-10-20 13:10:33,295:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:33,296:INFO:Checking exceptions
2020-10-20 13:10:33,296:INFO:Preloading libraries
2020-10-20 13:10:33,296:INFO:Preparing display monitor
2020-10-20 13:10:33,573:INFO:Initializing predict_model()
2020-10-20 13:10:33,573:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:33,573:INFO:Checking exceptions
2020-10-20 13:10:33,573:INFO:Preloading libraries
2020-10-20 13:10:33,573:INFO:Preparing display monitor
2020-10-20 13:10:33,854:INFO:Initializing predict_model()
2020-10-20 13:10:33,855:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:33,855:INFO:Checking exceptions
2020-10-20 13:10:33,855:INFO:Preloading libraries
2020-10-20 13:10:33,855:INFO:Preparing display monitor
2020-10-20 13:10:34,108:INFO:Initializing predict_model()
2020-10-20 13:10:34,109:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:10:34,109:INFO:Checking exceptions
2020-10-20 13:10:34,109:INFO:Preloading libraries
2020-10-20 13:10:34,109:INFO:Preparing display monitor
2020-10-20 13:11:15,733:INFO:PyCaret Supervised Module
2020-10-20 13:11:15,733:INFO:ML Usecase: regression
2020-10-20 13:11:15,733:INFO:version 2.2.0
2020-10-20 13:11:15,733:INFO:Initializing setup()
2020-10-20 13:11:15,733:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-20 13:11:15,733:INFO:Checking environment
2020-10-20 13:11:15,734:INFO:python_version: 3.7.6
2020-10-20 13:11:15,734:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-20 13:11:15,734:INFO:machine: AMD64
2020-10-20 13:11:15,734:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-20 13:11:15,736:INFO:Memory: svmem(total=16969158656, available=8958009344, percent=47.2, used=8011149312, free=8958009344)
2020-10-20 13:11:15,736:INFO:Physical Core: 4
2020-10-20 13:11:15,736:INFO:Logical Core: 8
2020-10-20 13:11:15,736:INFO:Checking libraries
2020-10-20 13:11:15,736:INFO:pd==1.1.3
2020-10-20 13:11:15,736:INFO:numpy==1.18.1
2020-10-20 13:11:15,736:INFO:sklearn==0.23.2
2020-10-20 13:11:15,736:INFO:xgboost==1.2.1
2020-10-20 13:11:15,736:INFO:lightgbm==2.3.1
2020-10-20 13:11:15,736:INFO:catboost==0.24.2
2020-10-20 13:11:15,736:INFO:mlflow==1.11.0
2020-10-20 13:11:15,736:INFO:Checking Exceptions
2020-10-20 13:11:15,736:INFO:Declaring global variables
2020-10-20 13:11:15,736:INFO:USI: dc9b
2020-10-20 13:11:15,736:INFO:pycaret_globals: {'target_param', 'logging_param', 'pycaret_globals', 'imputation_classifier', '_all_models_internal', 'fold_param', 'stratify_param', 'X', 'create_model_container', 'fold_generator', '_ml_usecase', '_gpu_n_jobs_param', '_all_models', 'fix_imbalance_method_param', 'fold_groups_param', 'exp_name_log', 'USI', 'transform_target_param', 'transform_target_method_param', 'fix_imbalance_param', 'y_test', 'log_plots_param', 'X_train', 'experiment__', 'seed', 'iterative_imputation_iters_param', '_internal_pipeline', 'y', 'fold_shuffle_param', 'html_param', 'display_container', '_all_metrics', 'imputation_regressor', 'master_model_container', 'y_train', 'prep_pipe', 'data_before_preprocess', 'X_test', 'gpu_param', 'n_jobs_param'}
2020-10-20 13:11:15,737:INFO:Preparing display monitor
2020-10-20 13:11:15,737:INFO:Importing libraries
2020-10-20 13:11:15,737:INFO:Copying data for preprocessing
2020-10-20 13:11:15,958:INFO:Declaring preprocessing parameters
2020-10-20 13:11:16,157:INFO:Creating preprocessing pipeline
2020-10-20 13:11:17,610:INFO:Preprocessing pipeline created successfully
2020-10-20 13:11:17,611:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-20 13:11:17,611:INFO:Creating global containers
2020-10-20 13:11:17,611:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-20 13:11:27,049:INFO:Creating grid variables
2020-10-20 13:11:27,092:INFO:create_model_container: 0
2020-10-20 13:11:27,092:INFO:master_model_container: 0
2020-10-20 13:11:27,092:INFO:display_container: 0
2020-10-20 13:11:27,096:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-20 13:11:27,096:INFO:setup() succesfully completed......................................
2020-10-20 13:11:27,215:INFO:Initializing create_model()
2020-10-20 13:11:27,215:INFO:create_model(estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2020-10-20 13:11:27,215:INFO:Checking exceptions
2020-10-20 13:11:27,215:INFO:Preparing display monitor
2020-10-20 13:11:27,229:INFO:Importing libraries
2020-10-20 13:11:27,229:INFO:Copying training dataset
2020-10-20 13:11:27,236:INFO:Defining folds
2020-10-20 13:11:27,236:INFO:Declaring metric variables
2020-10-20 13:11:27,244:INFO:Importing untrained model
2020-10-20 13:11:27,252:INFO:Extra Trees Regressor Imported succesfully
2020-10-20 13:11:27,270:INFO:Starting cross validation
2020-10-20 13:11:27,270:INFO:Cross validating with n_jobs=-1
2020-10-20 13:44:02,782:INFO:Calculating mean and std
2020-10-20 13:44:02,821:INFO:Creating metrics dataframe
2020-10-20 13:44:02,898:INFO:Finalizing model
2020-10-20 13:44:51,490:INFO:Uploading results into container
2020-10-20 13:44:51,493:INFO:Uploading model into container now
2020-10-20 13:44:51,539:INFO:create_model_container: 1
2020-10-20 13:44:51,540:INFO:master_model_container: 1
2020-10-20 13:44:51,540:INFO:display_container: 1
2020-10-20 13:44:51,541:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-20 13:44:51,541:INFO:create_model() succesfully completed......................................
2020-10-20 13:44:52,116:INFO:Initializing save_model()
2020-10-20 13:44:52,116:INFO:save_model(model=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), model_name=./results/parallel_z/model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-20 13:44:52,116:INFO:Adding model into prep_pipe
2020-10-20 13:44:57,113:INFO:./results/parallel_z/model.pkl saved in current working directory
2020-10-20 13:44:57,117:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                 ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0,
                                     criterion='mse', max_depth=None,
                                     max_features='auto', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, random_state=0, verbose=0,
                                     warm_start=False)]],
         verbose=False)
2020-10-20 13:44:57,118:INFO:save_model() succesfully completed......................................
2020-10-20 13:47:36,128:INFO:Initializing predict_model()
2020-10-20 13:47:36,128:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:36,128:INFO:Checking exceptions
2020-10-20 13:47:36,128:INFO:Preloading libraries
2020-10-20 13:47:36,128:INFO:Preparing display monitor
2020-10-20 13:47:36,451:INFO:Initializing predict_model()
2020-10-20 13:47:36,452:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:36,452:INFO:Checking exceptions
2020-10-20 13:47:36,452:INFO:Preloading libraries
2020-10-20 13:47:36,452:INFO:Preparing display monitor
2020-10-20 13:47:36,710:INFO:Initializing predict_model()
2020-10-20 13:47:36,711:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:36,711:INFO:Checking exceptions
2020-10-20 13:47:36,711:INFO:Preloading libraries
2020-10-20 13:47:36,711:INFO:Preparing display monitor
2020-10-20 13:47:36,979:INFO:Initializing predict_model()
2020-10-20 13:47:36,979:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:36,979:INFO:Checking exceptions
2020-10-20 13:47:36,979:INFO:Preloading libraries
2020-10-20 13:47:36,979:INFO:Preparing display monitor
2020-10-20 13:47:37,256:INFO:Initializing predict_model()
2020-10-20 13:47:37,256:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:37,256:INFO:Checking exceptions
2020-10-20 13:47:37,256:INFO:Preloading libraries
2020-10-20 13:47:37,256:INFO:Preparing display monitor
2020-10-20 13:47:37,535:INFO:Initializing predict_model()
2020-10-20 13:47:37,535:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:37,535:INFO:Checking exceptions
2020-10-20 13:47:37,535:INFO:Preloading libraries
2020-10-20 13:47:37,535:INFO:Preparing display monitor
2020-10-20 13:47:37,811:INFO:Initializing predict_model()
2020-10-20 13:47:37,811:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:37,811:INFO:Checking exceptions
2020-10-20 13:47:37,811:INFO:Preloading libraries
2020-10-20 13:47:37,811:INFO:Preparing display monitor
2020-10-20 13:47:38,083:INFO:Initializing predict_model()
2020-10-20 13:47:38,083:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:38,083:INFO:Checking exceptions
2020-10-20 13:47:38,083:INFO:Preloading libraries
2020-10-20 13:47:38,083:INFO:Preparing display monitor
2020-10-20 13:47:38,341:INFO:Initializing predict_model()
2020-10-20 13:47:38,341:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:38,341:INFO:Checking exceptions
2020-10-20 13:47:38,341:INFO:Preloading libraries
2020-10-20 13:47:38,341:INFO:Preparing display monitor
2020-10-20 13:47:38,619:INFO:Initializing predict_model()
2020-10-20 13:47:38,619:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:38,619:INFO:Checking exceptions
2020-10-20 13:47:38,619:INFO:Preloading libraries
2020-10-20 13:47:38,620:INFO:Preparing display monitor
2020-10-20 13:47:38,891:INFO:Initializing predict_model()
2020-10-20 13:47:38,891:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:38,891:INFO:Checking exceptions
2020-10-20 13:47:38,891:INFO:Preloading libraries
2020-10-20 13:47:38,891:INFO:Preparing display monitor
2020-10-20 13:47:39,169:INFO:Initializing predict_model()
2020-10-20 13:47:39,169:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:39,169:INFO:Checking exceptions
2020-10-20 13:47:39,169:INFO:Preloading libraries
2020-10-20 13:47:39,169:INFO:Preparing display monitor
2020-10-20 13:47:39,429:INFO:Initializing predict_model()
2020-10-20 13:47:39,429:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:39,429:INFO:Checking exceptions
2020-10-20 13:47:39,429:INFO:Preloading libraries
2020-10-20 13:47:39,429:INFO:Preparing display monitor
2020-10-20 13:47:39,702:INFO:Initializing predict_model()
2020-10-20 13:47:39,702:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:39,702:INFO:Checking exceptions
2020-10-20 13:47:39,702:INFO:Preloading libraries
2020-10-20 13:47:39,702:INFO:Preparing display monitor
2020-10-20 13:47:39,953:INFO:Initializing predict_model()
2020-10-20 13:47:39,953:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:39,953:INFO:Checking exceptions
2020-10-20 13:47:39,953:INFO:Preloading libraries
2020-10-20 13:47:39,953:INFO:Preparing display monitor
2020-10-20 13:47:40,199:INFO:Initializing predict_model()
2020-10-20 13:47:40,199:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:40,199:INFO:Checking exceptions
2020-10-20 13:47:40,199:INFO:Preloading libraries
2020-10-20 13:47:40,199:INFO:Preparing display monitor
2020-10-20 13:47:40,452:INFO:Initializing predict_model()
2020-10-20 13:47:40,452:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:40,453:INFO:Checking exceptions
2020-10-20 13:47:40,453:INFO:Preloading libraries
2020-10-20 13:47:40,453:INFO:Preparing display monitor
2020-10-20 13:47:40,732:INFO:Initializing predict_model()
2020-10-20 13:47:40,732:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:40,732:INFO:Checking exceptions
2020-10-20 13:47:40,732:INFO:Preloading libraries
2020-10-20 13:47:40,732:INFO:Preparing display monitor
2020-10-20 13:47:40,992:INFO:Initializing predict_model()
2020-10-20 13:47:40,992:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:40,992:INFO:Checking exceptions
2020-10-20 13:47:40,992:INFO:Preloading libraries
2020-10-20 13:47:40,992:INFO:Preparing display monitor
2020-10-20 13:47:41,267:INFO:Initializing predict_model()
2020-10-20 13:47:41,267:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 13:47:41,267:INFO:Checking exceptions
2020-10-20 13:47:41,267:INFO:Preloading libraries
2020-10-20 13:47:41,267:INFO:Preparing display monitor
2020-10-20 13:48:27,312:INFO:PyCaret Supervised Module
2020-10-20 13:48:27,312:INFO:ML Usecase: regression
2020-10-20 13:48:27,312:INFO:version 2.2.0
2020-10-20 13:48:27,313:INFO:Initializing setup()
2020-10-20 13:48:27,313:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-20 13:48:27,313:INFO:Checking environment
2020-10-20 13:48:27,313:INFO:python_version: 3.7.6
2020-10-20 13:48:27,313:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-20 13:48:27,313:INFO:machine: AMD64
2020-10-20 13:48:27,313:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-20 13:48:27,313:INFO:Memory: svmem(total=16969158656, available=8629194752, percent=49.1, used=8339963904, free=8629194752)
2020-10-20 13:48:27,313:INFO:Physical Core: 4
2020-10-20 13:48:27,313:INFO:Logical Core: 8
2020-10-20 13:48:27,313:INFO:Checking libraries
2020-10-20 13:48:27,313:INFO:pd==1.1.3
2020-10-20 13:48:27,313:INFO:numpy==1.18.1
2020-10-20 13:48:27,313:INFO:sklearn==0.23.2
2020-10-20 13:48:27,313:INFO:xgboost==1.2.1
2020-10-20 13:48:27,313:INFO:lightgbm==2.3.1
2020-10-20 13:48:27,313:INFO:catboost==0.24.2
2020-10-20 13:48:27,313:INFO:mlflow==1.11.0
2020-10-20 13:48:27,313:INFO:Checking Exceptions
2020-10-20 13:48:27,313:INFO:Declaring global variables
2020-10-20 13:48:27,313:INFO:USI: b645
2020-10-20 13:48:27,313:INFO:pycaret_globals: {'target_param', 'logging_param', 'pycaret_globals', 'imputation_classifier', '_all_models_internal', 'fold_param', 'stratify_param', 'X', 'create_model_container', 'fold_generator', '_ml_usecase', '_gpu_n_jobs_param', '_all_models', 'fix_imbalance_method_param', 'fold_groups_param', 'exp_name_log', 'USI', 'transform_target_param', 'transform_target_method_param', 'fix_imbalance_param', 'y_test', 'log_plots_param', 'X_train', 'experiment__', 'seed', 'iterative_imputation_iters_param', '_internal_pipeline', 'y', 'fold_shuffle_param', 'html_param', 'display_container', '_all_metrics', 'imputation_regressor', 'master_model_container', 'y_train', 'prep_pipe', 'data_before_preprocess', 'X_test', 'gpu_param', 'n_jobs_param'}
2020-10-20 13:48:27,314:INFO:Preparing display monitor
2020-10-20 13:48:27,314:INFO:Importing libraries
2020-10-20 13:48:27,314:INFO:Copying data for preprocessing
2020-10-20 13:48:27,599:INFO:Declaring preprocessing parameters
2020-10-20 13:48:27,856:INFO:Creating preprocessing pipeline
2020-10-20 13:48:29,917:INFO:Preprocessing pipeline created successfully
2020-10-20 13:48:29,918:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-20 13:48:29,918:INFO:Creating global containers
2020-10-20 13:48:29,918:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-20 13:48:42,347:INFO:Creating grid variables
2020-10-20 13:48:42,403:INFO:create_model_container: 0
2020-10-20 13:48:42,403:INFO:master_model_container: 0
2020-10-20 13:48:42,403:INFO:display_container: 0
2020-10-20 13:48:42,407:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-20 13:48:42,407:INFO:setup() succesfully completed......................................
2020-10-20 13:48:42,532:INFO:Initializing create_model()
2020-10-20 13:48:42,532:INFO:create_model(estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2020-10-20 13:48:42,532:INFO:Checking exceptions
2020-10-20 13:48:42,532:INFO:Preparing display monitor
2020-10-20 13:48:42,546:INFO:Importing libraries
2020-10-20 13:48:42,546:INFO:Copying training dataset
2020-10-20 13:48:42,555:INFO:Defining folds
2020-10-20 13:48:42,555:INFO:Declaring metric variables
2020-10-20 13:48:42,561:INFO:Importing untrained model
2020-10-20 13:48:42,569:INFO:Extra Trees Regressor Imported succesfully
2020-10-20 13:48:42,585:INFO:Starting cross validation
2020-10-20 13:48:42,585:INFO:Cross validating with n_jobs=-1
2020-10-20 14:03:05,876:INFO:Calculating mean and std
2020-10-20 14:03:05,979:INFO:Creating metrics dataframe
2020-10-20 14:03:06,151:INFO:Finalizing model
2020-10-20 14:04:05,884:INFO:Uploading results into container
2020-10-20 14:04:05,888:INFO:Uploading model into container now
2020-10-20 14:04:06,056:INFO:create_model_container: 1
2020-10-20 14:04:06,056:INFO:master_model_container: 1
2020-10-20 14:04:06,056:INFO:display_container: 1
2020-10-20 14:04:06,061:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False)
2020-10-20 14:04:06,061:INFO:create_model() succesfully completed......................................
2020-10-20 14:04:07,996:INFO:Initializing save_model()
2020-10-20 14:04:07,996:INFO:save_model(model=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), model_name=./results/orthogonal_r/model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-20 14:04:07,997:INFO:Adding model into prep_pipe
2020-10-20 14:04:15,050:INFO:./results/orthogonal_r/model.pkl saved in current working directory
2020-10-20 14:04:15,057:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                 ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0,
                                     criterion='mse', max_depth=None,
                                     max_features='auto', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, random_state=0, verbose=0,
                                     warm_start=False)]],
         verbose=False)
2020-10-20 14:04:15,057:INFO:save_model() succesfully completed......................................
2020-10-20 14:04:31,797:INFO:Initializing predict_model()
2020-10-20 14:04:31,797:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:31,797:INFO:Checking exceptions
2020-10-20 14:04:31,798:INFO:Preloading libraries
2020-10-20 14:04:31,798:INFO:Preparing display monitor
2020-10-20 14:04:32,187:INFO:Initializing predict_model()
2020-10-20 14:04:32,187:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:32,188:INFO:Checking exceptions
2020-10-20 14:04:32,188:INFO:Preloading libraries
2020-10-20 14:04:32,188:INFO:Preparing display monitor
2020-10-20 14:04:32,471:INFO:Initializing predict_model()
2020-10-20 14:04:32,471:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:32,471:INFO:Checking exceptions
2020-10-20 14:04:32,471:INFO:Preloading libraries
2020-10-20 14:04:32,471:INFO:Preparing display monitor
2020-10-20 14:04:32,744:INFO:Initializing predict_model()
2020-10-20 14:04:32,744:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:32,744:INFO:Checking exceptions
2020-10-20 14:04:32,744:INFO:Preloading libraries
2020-10-20 14:04:32,744:INFO:Preparing display monitor
2020-10-20 14:04:33,017:INFO:Initializing predict_model()
2020-10-20 14:04:33,017:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:33,017:INFO:Checking exceptions
2020-10-20 14:04:33,017:INFO:Preloading libraries
2020-10-20 14:04:33,018:INFO:Preparing display monitor
2020-10-20 14:04:33,325:INFO:Initializing predict_model()
2020-10-20 14:04:33,325:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:33,326:INFO:Checking exceptions
2020-10-20 14:04:33,326:INFO:Preloading libraries
2020-10-20 14:04:33,326:INFO:Preparing display monitor
2020-10-20 14:04:33,611:INFO:Initializing predict_model()
2020-10-20 14:04:33,611:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:33,611:INFO:Checking exceptions
2020-10-20 14:04:33,611:INFO:Preloading libraries
2020-10-20 14:04:33,611:INFO:Preparing display monitor
2020-10-20 14:04:33,898:INFO:Initializing predict_model()
2020-10-20 14:04:33,898:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:33,898:INFO:Checking exceptions
2020-10-20 14:04:33,898:INFO:Preloading libraries
2020-10-20 14:04:33,898:INFO:Preparing display monitor
2020-10-20 14:04:34,166:INFO:Initializing predict_model()
2020-10-20 14:04:34,166:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:34,166:INFO:Checking exceptions
2020-10-20 14:04:34,166:INFO:Preloading libraries
2020-10-20 14:04:34,166:INFO:Preparing display monitor
2020-10-20 14:04:34,450:INFO:Initializing predict_model()
2020-10-20 14:04:34,451:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:34,451:INFO:Checking exceptions
2020-10-20 14:04:34,451:INFO:Preloading libraries
2020-10-20 14:04:34,451:INFO:Preparing display monitor
2020-10-20 14:04:34,755:INFO:Initializing predict_model()
2020-10-20 14:04:34,755:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:34,755:INFO:Checking exceptions
2020-10-20 14:04:34,755:INFO:Preloading libraries
2020-10-20 14:04:34,755:INFO:Preparing display monitor
2020-10-20 14:04:35,041:INFO:Initializing predict_model()
2020-10-20 14:04:35,041:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:35,041:INFO:Checking exceptions
2020-10-20 14:04:35,041:INFO:Preloading libraries
2020-10-20 14:04:35,041:INFO:Preparing display monitor
2020-10-20 14:04:35,308:INFO:Initializing predict_model()
2020-10-20 14:04:35,308:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:35,308:INFO:Checking exceptions
2020-10-20 14:04:35,308:INFO:Preloading libraries
2020-10-20 14:04:35,308:INFO:Preparing display monitor
2020-10-20 14:04:35,577:INFO:Initializing predict_model()
2020-10-20 14:04:35,577:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:35,577:INFO:Checking exceptions
2020-10-20 14:04:35,577:INFO:Preloading libraries
2020-10-20 14:04:35,577:INFO:Preparing display monitor
2020-10-20 14:04:35,861:INFO:Initializing predict_model()
2020-10-20 14:04:35,861:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:35,861:INFO:Checking exceptions
2020-10-20 14:04:35,861:INFO:Preloading libraries
2020-10-20 14:04:35,862:INFO:Preparing display monitor
2020-10-20 14:04:36,156:INFO:Initializing predict_model()
2020-10-20 14:04:36,156:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:36,157:INFO:Checking exceptions
2020-10-20 14:04:36,157:INFO:Preloading libraries
2020-10-20 14:04:36,157:INFO:Preparing display monitor
2020-10-20 14:04:36,455:INFO:Initializing predict_model()
2020-10-20 14:04:36,455:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:36,455:INFO:Checking exceptions
2020-10-20 14:04:36,455:INFO:Preloading libraries
2020-10-20 14:04:36,455:INFO:Preparing display monitor
2020-10-20 14:04:36,740:INFO:Initializing predict_model()
2020-10-20 14:04:36,740:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:36,740:INFO:Checking exceptions
2020-10-20 14:04:36,740:INFO:Preloading libraries
2020-10-20 14:04:36,740:INFO:Preparing display monitor
2020-10-20 14:04:37,037:INFO:Initializing predict_model()
2020-10-20 14:04:37,037:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:37,037:INFO:Checking exceptions
2020-10-20 14:04:37,037:INFO:Preloading libraries
2020-10-20 14:04:37,037:INFO:Preparing display monitor
2020-10-20 14:04:37,326:INFO:Initializing predict_model()
2020-10-20 14:04:37,326:INFO:predict_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=0, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 14:04:37,326:INFO:Checking exceptions
2020-10-20 14:04:37,326:INFO:Preloading libraries
2020-10-20 14:04:37,326:INFO:Preparing display monitor
2020-10-20 14:04:58,167:INFO:PyCaret Supervised Module
2020-10-20 14:04:58,167:INFO:ML Usecase: regression
2020-10-20 14:04:58,167:INFO:version 2.2.0
2020-10-20 14:04:58,167:INFO:Initializing setup()
2020-10-20 14:04:58,167:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-20 14:04:58,167:INFO:Checking environment
2020-10-20 14:04:58,167:INFO:python_version: 3.7.6
2020-10-20 14:04:58,167:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-20 14:04:58,167:INFO:machine: AMD64
2020-10-20 14:04:58,167:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-20 14:04:58,167:INFO:Memory: svmem(total=16969158656, available=8309252096, percent=51.0, used=8659906560, free=8309252096)
2020-10-20 14:04:58,167:INFO:Physical Core: 4
2020-10-20 14:04:58,167:INFO:Logical Core: 8
2020-10-20 14:04:58,167:INFO:Checking libraries
2020-10-20 14:04:58,167:INFO:pd==1.1.3
2020-10-20 14:04:58,167:INFO:numpy==1.18.1
2020-10-20 14:04:58,167:INFO:sklearn==0.23.2
2020-10-20 14:04:58,167:INFO:xgboost==1.2.1
2020-10-20 14:04:58,167:INFO:lightgbm==2.3.1
2020-10-20 14:04:58,167:INFO:catboost==0.24.2
2020-10-20 14:04:58,167:INFO:mlflow==1.11.0
2020-10-20 14:04:58,168:INFO:Checking Exceptions
2020-10-20 14:04:58,168:INFO:Declaring global variables
2020-10-20 14:04:58,168:INFO:USI: 00ad
2020-10-20 14:04:58,168:INFO:pycaret_globals: {'target_param', 'logging_param', 'pycaret_globals', 'imputation_classifier', '_all_models_internal', 'fold_param', 'stratify_param', 'X', 'create_model_container', 'fold_generator', '_ml_usecase', '_gpu_n_jobs_param', '_all_models', 'fix_imbalance_method_param', 'fold_groups_param', 'exp_name_log', 'USI', 'transform_target_param', 'transform_target_method_param', 'fix_imbalance_param', 'y_test', 'log_plots_param', 'X_train', 'experiment__', 'seed', 'iterative_imputation_iters_param', '_internal_pipeline', 'y', 'fold_shuffle_param', 'html_param', 'display_container', '_all_metrics', 'imputation_regressor', 'master_model_container', 'y_train', 'prep_pipe', 'data_before_preprocess', 'X_test', 'gpu_param', 'n_jobs_param'}
2020-10-20 14:04:58,168:INFO:Preparing display monitor
2020-10-20 14:04:58,168:INFO:Importing libraries
2020-10-20 14:04:58,168:INFO:Copying data for preprocessing
2020-10-20 14:04:58,448:INFO:Declaring preprocessing parameters
2020-10-20 14:04:58,702:INFO:Creating preprocessing pipeline
2020-10-20 14:05:00,813:INFO:Preprocessing pipeline created successfully
2020-10-20 14:05:00,813:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-20 14:05:00,813:INFO:Creating global containers
2020-10-20 14:05:00,814:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-20 14:05:13,439:INFO:Creating grid variables
2020-10-20 14:05:13,496:INFO:create_model_container: 0
2020-10-20 14:05:13,496:INFO:master_model_container: 0
2020-10-20 14:05:13,496:INFO:display_container: 0
2020-10-20 14:05:13,499:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-20 14:05:13,500:INFO:setup() succesfully completed......................................
2020-10-20 14:05:13,625:INFO:Initializing create_model()
2020-10-20 14:05:13,625:INFO:create_model(estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2020-10-20 14:05:13,625:INFO:Checking exceptions
2020-10-20 14:05:13,625:INFO:Preparing display monitor
2020-10-20 14:05:13,639:INFO:Importing libraries
2020-10-20 14:05:13,639:INFO:Copying training dataset
2020-10-20 14:05:13,647:INFO:Defining folds
2020-10-20 14:05:13,647:INFO:Declaring metric variables
2020-10-20 14:05:13,654:INFO:Importing untrained model
2020-10-20 14:05:13,662:INFO:K Neighbors Regressor Imported succesfully
2020-10-20 14:05:13,675:INFO:Starting cross validation
2020-10-20 14:05:13,676:INFO:Cross validating with n_jobs=-1
2020-10-20 14:05:37,068:INFO:Calculating mean and std
2020-10-20 14:05:37,069:INFO:Creating metrics dataframe
2020-10-20 14:05:37,083:INFO:Finalizing model
2020-10-20 14:05:39,135:INFO:Uploading results into container
2020-10-20 14:05:39,135:INFO:Uploading model into container now
2020-10-20 14:05:39,148:INFO:create_model_container: 1
2020-10-20 14:05:39,148:INFO:master_model_container: 1
2020-10-20 14:05:39,148:INFO:display_container: 1
2020-10-20 14:05:39,148:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2020-10-20 14:05:39,148:INFO:create_model() succesfully completed......................................
2020-10-20 14:05:39,245:INFO:Initializing save_model()
2020-10-20 14:05:39,245:INFO:save_model(model=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), model_name=./results/orthogonal_z/model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2020-10-20 14:05:39,245:INFO:Adding model into prep_pipe
2020-10-20 14:05:39,434:INFO:./results/orthogonal_z/model.pkl saved in current working directory
2020-10-20 14:05:39,439:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 KNeighborsRegressor(algorithm='auto', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=-1, n_neighbors=5, p=2,
                                     weights='uniform')]],
         verbose=False)
2020-10-20 14:05:39,439:INFO:save_model() succesfully completed......................................
2020-10-20 15:25:55,219:INFO:Initializing predict_model()
2020-10-20 15:25:55,219:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:55,219:INFO:Checking exceptions
2020-10-20 15:25:55,220:INFO:Preloading libraries
2020-10-20 15:25:55,220:INFO:Preparing display monitor
2020-10-20 15:25:55,522:INFO:Initializing predict_model()
2020-10-20 15:25:55,523:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:55,523:INFO:Checking exceptions
2020-10-20 15:25:55,523:INFO:Preloading libraries
2020-10-20 15:25:55,523:INFO:Preparing display monitor
2020-10-20 15:25:55,802:INFO:Initializing predict_model()
2020-10-20 15:25:55,802:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:55,802:INFO:Checking exceptions
2020-10-20 15:25:55,803:INFO:Preloading libraries
2020-10-20 15:25:55,803:INFO:Preparing display monitor
2020-10-20 15:25:56,075:INFO:Initializing predict_model()
2020-10-20 15:25:56,075:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:56,075:INFO:Checking exceptions
2020-10-20 15:25:56,076:INFO:Preloading libraries
2020-10-20 15:25:56,076:INFO:Preparing display monitor
2020-10-20 15:25:56,345:INFO:Initializing predict_model()
2020-10-20 15:25:56,345:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:56,345:INFO:Checking exceptions
2020-10-20 15:25:56,346:INFO:Preloading libraries
2020-10-20 15:25:56,346:INFO:Preparing display monitor
2020-10-20 15:25:56,626:INFO:Initializing predict_model()
2020-10-20 15:25:56,626:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:56,626:INFO:Checking exceptions
2020-10-20 15:25:56,626:INFO:Preloading libraries
2020-10-20 15:25:56,626:INFO:Preparing display monitor
2020-10-20 15:25:56,903:INFO:Initializing predict_model()
2020-10-20 15:25:56,903:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:56,903:INFO:Checking exceptions
2020-10-20 15:25:56,903:INFO:Preloading libraries
2020-10-20 15:25:56,903:INFO:Preparing display monitor
2020-10-20 15:25:57,180:INFO:Initializing predict_model()
2020-10-20 15:25:57,180:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:57,180:INFO:Checking exceptions
2020-10-20 15:25:57,180:INFO:Preloading libraries
2020-10-20 15:25:57,180:INFO:Preparing display monitor
2020-10-20 15:25:57,459:INFO:Initializing predict_model()
2020-10-20 15:25:57,459:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:57,459:INFO:Checking exceptions
2020-10-20 15:25:57,459:INFO:Preloading libraries
2020-10-20 15:25:57,459:INFO:Preparing display monitor
2020-10-20 15:25:57,736:INFO:Initializing predict_model()
2020-10-20 15:25:57,737:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:57,737:INFO:Checking exceptions
2020-10-20 15:25:57,737:INFO:Preloading libraries
2020-10-20 15:25:57,737:INFO:Preparing display monitor
2020-10-20 15:25:58,019:INFO:Initializing predict_model()
2020-10-20 15:25:58,019:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:58,019:INFO:Checking exceptions
2020-10-20 15:25:58,019:INFO:Preloading libraries
2020-10-20 15:25:58,020:INFO:Preparing display monitor
2020-10-20 15:25:58,301:INFO:Initializing predict_model()
2020-10-20 15:25:58,301:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:58,301:INFO:Checking exceptions
2020-10-20 15:25:58,301:INFO:Preloading libraries
2020-10-20 15:25:58,301:INFO:Preparing display monitor
2020-10-20 15:25:58,579:INFO:Initializing predict_model()
2020-10-20 15:25:58,579:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:58,579:INFO:Checking exceptions
2020-10-20 15:25:58,580:INFO:Preloading libraries
2020-10-20 15:25:58,580:INFO:Preparing display monitor
2020-10-20 15:25:58,857:INFO:Initializing predict_model()
2020-10-20 15:25:58,857:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:58,857:INFO:Checking exceptions
2020-10-20 15:25:58,857:INFO:Preloading libraries
2020-10-20 15:25:58,857:INFO:Preparing display monitor
2020-10-20 15:25:59,139:INFO:Initializing predict_model()
2020-10-20 15:25:59,139:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:59,139:INFO:Checking exceptions
2020-10-20 15:25:59,139:INFO:Preloading libraries
2020-10-20 15:25:59,139:INFO:Preparing display monitor
2020-10-20 15:25:59,413:INFO:Initializing predict_model()
2020-10-20 15:25:59,413:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:59,413:INFO:Checking exceptions
2020-10-20 15:25:59,413:INFO:Preloading libraries
2020-10-20 15:25:59,413:INFO:Preparing display monitor
2020-10-20 15:25:59,693:INFO:Initializing predict_model()
2020-10-20 15:25:59,693:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:59,693:INFO:Checking exceptions
2020-10-20 15:25:59,693:INFO:Preloading libraries
2020-10-20 15:25:59,693:INFO:Preparing display monitor
2020-10-20 15:25:59,972:INFO:Initializing predict_model()
2020-10-20 15:25:59,972:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:25:59,972:INFO:Checking exceptions
2020-10-20 15:25:59,972:INFO:Preloading libraries
2020-10-20 15:25:59,973:INFO:Preparing display monitor
2020-10-20 15:26:00,260:INFO:Initializing predict_model()
2020-10-20 15:26:00,260:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:26:00,260:INFO:Checking exceptions
2020-10-20 15:26:00,260:INFO:Preloading libraries
2020-10-20 15:26:00,260:INFO:Preparing display monitor
2020-10-20 15:26:00,540:INFO:Initializing predict_model()
2020-10-20 15:26:00,540:INFO:predict_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 15:26:00,540:INFO:Checking exceptions
2020-10-20 15:26:00,540:INFO:Preloading libraries
2020-10-20 15:26:00,540:INFO:Preparing display monitor
2020-10-20 16:10:11,661:INFO:PyCaret Supervised Module
2020-10-20 16:10:11,661:INFO:ML Usecase: regression
2020-10-20 16:10:11,661:INFO:version 2.2.0
2020-10-20 16:10:11,661:INFO:Initializing setup()
2020-10-20 16:10:11,661:INFO:setup(target=target, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=0, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=False, profile=False, display=None)
2020-10-20 16:10:11,661:INFO:Checking environment
2020-10-20 16:10:11,661:INFO:python_version: 3.7.6
2020-10-20 16:10:11,661:INFO:python_build: ('default', 'Jan  8 2020 20:23:39')
2020-10-20 16:10:11,662:INFO:machine: AMD64
2020-10-20 16:10:11,662:INFO:platform: Windows-10-10.0.18362-SP0
2020-10-20 16:10:11,662:INFO:Memory: svmem(total=16969158656, available=10682490880, percent=37.0, used=6286667776, free=10682490880)
2020-10-20 16:10:11,662:INFO:Physical Core: 4
2020-10-20 16:10:11,662:INFO:Logical Core: 8
2020-10-20 16:10:11,662:INFO:Checking libraries
2020-10-20 16:10:11,662:INFO:pd==1.1.3
2020-10-20 16:10:11,662:INFO:numpy==1.18.1
2020-10-20 16:10:11,662:INFO:sklearn==0.23.2
2020-10-20 16:10:11,662:INFO:xgboost==1.2.1
2020-10-20 16:10:11,662:INFO:lightgbm==2.3.1
2020-10-20 16:10:11,662:INFO:catboost==0.24.2
2020-10-20 16:10:11,662:INFO:mlflow==1.11.0
2020-10-20 16:10:11,662:INFO:Checking Exceptions
2020-10-20 16:10:11,662:INFO:Declaring global variables
2020-10-20 16:10:11,662:INFO:USI: 70fb
2020-10-20 16:10:11,662:INFO:pycaret_globals: {'target_param', 'logging_param', 'pycaret_globals', 'imputation_classifier', '_all_models_internal', 'fold_param', 'stratify_param', 'X', 'create_model_container', 'fold_generator', '_ml_usecase', '_gpu_n_jobs_param', '_all_models', 'fix_imbalance_method_param', 'fold_groups_param', 'exp_name_log', 'USI', 'transform_target_param', 'transform_target_method_param', 'fix_imbalance_param', 'y_test', 'log_plots_param', 'X_train', 'experiment__', 'seed', 'iterative_imputation_iters_param', '_internal_pipeline', 'y', 'fold_shuffle_param', 'html_param', 'display_container', '_all_metrics', 'imputation_regressor', 'master_model_container', 'y_train', 'prep_pipe', 'data_before_preprocess', 'X_test', 'gpu_param', 'n_jobs_param'}
2020-10-20 16:10:11,662:INFO:Preparing display monitor
2020-10-20 16:10:11,662:INFO:Importing libraries
2020-10-20 16:10:11,662:INFO:Copying data for preprocessing
2020-10-20 16:10:11,696:INFO:Declaring preprocessing parameters
2020-10-20 16:10:11,748:INFO:Creating preprocessing pipeline
2020-10-20 16:10:12,678:INFO:Preprocessing pipeline created successfully
2020-10-20 16:10:12,678:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2020-10-20 16:10:12,678:INFO:Creating global containers
2020-10-20 16:10:12,678:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2020-10-20 16:10:17,680:INFO:Creating grid variables
2020-10-20 16:10:17,698:INFO:create_model_container: 0
2020-10-20 16:10:17,698:INFO:master_model_container: 0
2020-10-20 16:10:17,698:INFO:display_container: 0
2020-10-20 16:10:17,702:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                                                  target='target')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2020-10-20 16:10:17,702:INFO:setup() succesfully completed......................................
2020-10-20 16:10:17,843:INFO:Initializing load_model()
2020-10-20 16:10:17,844:INFO:load_model(model_name=./results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 16:10:18,099:INFO:Initializing predict_model()
2020-10-20 16:10:18,099:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:18,099:INFO:Checking exceptions
2020-10-20 16:10:18,099:INFO:Preloading libraries
2020-10-20 16:10:18,099:INFO:Preparing display monitor
2020-10-20 16:10:18,311:INFO:Initializing predict_model()
2020-10-20 16:10:18,311:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:18,311:INFO:Checking exceptions
2020-10-20 16:10:18,311:INFO:Preloading libraries
2020-10-20 16:10:18,311:INFO:Preparing display monitor
2020-10-20 16:10:18,450:INFO:Initializing predict_model()
2020-10-20 16:10:18,450:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:18,450:INFO:Checking exceptions
2020-10-20 16:10:18,450:INFO:Preloading libraries
2020-10-20 16:10:18,450:INFO:Preparing display monitor
2020-10-20 16:10:18,587:INFO:Initializing predict_model()
2020-10-20 16:10:18,588:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:18,588:INFO:Checking exceptions
2020-10-20 16:10:18,588:INFO:Preloading libraries
2020-10-20 16:10:18,588:INFO:Preparing display monitor
2020-10-20 16:10:18,725:INFO:Initializing predict_model()
2020-10-20 16:10:18,725:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:18,725:INFO:Checking exceptions
2020-10-20 16:10:18,725:INFO:Preloading libraries
2020-10-20 16:10:18,725:INFO:Preparing display monitor
2020-10-20 16:10:18,863:INFO:Initializing predict_model()
2020-10-20 16:10:18,863:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:18,863:INFO:Checking exceptions
2020-10-20 16:10:18,863:INFO:Preloading libraries
2020-10-20 16:10:18,863:INFO:Preparing display monitor
2020-10-20 16:10:19,000:INFO:Initializing predict_model()
2020-10-20 16:10:19,000:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:19,000:INFO:Checking exceptions
2020-10-20 16:10:19,000:INFO:Preloading libraries
2020-10-20 16:10:19,000:INFO:Preparing display monitor
2020-10-20 16:10:19,137:INFO:Initializing predict_model()
2020-10-20 16:10:19,137:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:19,137:INFO:Checking exceptions
2020-10-20 16:10:19,137:INFO:Preloading libraries
2020-10-20 16:10:19,137:INFO:Preparing display monitor
2020-10-20 16:10:19,275:INFO:Initializing predict_model()
2020-10-20 16:10:19,275:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:19,276:INFO:Checking exceptions
2020-10-20 16:10:19,276:INFO:Preloading libraries
2020-10-20 16:10:19,276:INFO:Preparing display monitor
2020-10-20 16:10:19,410:INFO:Initializing predict_model()
2020-10-20 16:10:19,410:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:19,410:INFO:Checking exceptions
2020-10-20 16:10:19,410:INFO:Preloading libraries
2020-10-20 16:10:19,411:INFO:Preparing display monitor
2020-10-20 16:10:19,549:INFO:Initializing predict_model()
2020-10-20 16:10:19,550:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:19,550:INFO:Checking exceptions
2020-10-20 16:10:19,550:INFO:Preloading libraries
2020-10-20 16:10:19,550:INFO:Preparing display monitor
2020-10-20 16:10:19,685:INFO:Initializing predict_model()
2020-10-20 16:10:19,685:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:19,685:INFO:Checking exceptions
2020-10-20 16:10:19,685:INFO:Preloading libraries
2020-10-20 16:10:19,685:INFO:Preparing display monitor
2020-10-20 16:10:19,818:INFO:Initializing predict_model()
2020-10-20 16:10:19,818:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:19,818:INFO:Checking exceptions
2020-10-20 16:10:19,819:INFO:Preloading libraries
2020-10-20 16:10:19,819:INFO:Preparing display monitor
2020-10-20 16:10:19,958:INFO:Initializing predict_model()
2020-10-20 16:10:19,958:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:19,958:INFO:Checking exceptions
2020-10-20 16:10:19,958:INFO:Preloading libraries
2020-10-20 16:10:19,958:INFO:Preparing display monitor
2020-10-20 16:10:20,085:INFO:Initializing predict_model()
2020-10-20 16:10:20,085:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:20,085:INFO:Checking exceptions
2020-10-20 16:10:20,086:INFO:Preloading libraries
2020-10-20 16:10:20,086:INFO:Preparing display monitor
2020-10-20 16:10:20,210:INFO:Initializing predict_model()
2020-10-20 16:10:20,210:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:20,210:INFO:Checking exceptions
2020-10-20 16:10:20,210:INFO:Preloading libraries
2020-10-20 16:10:20,210:INFO:Preparing display monitor
2020-10-20 16:10:20,336:INFO:Initializing predict_model()
2020-10-20 16:10:20,336:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:20,336:INFO:Checking exceptions
2020-10-20 16:10:20,336:INFO:Preloading libraries
2020-10-20 16:10:20,337:INFO:Preparing display monitor
2020-10-20 16:10:20,463:INFO:Initializing predict_model()
2020-10-20 16:10:20,463:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:20,463:INFO:Checking exceptions
2020-10-20 16:10:20,463:INFO:Preloading libraries
2020-10-20 16:10:20,463:INFO:Preparing display monitor
2020-10-20 16:10:20,595:INFO:Initializing predict_model()
2020-10-20 16:10:20,595:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:20,595:INFO:Checking exceptions
2020-10-20 16:10:20,596:INFO:Preloading libraries
2020-10-20 16:10:20,596:INFO:Preparing display monitor
2020-10-20 16:10:20,729:INFO:Initializing predict_model()
2020-10-20 16:10:20,729:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:20,729:INFO:Checking exceptions
2020-10-20 16:10:20,729:INFO:Preloading libraries
2020-10-20 16:10:20,730:INFO:Preparing display monitor
2020-10-20 16:10:20,863:INFO:Initializing predict_model()
2020-10-20 16:10:20,863:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:20,863:INFO:Checking exceptions
2020-10-20 16:10:20,863:INFO:Preloading libraries
2020-10-20 16:10:20,863:INFO:Preparing display monitor
2020-10-20 16:10:20,997:INFO:Initializing predict_model()
2020-10-20 16:10:20,997:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:20,997:INFO:Checking exceptions
2020-10-20 16:10:20,997:INFO:Preloading libraries
2020-10-20 16:10:20,997:INFO:Preparing display monitor
2020-10-20 16:10:21,130:INFO:Initializing predict_model()
2020-10-20 16:10:21,130:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:21,130:INFO:Checking exceptions
2020-10-20 16:10:21,131:INFO:Preloading libraries
2020-10-20 16:10:21,131:INFO:Preparing display monitor
2020-10-20 16:10:21,264:INFO:Initializing predict_model()
2020-10-20 16:10:21,264:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:21,264:INFO:Checking exceptions
2020-10-20 16:10:21,264:INFO:Preloading libraries
2020-10-20 16:10:21,264:INFO:Preparing display monitor
2020-10-20 16:10:21,397:INFO:Initializing predict_model()
2020-10-20 16:10:21,397:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:21,397:INFO:Checking exceptions
2020-10-20 16:10:21,397:INFO:Preloading libraries
2020-10-20 16:10:21,397:INFO:Preparing display monitor
2020-10-20 16:10:21,534:INFO:Initializing predict_model()
2020-10-20 16:10:21,534:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:21,534:INFO:Checking exceptions
2020-10-20 16:10:21,534:INFO:Preloading libraries
2020-10-20 16:10:21,534:INFO:Preparing display monitor
2020-10-20 16:10:21,670:INFO:Initializing predict_model()
2020-10-20 16:10:21,670:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:21,670:INFO:Checking exceptions
2020-10-20 16:10:21,670:INFO:Preloading libraries
2020-10-20 16:10:21,670:INFO:Preparing display monitor
2020-10-20 16:10:21,804:INFO:Initializing predict_model()
2020-10-20 16:10:21,804:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:21,804:INFO:Checking exceptions
2020-10-20 16:10:21,804:INFO:Preloading libraries
2020-10-20 16:10:21,804:INFO:Preparing display monitor
2020-10-20 16:10:21,938:INFO:Initializing predict_model()
2020-10-20 16:10:21,938:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:21,938:INFO:Checking exceptions
2020-10-20 16:10:21,938:INFO:Preloading libraries
2020-10-20 16:10:21,938:INFO:Preparing display monitor
2020-10-20 16:10:22,071:INFO:Initializing predict_model()
2020-10-20 16:10:22,071:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:22,071:INFO:Checking exceptions
2020-10-20 16:10:22,071:INFO:Preloading libraries
2020-10-20 16:10:22,071:INFO:Preparing display monitor
2020-10-20 16:10:22,203:INFO:Initializing predict_model()
2020-10-20 16:10:22,203:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:22,203:INFO:Checking exceptions
2020-10-20 16:10:22,203:INFO:Preloading libraries
2020-10-20 16:10:22,204:INFO:Preparing display monitor
2020-10-20 16:10:22,339:INFO:Initializing predict_model()
2020-10-20 16:10:22,339:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:22,339:INFO:Checking exceptions
2020-10-20 16:10:22,339:INFO:Preloading libraries
2020-10-20 16:10:22,339:INFO:Preparing display monitor
2020-10-20 16:10:22,472:INFO:Initializing predict_model()
2020-10-20 16:10:22,472:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:22,472:INFO:Checking exceptions
2020-10-20 16:10:22,472:INFO:Preloading libraries
2020-10-20 16:10:22,472:INFO:Preparing display monitor
2020-10-20 16:10:22,603:INFO:Initializing predict_model()
2020-10-20 16:10:22,604:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:22,604:INFO:Checking exceptions
2020-10-20 16:10:22,604:INFO:Preloading libraries
2020-10-20 16:10:22,604:INFO:Preparing display monitor
2020-10-20 16:10:22,740:INFO:Initializing predict_model()
2020-10-20 16:10:22,740:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:22,741:INFO:Checking exceptions
2020-10-20 16:10:22,741:INFO:Preloading libraries
2020-10-20 16:10:22,741:INFO:Preparing display monitor
2020-10-20 16:10:22,875:INFO:Initializing predict_model()
2020-10-20 16:10:22,875:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:22,875:INFO:Checking exceptions
2020-10-20 16:10:22,876:INFO:Preloading libraries
2020-10-20 16:10:22,876:INFO:Preparing display monitor
2020-10-20 16:10:23,012:INFO:Initializing predict_model()
2020-10-20 16:10:23,012:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:23,012:INFO:Checking exceptions
2020-10-20 16:10:23,012:INFO:Preloading libraries
2020-10-20 16:10:23,012:INFO:Preparing display monitor
2020-10-20 16:10:23,140:INFO:Initializing predict_model()
2020-10-20 16:10:23,140:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:23,140:INFO:Checking exceptions
2020-10-20 16:10:23,140:INFO:Preloading libraries
2020-10-20 16:10:23,140:INFO:Preparing display monitor
2020-10-20 16:10:23,260:INFO:Initializing predict_model()
2020-10-20 16:10:23,260:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:23,260:INFO:Checking exceptions
2020-10-20 16:10:23,260:INFO:Preloading libraries
2020-10-20 16:10:23,260:INFO:Preparing display monitor
2020-10-20 16:10:23,386:INFO:Initializing predict_model()
2020-10-20 16:10:23,386:INFO:predict_model(estimator=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='target',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000012687F25788>]],
         verbose=False), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:10:23,386:INFO:Checking exceptions
2020-10-20 16:10:23,386:INFO:Preloading libraries
2020-10-20 16:10:23,386:INFO:Preparing display monitor
2020-10-20 16:18:11,064:INFO:Initializing load_model()
2020-10-20 16:18:11,064:INFO:load_model(model_name=./results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 16:18:11,445:INFO:Initializing predict_model()
2020-10-20 16:18:11,445:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:11,445:INFO:Checking exceptions
2020-10-20 16:18:11,445:INFO:Preloading libraries
2020-10-20 16:18:11,713:INFO:Initializing predict_model()
2020-10-20 16:18:11,713:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:11,713:INFO:Checking exceptions
2020-10-20 16:18:11,713:INFO:Preloading libraries
2020-10-20 16:18:11,911:INFO:Initializing predict_model()
2020-10-20 16:18:11,911:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:11,911:INFO:Checking exceptions
2020-10-20 16:18:11,911:INFO:Preloading libraries
2020-10-20 16:18:12,115:INFO:Initializing predict_model()
2020-10-20 16:18:12,115:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:12,115:INFO:Checking exceptions
2020-10-20 16:18:12,115:INFO:Preloading libraries
2020-10-20 16:18:12,312:INFO:Initializing predict_model()
2020-10-20 16:18:12,312:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:12,312:INFO:Checking exceptions
2020-10-20 16:18:12,312:INFO:Preloading libraries
2020-10-20 16:18:12,474:INFO:Initializing predict_model()
2020-10-20 16:18:12,475:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:12,475:INFO:Checking exceptions
2020-10-20 16:18:12,475:INFO:Preloading libraries
2020-10-20 16:18:12,628:INFO:Initializing predict_model()
2020-10-20 16:18:12,628:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:12,628:INFO:Checking exceptions
2020-10-20 16:18:12,628:INFO:Preloading libraries
2020-10-20 16:18:12,770:INFO:Initializing predict_model()
2020-10-20 16:18:12,770:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:12,770:INFO:Checking exceptions
2020-10-20 16:18:12,770:INFO:Preloading libraries
2020-10-20 16:18:12,896:INFO:Initializing predict_model()
2020-10-20 16:18:12,896:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:12,896:INFO:Checking exceptions
2020-10-20 16:18:12,896:INFO:Preloading libraries
2020-10-20 16:18:13,024:INFO:Initializing predict_model()
2020-10-20 16:18:13,024:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:13,024:INFO:Checking exceptions
2020-10-20 16:18:13,024:INFO:Preloading libraries
2020-10-20 16:18:13,153:INFO:Initializing predict_model()
2020-10-20 16:18:13,153:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:13,153:INFO:Checking exceptions
2020-10-20 16:18:13,154:INFO:Preloading libraries
2020-10-20 16:18:13,289:INFO:Initializing predict_model()
2020-10-20 16:18:13,289:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:13,289:INFO:Checking exceptions
2020-10-20 16:18:13,289:INFO:Preloading libraries
2020-10-20 16:18:13,420:INFO:Initializing predict_model()
2020-10-20 16:18:13,420:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:13,420:INFO:Checking exceptions
2020-10-20 16:18:13,420:INFO:Preloading libraries
2020-10-20 16:18:13,560:INFO:Initializing predict_model()
2020-10-20 16:18:13,560:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:13,560:INFO:Checking exceptions
2020-10-20 16:18:13,560:INFO:Preloading libraries
2020-10-20 16:18:13,728:INFO:Initializing predict_model()
2020-10-20 16:18:13,728:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:13,729:INFO:Checking exceptions
2020-10-20 16:18:13,729:INFO:Preloading libraries
2020-10-20 16:18:13,883:INFO:Initializing predict_model()
2020-10-20 16:18:13,883:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:13,883:INFO:Checking exceptions
2020-10-20 16:18:13,883:INFO:Preloading libraries
2020-10-20 16:18:14,020:INFO:Initializing predict_model()
2020-10-20 16:18:14,020:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:14,020:INFO:Checking exceptions
2020-10-20 16:18:14,020:INFO:Preloading libraries
2020-10-20 16:18:14,136:INFO:Initializing predict_model()
2020-10-20 16:18:14,136:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:14,136:INFO:Checking exceptions
2020-10-20 16:18:14,136:INFO:Preloading libraries
2020-10-20 16:18:14,250:INFO:Initializing predict_model()
2020-10-20 16:18:14,250:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:14,250:INFO:Checking exceptions
2020-10-20 16:18:14,250:INFO:Preloading libraries
2020-10-20 16:18:14,361:INFO:Initializing predict_model()
2020-10-20 16:18:14,361:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:14,361:INFO:Checking exceptions
2020-10-20 16:18:14,361:INFO:Preloading libraries
2020-10-20 16:18:14,473:INFO:Initializing predict_model()
2020-10-20 16:18:14,473:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:14,473:INFO:Checking exceptions
2020-10-20 16:18:14,473:INFO:Preloading libraries
2020-10-20 16:18:14,583:INFO:Initializing predict_model()
2020-10-20 16:18:14,583:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:14,584:INFO:Checking exceptions
2020-10-20 16:18:14,584:INFO:Preloading libraries
2020-10-20 16:18:14,694:INFO:Initializing predict_model()
2020-10-20 16:18:14,694:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:14,694:INFO:Checking exceptions
2020-10-20 16:18:14,694:INFO:Preloading libraries
2020-10-20 16:18:14,811:INFO:Initializing predict_model()
2020-10-20 16:18:14,811:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:14,811:INFO:Checking exceptions
2020-10-20 16:18:14,811:INFO:Preloading libraries
2020-10-20 16:18:14,927:INFO:Initializing predict_model()
2020-10-20 16:18:14,927:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:14,927:INFO:Checking exceptions
2020-10-20 16:18:14,927:INFO:Preloading libraries
2020-10-20 16:18:15,042:INFO:Initializing predict_model()
2020-10-20 16:18:15,042:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:15,042:INFO:Checking exceptions
2020-10-20 16:18:15,042:INFO:Preloading libraries
2020-10-20 16:18:15,159:INFO:Initializing predict_model()
2020-10-20 16:18:15,159:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:15,159:INFO:Checking exceptions
2020-10-20 16:18:15,159:INFO:Preloading libraries
2020-10-20 16:18:15,279:INFO:Initializing predict_model()
2020-10-20 16:18:15,279:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:15,279:INFO:Checking exceptions
2020-10-20 16:18:15,279:INFO:Preloading libraries
2020-10-20 16:18:15,398:INFO:Initializing predict_model()
2020-10-20 16:18:15,399:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:15,399:INFO:Checking exceptions
2020-10-20 16:18:15,399:INFO:Preloading libraries
2020-10-20 16:18:15,515:INFO:Initializing predict_model()
2020-10-20 16:18:15,515:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:15,515:INFO:Checking exceptions
2020-10-20 16:18:15,515:INFO:Preloading libraries
2020-10-20 16:18:15,630:INFO:Initializing predict_model()
2020-10-20 16:18:15,631:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:15,631:INFO:Checking exceptions
2020-10-20 16:18:15,631:INFO:Preloading libraries
2020-10-20 16:18:15,743:INFO:Initializing predict_model()
2020-10-20 16:18:15,743:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:15,743:INFO:Checking exceptions
2020-10-20 16:18:15,743:INFO:Preloading libraries
2020-10-20 16:18:15,856:INFO:Initializing predict_model()
2020-10-20 16:18:15,856:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:15,856:INFO:Checking exceptions
2020-10-20 16:18:15,856:INFO:Preloading libraries
2020-10-20 16:18:15,969:INFO:Initializing predict_model()
2020-10-20 16:18:15,969:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:15,969:INFO:Checking exceptions
2020-10-20 16:18:15,969:INFO:Preloading libraries
2020-10-20 16:18:16,083:INFO:Initializing predict_model()
2020-10-20 16:18:16,083:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:16,083:INFO:Checking exceptions
2020-10-20 16:18:16,083:INFO:Preloading libraries
2020-10-20 16:18:16,192:INFO:Initializing predict_model()
2020-10-20 16:18:16,192:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:16,192:INFO:Checking exceptions
2020-10-20 16:18:16,192:INFO:Preloading libraries
2020-10-20 16:18:16,305:INFO:Initializing predict_model()
2020-10-20 16:18:16,305:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:16,305:INFO:Checking exceptions
2020-10-20 16:18:16,305:INFO:Preloading libraries
2020-10-20 16:18:16,420:INFO:Initializing predict_model()
2020-10-20 16:18:16,420:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:16,420:INFO:Checking exceptions
2020-10-20 16:18:16,420:INFO:Preloading libraries
2020-10-20 16:18:16,535:INFO:Initializing predict_model()
2020-10-20 16:18:16,535:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:16,535:INFO:Checking exceptions
2020-10-20 16:18:16,535:INFO:Preloading libraries
2020-10-20 16:18:16,648:INFO:Initializing predict_model()
2020-10-20 16:18:16,648:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A02F3E188>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:18:16,648:INFO:Checking exceptions
2020-10-20 16:18:16,649:INFO:Preloading libraries
2020-10-20 16:31:51,544:INFO:Initializing load_model()
2020-10-20 16:31:51,544:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 16:31:51,690:INFO:Initializing predict_model()
2020-10-20 16:31:51,691:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:51,691:INFO:Checking exceptions
2020-10-20 16:31:51,691:INFO:Preloading libraries
2020-10-20 16:31:51,857:INFO:Initializing predict_model()
2020-10-20 16:31:51,857:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:51,857:INFO:Checking exceptions
2020-10-20 16:31:51,857:INFO:Preloading libraries
2020-10-20 16:31:51,984:INFO:Initializing predict_model()
2020-10-20 16:31:51,984:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:51,984:INFO:Checking exceptions
2020-10-20 16:31:51,984:INFO:Preloading libraries
2020-10-20 16:31:52,125:INFO:Initializing predict_model()
2020-10-20 16:31:52,125:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:52,125:INFO:Checking exceptions
2020-10-20 16:31:52,125:INFO:Preloading libraries
2020-10-20 16:31:52,272:INFO:Initializing predict_model()
2020-10-20 16:31:52,273:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:52,273:INFO:Checking exceptions
2020-10-20 16:31:52,273:INFO:Preloading libraries
2020-10-20 16:31:52,529:INFO:Initializing predict_model()
2020-10-20 16:31:52,529:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:52,529:INFO:Checking exceptions
2020-10-20 16:31:52,529:INFO:Preloading libraries
2020-10-20 16:31:52,828:INFO:Initializing predict_model()
2020-10-20 16:31:52,829:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:52,829:INFO:Checking exceptions
2020-10-20 16:31:52,829:INFO:Preloading libraries
2020-10-20 16:31:53,025:INFO:Initializing predict_model()
2020-10-20 16:31:53,025:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:53,025:INFO:Checking exceptions
2020-10-20 16:31:53,025:INFO:Preloading libraries
2020-10-20 16:31:53,189:INFO:Initializing predict_model()
2020-10-20 16:31:53,189:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:53,189:INFO:Checking exceptions
2020-10-20 16:31:53,190:INFO:Preloading libraries
2020-10-20 16:31:53,392:INFO:Initializing predict_model()
2020-10-20 16:31:53,392:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:53,392:INFO:Checking exceptions
2020-10-20 16:31:53,392:INFO:Preloading libraries
2020-10-20 16:31:53,577:INFO:Initializing predict_model()
2020-10-20 16:31:53,577:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:53,577:INFO:Checking exceptions
2020-10-20 16:31:53,577:INFO:Preloading libraries
2020-10-20 16:31:53,726:INFO:Initializing predict_model()
2020-10-20 16:31:53,726:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:53,726:INFO:Checking exceptions
2020-10-20 16:31:53,726:INFO:Preloading libraries
2020-10-20 16:31:53,849:INFO:Initializing predict_model()
2020-10-20 16:31:53,849:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:53,849:INFO:Checking exceptions
2020-10-20 16:31:53,849:INFO:Preloading libraries
2020-10-20 16:31:53,968:INFO:Initializing predict_model()
2020-10-20 16:31:53,968:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:53,969:INFO:Checking exceptions
2020-10-20 16:31:53,969:INFO:Preloading libraries
2020-10-20 16:31:54,087:INFO:Initializing predict_model()
2020-10-20 16:31:54,087:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:54,087:INFO:Checking exceptions
2020-10-20 16:31:54,087:INFO:Preloading libraries
2020-10-20 16:31:54,205:INFO:Initializing predict_model()
2020-10-20 16:31:54,205:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:54,205:INFO:Checking exceptions
2020-10-20 16:31:54,205:INFO:Preloading libraries
2020-10-20 16:31:54,323:INFO:Initializing predict_model()
2020-10-20 16:31:54,323:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:54,323:INFO:Checking exceptions
2020-10-20 16:31:54,323:INFO:Preloading libraries
2020-10-20 16:31:54,436:INFO:Initializing predict_model()
2020-10-20 16:31:54,436:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:54,436:INFO:Checking exceptions
2020-10-20 16:31:54,436:INFO:Preloading libraries
2020-10-20 16:31:54,548:INFO:Initializing predict_model()
2020-10-20 16:31:54,548:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:54,549:INFO:Checking exceptions
2020-10-20 16:31:54,549:INFO:Preloading libraries
2020-10-20 16:31:54,662:INFO:Initializing predict_model()
2020-10-20 16:31:54,662:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:54,662:INFO:Checking exceptions
2020-10-20 16:31:54,662:INFO:Preloading libraries
2020-10-20 16:31:54,778:INFO:Initializing predict_model()
2020-10-20 16:31:54,778:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:54,778:INFO:Checking exceptions
2020-10-20 16:31:54,778:INFO:Preloading libraries
2020-10-20 16:31:54,897:INFO:Initializing predict_model()
2020-10-20 16:31:54,897:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:54,897:INFO:Checking exceptions
2020-10-20 16:31:54,897:INFO:Preloading libraries
2020-10-20 16:31:55,013:INFO:Initializing predict_model()
2020-10-20 16:31:55,013:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:55,013:INFO:Checking exceptions
2020-10-20 16:31:55,013:INFO:Preloading libraries
2020-10-20 16:31:55,131:INFO:Initializing predict_model()
2020-10-20 16:31:55,131:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:55,131:INFO:Checking exceptions
2020-10-20 16:31:55,131:INFO:Preloading libraries
2020-10-20 16:31:55,248:INFO:Initializing predict_model()
2020-10-20 16:31:55,249:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:55,249:INFO:Checking exceptions
2020-10-20 16:31:55,249:INFO:Preloading libraries
2020-10-20 16:31:55,366:INFO:Initializing predict_model()
2020-10-20 16:31:55,366:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:55,366:INFO:Checking exceptions
2020-10-20 16:31:55,366:INFO:Preloading libraries
2020-10-20 16:31:55,486:INFO:Initializing predict_model()
2020-10-20 16:31:55,486:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:55,487:INFO:Checking exceptions
2020-10-20 16:31:55,487:INFO:Preloading libraries
2020-10-20 16:31:55,600:INFO:Initializing predict_model()
2020-10-20 16:31:55,600:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:55,600:INFO:Checking exceptions
2020-10-20 16:31:55,600:INFO:Preloading libraries
2020-10-20 16:31:55,713:INFO:Initializing predict_model()
2020-10-20 16:31:55,713:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:55,713:INFO:Checking exceptions
2020-10-20 16:31:55,713:INFO:Preloading libraries
2020-10-20 16:31:55,828:INFO:Initializing predict_model()
2020-10-20 16:31:55,828:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:55,828:INFO:Checking exceptions
2020-10-20 16:31:55,828:INFO:Preloading libraries
2020-10-20 16:31:55,944:INFO:Initializing predict_model()
2020-10-20 16:31:55,945:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:55,945:INFO:Checking exceptions
2020-10-20 16:31:55,945:INFO:Preloading libraries
2020-10-20 16:31:56,060:INFO:Initializing predict_model()
2020-10-20 16:31:56,060:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:56,060:INFO:Checking exceptions
2020-10-20 16:31:56,060:INFO:Preloading libraries
2020-10-20 16:31:56,177:INFO:Initializing predict_model()
2020-10-20 16:31:56,177:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:56,177:INFO:Checking exceptions
2020-10-20 16:31:56,177:INFO:Preloading libraries
2020-10-20 16:31:56,292:INFO:Initializing predict_model()
2020-10-20 16:31:56,292:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:56,293:INFO:Checking exceptions
2020-10-20 16:31:56,293:INFO:Preloading libraries
2020-10-20 16:31:56,417:INFO:Initializing predict_model()
2020-10-20 16:31:56,417:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:56,417:INFO:Checking exceptions
2020-10-20 16:31:56,418:INFO:Preloading libraries
2020-10-20 16:31:56,538:INFO:Initializing predict_model()
2020-10-20 16:31:56,538:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:56,538:INFO:Checking exceptions
2020-10-20 16:31:56,538:INFO:Preloading libraries
2020-10-20 16:31:56,653:INFO:Initializing predict_model()
2020-10-20 16:31:56,653:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:56,653:INFO:Checking exceptions
2020-10-20 16:31:56,653:INFO:Preloading libraries
2020-10-20 16:31:56,788:INFO:Initializing predict_model()
2020-10-20 16:31:56,788:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:56,788:INFO:Checking exceptions
2020-10-20 16:31:56,788:INFO:Preloading libraries
2020-10-20 16:31:56,923:INFO:Initializing predict_model()
2020-10-20 16:31:56,923:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:56,923:INFO:Checking exceptions
2020-10-20 16:31:56,923:INFO:Preloading libraries
2020-10-20 16:31:57,063:INFO:Initializing predict_model()
2020-10-20 16:31:57,063:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000020A2FD29BC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:31:57,063:INFO:Checking exceptions
2020-10-20 16:31:57,063:INFO:Preloading libraries
2020-10-20 16:45:14,007:INFO:Initializing load_model()
2020-10-20 16:45:14,007:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 16:52:50,062:INFO:Initializing load_model()
2020-10-20 16:52:50,062:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 16:53:08,656:INFO:Initializing predict_model()
2020-10-20 16:53:08,657:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:08,657:INFO:Checking exceptions
2020-10-20 16:53:08,657:INFO:Preloading libraries
2020-10-20 16:53:08,799:INFO:Initializing predict_model()
2020-10-20 16:53:08,799:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:08,799:INFO:Checking exceptions
2020-10-20 16:53:08,799:INFO:Preloading libraries
2020-10-20 16:53:08,913:INFO:Initializing predict_model()
2020-10-20 16:53:08,913:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:08,913:INFO:Checking exceptions
2020-10-20 16:53:08,913:INFO:Preloading libraries
2020-10-20 16:53:09,026:INFO:Initializing predict_model()
2020-10-20 16:53:09,027:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:09,027:INFO:Checking exceptions
2020-10-20 16:53:09,027:INFO:Preloading libraries
2020-10-20 16:53:09,140:INFO:Initializing predict_model()
2020-10-20 16:53:09,140:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:09,140:INFO:Checking exceptions
2020-10-20 16:53:09,140:INFO:Preloading libraries
2020-10-20 16:53:09,254:INFO:Initializing predict_model()
2020-10-20 16:53:09,254:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:09,254:INFO:Checking exceptions
2020-10-20 16:53:09,254:INFO:Preloading libraries
2020-10-20 16:53:09,368:INFO:Initializing predict_model()
2020-10-20 16:53:09,368:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:09,368:INFO:Checking exceptions
2020-10-20 16:53:09,368:INFO:Preloading libraries
2020-10-20 16:53:09,482:INFO:Initializing predict_model()
2020-10-20 16:53:09,482:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:09,482:INFO:Checking exceptions
2020-10-20 16:53:09,483:INFO:Preloading libraries
2020-10-20 16:53:09,598:INFO:Initializing predict_model()
2020-10-20 16:53:09,599:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:09,599:INFO:Checking exceptions
2020-10-20 16:53:09,599:INFO:Preloading libraries
2020-10-20 16:53:09,716:INFO:Initializing predict_model()
2020-10-20 16:53:09,716:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:09,716:INFO:Checking exceptions
2020-10-20 16:53:09,716:INFO:Preloading libraries
2020-10-20 16:53:09,829:INFO:Initializing predict_model()
2020-10-20 16:53:09,830:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:09,830:INFO:Checking exceptions
2020-10-20 16:53:09,830:INFO:Preloading libraries
2020-10-20 16:53:09,942:INFO:Initializing predict_model()
2020-10-20 16:53:09,942:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:09,943:INFO:Checking exceptions
2020-10-20 16:53:09,943:INFO:Preloading libraries
2020-10-20 16:53:10,056:INFO:Initializing predict_model()
2020-10-20 16:53:10,056:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:10,056:INFO:Checking exceptions
2020-10-20 16:53:10,056:INFO:Preloading libraries
2020-10-20 16:53:10,171:INFO:Initializing predict_model()
2020-10-20 16:53:10,171:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:10,171:INFO:Checking exceptions
2020-10-20 16:53:10,171:INFO:Preloading libraries
2020-10-20 16:53:10,287:INFO:Initializing predict_model()
2020-10-20 16:53:10,287:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:10,288:INFO:Checking exceptions
2020-10-20 16:53:10,288:INFO:Preloading libraries
2020-10-20 16:53:10,401:INFO:Initializing predict_model()
2020-10-20 16:53:10,401:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:10,401:INFO:Checking exceptions
2020-10-20 16:53:10,401:INFO:Preloading libraries
2020-10-20 16:53:10,516:INFO:Initializing predict_model()
2020-10-20 16:53:10,517:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:10,517:INFO:Checking exceptions
2020-10-20 16:53:10,517:INFO:Preloading libraries
2020-10-20 16:53:10,631:INFO:Initializing predict_model()
2020-10-20 16:53:10,632:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:10,632:INFO:Checking exceptions
2020-10-20 16:53:10,632:INFO:Preloading libraries
2020-10-20 16:53:10,746:INFO:Initializing predict_model()
2020-10-20 16:53:10,746:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:10,746:INFO:Checking exceptions
2020-10-20 16:53:10,746:INFO:Preloading libraries
2020-10-20 16:53:10,860:INFO:Initializing predict_model()
2020-10-20 16:53:10,860:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:10,860:INFO:Checking exceptions
2020-10-20 16:53:10,860:INFO:Preloading libraries
2020-10-20 16:53:10,973:INFO:Initializing predict_model()
2020-10-20 16:53:10,973:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:10,973:INFO:Checking exceptions
2020-10-20 16:53:10,973:INFO:Preloading libraries
2020-10-20 16:53:11,087:INFO:Initializing predict_model()
2020-10-20 16:53:11,087:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:11,087:INFO:Checking exceptions
2020-10-20 16:53:11,087:INFO:Preloading libraries
2020-10-20 16:53:11,202:INFO:Initializing predict_model()
2020-10-20 16:53:11,203:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:11,203:INFO:Checking exceptions
2020-10-20 16:53:11,203:INFO:Preloading libraries
2020-10-20 16:53:11,318:INFO:Initializing predict_model()
2020-10-20 16:53:11,318:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:11,318:INFO:Checking exceptions
2020-10-20 16:53:11,318:INFO:Preloading libraries
2020-10-20 16:53:11,432:INFO:Initializing predict_model()
2020-10-20 16:53:11,432:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:11,432:INFO:Checking exceptions
2020-10-20 16:53:11,432:INFO:Preloading libraries
2020-10-20 16:53:11,546:INFO:Initializing predict_model()
2020-10-20 16:53:11,546:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:11,546:INFO:Checking exceptions
2020-10-20 16:53:11,547:INFO:Preloading libraries
2020-10-20 16:53:11,661:INFO:Initializing predict_model()
2020-10-20 16:53:11,661:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:11,661:INFO:Checking exceptions
2020-10-20 16:53:11,661:INFO:Preloading libraries
2020-10-20 16:53:11,774:INFO:Initializing predict_model()
2020-10-20 16:53:11,774:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:11,774:INFO:Checking exceptions
2020-10-20 16:53:11,774:INFO:Preloading libraries
2020-10-20 16:53:11,890:INFO:Initializing predict_model()
2020-10-20 16:53:11,890:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:11,890:INFO:Checking exceptions
2020-10-20 16:53:11,890:INFO:Preloading libraries
2020-10-20 16:53:12,004:INFO:Initializing predict_model()
2020-10-20 16:53:12,004:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:12,004:INFO:Checking exceptions
2020-10-20 16:53:12,004:INFO:Preloading libraries
2020-10-20 16:53:12,117:INFO:Initializing predict_model()
2020-10-20 16:53:12,117:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:12,117:INFO:Checking exceptions
2020-10-20 16:53:12,117:INFO:Preloading libraries
2020-10-20 16:53:12,231:INFO:Initializing predict_model()
2020-10-20 16:53:12,231:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:12,232:INFO:Checking exceptions
2020-10-20 16:53:12,232:INFO:Preloading libraries
2020-10-20 16:53:12,348:INFO:Initializing predict_model()
2020-10-20 16:53:12,348:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:12,348:INFO:Checking exceptions
2020-10-20 16:53:12,348:INFO:Preloading libraries
2020-10-20 16:53:12,462:INFO:Initializing predict_model()
2020-10-20 16:53:12,462:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:12,462:INFO:Checking exceptions
2020-10-20 16:53:12,462:INFO:Preloading libraries
2020-10-20 16:53:12,574:INFO:Initializing predict_model()
2020-10-20 16:53:12,574:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:12,574:INFO:Checking exceptions
2020-10-20 16:53:12,574:INFO:Preloading libraries
2020-10-20 16:53:12,685:INFO:Initializing predict_model()
2020-10-20 16:53:12,686:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:12,686:INFO:Checking exceptions
2020-10-20 16:53:12,686:INFO:Preloading libraries
2020-10-20 16:53:12,796:INFO:Initializing predict_model()
2020-10-20 16:53:12,796:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:12,796:INFO:Checking exceptions
2020-10-20 16:53:12,796:INFO:Preloading libraries
2020-10-20 16:53:12,911:INFO:Initializing predict_model()
2020-10-20 16:53:12,911:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:12,911:INFO:Checking exceptions
2020-10-20 16:53:12,911:INFO:Preloading libraries
2020-10-20 16:53:13,025:INFO:Initializing predict_model()
2020-10-20 16:53:13,026:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:13,026:INFO:Checking exceptions
2020-10-20 16:53:13,026:INFO:Preloading libraries
2020-10-20 16:53:13,140:INFO:Initializing predict_model()
2020-10-20 16:53:13,140:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001F4AD5D5048>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:53:13,140:INFO:Checking exceptions
2020-10-20 16:53:13,140:INFO:Preloading libraries
2020-10-20 16:56:12,364:INFO:Initializing load_model()
2020-10-20 16:56:12,364:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 16:56:31,411:INFO:Initializing predict_model()
2020-10-20 16:56:31,411:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:31,411:INFO:Checking exceptions
2020-10-20 16:56:31,411:INFO:Preloading libraries
2020-10-20 16:56:31,537:INFO:Initializing predict_model()
2020-10-20 16:56:31,538:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:31,538:INFO:Checking exceptions
2020-10-20 16:56:31,538:INFO:Preloading libraries
2020-10-20 16:56:31,650:INFO:Initializing predict_model()
2020-10-20 16:56:31,650:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:31,650:INFO:Checking exceptions
2020-10-20 16:56:31,650:INFO:Preloading libraries
2020-10-20 16:56:31,763:INFO:Initializing predict_model()
2020-10-20 16:56:31,763:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:31,763:INFO:Checking exceptions
2020-10-20 16:56:31,764:INFO:Preloading libraries
2020-10-20 16:56:31,877:INFO:Initializing predict_model()
2020-10-20 16:56:31,877:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:31,877:INFO:Checking exceptions
2020-10-20 16:56:31,877:INFO:Preloading libraries
2020-10-20 16:56:31,991:INFO:Initializing predict_model()
2020-10-20 16:56:31,991:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:31,991:INFO:Checking exceptions
2020-10-20 16:56:31,991:INFO:Preloading libraries
2020-10-20 16:56:32,105:INFO:Initializing predict_model()
2020-10-20 16:56:32,105:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:32,105:INFO:Checking exceptions
2020-10-20 16:56:32,105:INFO:Preloading libraries
2020-10-20 16:56:32,219:INFO:Initializing predict_model()
2020-10-20 16:56:32,219:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:32,219:INFO:Checking exceptions
2020-10-20 16:56:32,219:INFO:Preloading libraries
2020-10-20 16:56:32,333:INFO:Initializing predict_model()
2020-10-20 16:56:32,333:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:32,333:INFO:Checking exceptions
2020-10-20 16:56:32,333:INFO:Preloading libraries
2020-10-20 16:56:32,446:INFO:Initializing predict_model()
2020-10-20 16:56:32,446:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:32,446:INFO:Checking exceptions
2020-10-20 16:56:32,446:INFO:Preloading libraries
2020-10-20 16:56:32,559:INFO:Initializing predict_model()
2020-10-20 16:56:32,559:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:32,559:INFO:Checking exceptions
2020-10-20 16:56:32,559:INFO:Preloading libraries
2020-10-20 16:56:32,672:INFO:Initializing predict_model()
2020-10-20 16:56:32,672:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:32,672:INFO:Checking exceptions
2020-10-20 16:56:32,672:INFO:Preloading libraries
2020-10-20 16:56:32,784:INFO:Initializing predict_model()
2020-10-20 16:56:32,784:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:32,784:INFO:Checking exceptions
2020-10-20 16:56:32,784:INFO:Preloading libraries
2020-10-20 16:56:32,900:INFO:Initializing predict_model()
2020-10-20 16:56:32,900:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:32,900:INFO:Checking exceptions
2020-10-20 16:56:32,900:INFO:Preloading libraries
2020-10-20 16:56:33,014:INFO:Initializing predict_model()
2020-10-20 16:56:33,014:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:33,014:INFO:Checking exceptions
2020-10-20 16:56:33,014:INFO:Preloading libraries
2020-10-20 16:56:33,128:INFO:Initializing predict_model()
2020-10-20 16:56:33,128:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:33,128:INFO:Checking exceptions
2020-10-20 16:56:33,128:INFO:Preloading libraries
2020-10-20 16:56:33,241:INFO:Initializing predict_model()
2020-10-20 16:56:33,241:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:33,241:INFO:Checking exceptions
2020-10-20 16:56:33,241:INFO:Preloading libraries
2020-10-20 16:56:33,355:INFO:Initializing predict_model()
2020-10-20 16:56:33,355:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:33,355:INFO:Checking exceptions
2020-10-20 16:56:33,355:INFO:Preloading libraries
2020-10-20 16:56:33,472:INFO:Initializing predict_model()
2020-10-20 16:56:33,472:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:33,472:INFO:Checking exceptions
2020-10-20 16:56:33,473:INFO:Preloading libraries
2020-10-20 16:56:33,584:INFO:Initializing predict_model()
2020-10-20 16:56:33,584:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:33,584:INFO:Checking exceptions
2020-10-20 16:56:33,584:INFO:Preloading libraries
2020-10-20 16:56:33,697:INFO:Initializing predict_model()
2020-10-20 16:56:33,697:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:33,697:INFO:Checking exceptions
2020-10-20 16:56:33,697:INFO:Preloading libraries
2020-10-20 16:56:33,811:INFO:Initializing predict_model()
2020-10-20 16:56:33,811:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:33,811:INFO:Checking exceptions
2020-10-20 16:56:33,811:INFO:Preloading libraries
2020-10-20 16:56:33,925:INFO:Initializing predict_model()
2020-10-20 16:56:33,925:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:33,925:INFO:Checking exceptions
2020-10-20 16:56:33,925:INFO:Preloading libraries
2020-10-20 16:56:34,039:INFO:Initializing predict_model()
2020-10-20 16:56:34,039:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:34,039:INFO:Checking exceptions
2020-10-20 16:56:34,039:INFO:Preloading libraries
2020-10-20 16:56:34,153:INFO:Initializing predict_model()
2020-10-20 16:56:34,153:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:34,153:INFO:Checking exceptions
2020-10-20 16:56:34,153:INFO:Preloading libraries
2020-10-20 16:56:34,266:INFO:Initializing predict_model()
2020-10-20 16:56:34,266:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:34,266:INFO:Checking exceptions
2020-10-20 16:56:34,266:INFO:Preloading libraries
2020-10-20 16:56:34,381:INFO:Initializing predict_model()
2020-10-20 16:56:34,381:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:34,381:INFO:Checking exceptions
2020-10-20 16:56:34,381:INFO:Preloading libraries
2020-10-20 16:56:34,495:INFO:Initializing predict_model()
2020-10-20 16:56:34,495:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:34,495:INFO:Checking exceptions
2020-10-20 16:56:34,495:INFO:Preloading libraries
2020-10-20 16:56:34,609:INFO:Initializing predict_model()
2020-10-20 16:56:34,609:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:34,609:INFO:Checking exceptions
2020-10-20 16:56:34,609:INFO:Preloading libraries
2020-10-20 16:56:34,725:INFO:Initializing predict_model()
2020-10-20 16:56:34,725:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:34,725:INFO:Checking exceptions
2020-10-20 16:56:34,725:INFO:Preloading libraries
2020-10-20 16:56:34,856:INFO:Initializing predict_model()
2020-10-20 16:56:34,856:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:34,856:INFO:Checking exceptions
2020-10-20 16:56:34,856:INFO:Preloading libraries
2020-10-20 16:56:34,994:INFO:Initializing predict_model()
2020-10-20 16:56:34,994:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:34,994:INFO:Checking exceptions
2020-10-20 16:56:34,994:INFO:Preloading libraries
2020-10-20 16:56:35,130:INFO:Initializing predict_model()
2020-10-20 16:56:35,130:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:35,130:INFO:Checking exceptions
2020-10-20 16:56:35,130:INFO:Preloading libraries
2020-10-20 16:56:35,246:INFO:Initializing predict_model()
2020-10-20 16:56:35,247:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:35,247:INFO:Checking exceptions
2020-10-20 16:56:35,247:INFO:Preloading libraries
2020-10-20 16:56:35,360:INFO:Initializing predict_model()
2020-10-20 16:56:35,360:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:35,360:INFO:Checking exceptions
2020-10-20 16:56:35,360:INFO:Preloading libraries
2020-10-20 16:56:35,472:INFO:Initializing predict_model()
2020-10-20 16:56:35,472:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:35,472:INFO:Checking exceptions
2020-10-20 16:56:35,472:INFO:Preloading libraries
2020-10-20 16:56:35,586:INFO:Initializing predict_model()
2020-10-20 16:56:35,586:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:35,586:INFO:Checking exceptions
2020-10-20 16:56:35,586:INFO:Preloading libraries
2020-10-20 16:56:35,699:INFO:Initializing predict_model()
2020-10-20 16:56:35,700:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:35,700:INFO:Checking exceptions
2020-10-20 16:56:35,700:INFO:Preloading libraries
2020-10-20 16:56:35,811:INFO:Initializing predict_model()
2020-10-20 16:56:35,812:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:35,812:INFO:Checking exceptions
2020-10-20 16:56:35,812:INFO:Preloading libraries
2020-10-20 16:56:35,924:INFO:Initializing predict_model()
2020-10-20 16:56:35,924:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002A19A230C88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:56:35,924:INFO:Checking exceptions
2020-10-20 16:56:35,924:INFO:Preloading libraries
2020-10-20 16:57:19,811:INFO:Initializing load_model()
2020-10-20 16:57:19,811:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 16:57:38,709:INFO:Initializing predict_model()
2020-10-20 16:57:38,710:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:38,710:INFO:Checking exceptions
2020-10-20 16:57:38,710:INFO:Preloading libraries
2020-10-20 16:57:38,836:INFO:Initializing predict_model()
2020-10-20 16:57:38,837:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:38,837:INFO:Checking exceptions
2020-10-20 16:57:38,837:INFO:Preloading libraries
2020-10-20 16:57:38,951:INFO:Initializing predict_model()
2020-10-20 16:57:38,951:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:38,951:INFO:Checking exceptions
2020-10-20 16:57:38,951:INFO:Preloading libraries
2020-10-20 16:57:39,079:INFO:Initializing predict_model()
2020-10-20 16:57:39,079:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:39,079:INFO:Checking exceptions
2020-10-20 16:57:39,080:INFO:Preloading libraries
2020-10-20 16:57:39,224:INFO:Initializing predict_model()
2020-10-20 16:57:39,224:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:39,224:INFO:Checking exceptions
2020-10-20 16:57:39,224:INFO:Preloading libraries
2020-10-20 16:57:39,366:INFO:Initializing predict_model()
2020-10-20 16:57:39,366:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:39,367:INFO:Checking exceptions
2020-10-20 16:57:39,367:INFO:Preloading libraries
2020-10-20 16:57:39,505:INFO:Initializing predict_model()
2020-10-20 16:57:39,506:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:39,506:INFO:Checking exceptions
2020-10-20 16:57:39,506:INFO:Preloading libraries
2020-10-20 16:57:39,619:INFO:Initializing predict_model()
2020-10-20 16:57:39,619:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:39,619:INFO:Checking exceptions
2020-10-20 16:57:39,619:INFO:Preloading libraries
2020-10-20 16:57:39,737:INFO:Initializing predict_model()
2020-10-20 16:57:39,737:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:39,737:INFO:Checking exceptions
2020-10-20 16:57:39,737:INFO:Preloading libraries
2020-10-20 16:57:39,857:INFO:Initializing predict_model()
2020-10-20 16:57:39,857:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:39,857:INFO:Checking exceptions
2020-10-20 16:57:39,858:INFO:Preloading libraries
2020-10-20 16:57:39,984:INFO:Initializing predict_model()
2020-10-20 16:57:39,984:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:39,984:INFO:Checking exceptions
2020-10-20 16:57:39,984:INFO:Preloading libraries
2020-10-20 16:57:40,113:INFO:Initializing predict_model()
2020-10-20 16:57:40,113:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:40,113:INFO:Checking exceptions
2020-10-20 16:57:40,113:INFO:Preloading libraries
2020-10-20 16:57:40,249:INFO:Initializing predict_model()
2020-10-20 16:57:40,249:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:40,249:INFO:Checking exceptions
2020-10-20 16:57:40,249:INFO:Preloading libraries
2020-10-20 16:57:40,388:INFO:Initializing predict_model()
2020-10-20 16:57:40,388:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:40,388:INFO:Checking exceptions
2020-10-20 16:57:40,388:INFO:Preloading libraries
2020-10-20 16:57:40,534:INFO:Initializing predict_model()
2020-10-20 16:57:40,534:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:40,535:INFO:Checking exceptions
2020-10-20 16:57:40,535:INFO:Preloading libraries
2020-10-20 16:57:40,674:INFO:Initializing predict_model()
2020-10-20 16:57:40,674:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:40,674:INFO:Checking exceptions
2020-10-20 16:57:40,674:INFO:Preloading libraries
2020-10-20 16:57:40,821:INFO:Initializing predict_model()
2020-10-20 16:57:40,822:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:40,822:INFO:Checking exceptions
2020-10-20 16:57:40,822:INFO:Preloading libraries
2020-10-20 16:57:40,971:INFO:Initializing predict_model()
2020-10-20 16:57:40,972:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:40,972:INFO:Checking exceptions
2020-10-20 16:57:40,972:INFO:Preloading libraries
2020-10-20 16:57:41,110:INFO:Initializing predict_model()
2020-10-20 16:57:41,110:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:41,110:INFO:Checking exceptions
2020-10-20 16:57:41,110:INFO:Preloading libraries
2020-10-20 16:57:41,243:INFO:Initializing predict_model()
2020-10-20 16:57:41,243:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:41,243:INFO:Checking exceptions
2020-10-20 16:57:41,243:INFO:Preloading libraries
2020-10-20 16:57:41,361:INFO:Initializing predict_model()
2020-10-20 16:57:41,361:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:41,361:INFO:Checking exceptions
2020-10-20 16:57:41,361:INFO:Preloading libraries
2020-10-20 16:57:41,476:INFO:Initializing predict_model()
2020-10-20 16:57:41,476:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:41,476:INFO:Checking exceptions
2020-10-20 16:57:41,476:INFO:Preloading libraries
2020-10-20 16:57:41,593:INFO:Initializing predict_model()
2020-10-20 16:57:41,593:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:41,593:INFO:Checking exceptions
2020-10-20 16:57:41,593:INFO:Preloading libraries
2020-10-20 16:57:41,708:INFO:Initializing predict_model()
2020-10-20 16:57:41,708:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:41,708:INFO:Checking exceptions
2020-10-20 16:57:41,708:INFO:Preloading libraries
2020-10-20 16:57:41,826:INFO:Initializing predict_model()
2020-10-20 16:57:41,826:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:41,826:INFO:Checking exceptions
2020-10-20 16:57:41,826:INFO:Preloading libraries
2020-10-20 16:57:41,941:INFO:Initializing predict_model()
2020-10-20 16:57:41,941:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:41,941:INFO:Checking exceptions
2020-10-20 16:57:41,941:INFO:Preloading libraries
2020-10-20 16:57:42,056:INFO:Initializing predict_model()
2020-10-20 16:57:42,056:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:42,056:INFO:Checking exceptions
2020-10-20 16:57:42,056:INFO:Preloading libraries
2020-10-20 16:57:42,170:INFO:Initializing predict_model()
2020-10-20 16:57:42,170:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:42,170:INFO:Checking exceptions
2020-10-20 16:57:42,170:INFO:Preloading libraries
2020-10-20 16:57:42,286:INFO:Initializing predict_model()
2020-10-20 16:57:42,286:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:42,286:INFO:Checking exceptions
2020-10-20 16:57:42,287:INFO:Preloading libraries
2020-10-20 16:57:42,403:INFO:Initializing predict_model()
2020-10-20 16:57:42,403:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:42,403:INFO:Checking exceptions
2020-10-20 16:57:42,403:INFO:Preloading libraries
2020-10-20 16:57:42,517:INFO:Initializing predict_model()
2020-10-20 16:57:42,517:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:42,517:INFO:Checking exceptions
2020-10-20 16:57:42,517:INFO:Preloading libraries
2020-10-20 16:57:42,631:INFO:Initializing predict_model()
2020-10-20 16:57:42,632:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:42,632:INFO:Checking exceptions
2020-10-20 16:57:42,632:INFO:Preloading libraries
2020-10-20 16:57:42,746:INFO:Initializing predict_model()
2020-10-20 16:57:42,747:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:42,747:INFO:Checking exceptions
2020-10-20 16:57:42,747:INFO:Preloading libraries
2020-10-20 16:57:42,867:INFO:Initializing predict_model()
2020-10-20 16:57:42,867:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:42,867:INFO:Checking exceptions
2020-10-20 16:57:42,867:INFO:Preloading libraries
2020-10-20 16:57:42,981:INFO:Initializing predict_model()
2020-10-20 16:57:42,982:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:42,982:INFO:Checking exceptions
2020-10-20 16:57:42,982:INFO:Preloading libraries
2020-10-20 16:57:43,096:INFO:Initializing predict_model()
2020-10-20 16:57:43,096:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:43,096:INFO:Checking exceptions
2020-10-20 16:57:43,096:INFO:Preloading libraries
2020-10-20 16:57:43,211:INFO:Initializing predict_model()
2020-10-20 16:57:43,212:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:43,212:INFO:Checking exceptions
2020-10-20 16:57:43,212:INFO:Preloading libraries
2020-10-20 16:57:43,325:INFO:Initializing predict_model()
2020-10-20 16:57:43,326:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:43,326:INFO:Checking exceptions
2020-10-20 16:57:43,326:INFO:Preloading libraries
2020-10-20 16:57:43,442:INFO:Initializing predict_model()
2020-10-20 16:57:43,442:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:43,443:INFO:Checking exceptions
2020-10-20 16:57:43,443:INFO:Preloading libraries
2020-10-20 16:57:43,558:INFO:Initializing predict_model()
2020-10-20 16:57:43,558:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021B0A973B48>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 16:57:43,558:INFO:Checking exceptions
2020-10-20 16:57:43,558:INFO:Preloading libraries
2020-10-20 16:59:41,810:INFO:Initializing load_model()
2020-10-20 16:59:41,810:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 16:59:55,887:INFO:Initializing load_model()
2020-10-20 16:59:55,887:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 17:00:14,402:INFO:Initializing predict_model()
2020-10-20 17:00:14,402:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:14,402:INFO:Checking exceptions
2020-10-20 17:00:14,403:INFO:Preloading libraries
2020-10-20 17:00:14,545:INFO:Initializing predict_model()
2020-10-20 17:00:14,545:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:14,546:INFO:Checking exceptions
2020-10-20 17:00:14,546:INFO:Preloading libraries
2020-10-20 17:00:14,654:INFO:Initializing predict_model()
2020-10-20 17:00:14,654:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:14,654:INFO:Checking exceptions
2020-10-20 17:00:14,654:INFO:Preloading libraries
2020-10-20 17:00:14,764:INFO:Initializing predict_model()
2020-10-20 17:00:14,764:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:14,764:INFO:Checking exceptions
2020-10-20 17:00:14,764:INFO:Preloading libraries
2020-10-20 17:00:14,874:INFO:Initializing predict_model()
2020-10-20 17:00:14,874:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:14,874:INFO:Checking exceptions
2020-10-20 17:00:14,874:INFO:Preloading libraries
2020-10-20 17:00:14,983:INFO:Initializing predict_model()
2020-10-20 17:00:14,983:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:14,983:INFO:Checking exceptions
2020-10-20 17:00:14,983:INFO:Preloading libraries
2020-10-20 17:00:15,094:INFO:Initializing predict_model()
2020-10-20 17:00:15,094:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:15,094:INFO:Checking exceptions
2020-10-20 17:00:15,094:INFO:Preloading libraries
2020-10-20 17:00:15,204:INFO:Initializing predict_model()
2020-10-20 17:00:15,204:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:15,204:INFO:Checking exceptions
2020-10-20 17:00:15,204:INFO:Preloading libraries
2020-10-20 17:00:15,313:INFO:Initializing predict_model()
2020-10-20 17:00:15,313:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:15,314:INFO:Checking exceptions
2020-10-20 17:00:15,314:INFO:Preloading libraries
2020-10-20 17:00:15,426:INFO:Initializing predict_model()
2020-10-20 17:00:15,426:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:15,426:INFO:Checking exceptions
2020-10-20 17:00:15,426:INFO:Preloading libraries
2020-10-20 17:00:15,538:INFO:Initializing predict_model()
2020-10-20 17:00:15,538:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:15,538:INFO:Checking exceptions
2020-10-20 17:00:15,538:INFO:Preloading libraries
2020-10-20 17:00:15,645:INFO:Initializing predict_model()
2020-10-20 17:00:15,646:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:15,646:INFO:Checking exceptions
2020-10-20 17:00:15,646:INFO:Preloading libraries
2020-10-20 17:00:15,754:INFO:Initializing predict_model()
2020-10-20 17:00:15,754:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:15,754:INFO:Checking exceptions
2020-10-20 17:00:15,754:INFO:Preloading libraries
2020-10-20 17:00:15,864:INFO:Initializing predict_model()
2020-10-20 17:00:15,864:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:15,864:INFO:Checking exceptions
2020-10-20 17:00:15,864:INFO:Preloading libraries
2020-10-20 17:00:15,975:INFO:Initializing predict_model()
2020-10-20 17:00:15,975:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:15,975:INFO:Checking exceptions
2020-10-20 17:00:15,975:INFO:Preloading libraries
2020-10-20 17:00:16,084:INFO:Initializing predict_model()
2020-10-20 17:00:16,084:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:16,084:INFO:Checking exceptions
2020-10-20 17:00:16,084:INFO:Preloading libraries
2020-10-20 17:00:16,193:INFO:Initializing predict_model()
2020-10-20 17:00:16,193:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:16,193:INFO:Checking exceptions
2020-10-20 17:00:16,193:INFO:Preloading libraries
2020-10-20 17:00:16,304:INFO:Initializing predict_model()
2020-10-20 17:00:16,304:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:16,304:INFO:Checking exceptions
2020-10-20 17:00:16,304:INFO:Preloading libraries
2020-10-20 17:00:16,413:INFO:Initializing predict_model()
2020-10-20 17:00:16,413:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:16,414:INFO:Checking exceptions
2020-10-20 17:00:16,414:INFO:Preloading libraries
2020-10-20 17:00:16,523:INFO:Initializing predict_model()
2020-10-20 17:00:16,523:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:16,524:INFO:Checking exceptions
2020-10-20 17:00:16,524:INFO:Preloading libraries
2020-10-20 17:00:16,633:INFO:Initializing predict_model()
2020-10-20 17:00:16,633:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:16,633:INFO:Checking exceptions
2020-10-20 17:00:16,633:INFO:Preloading libraries
2020-10-20 17:00:16,743:INFO:Initializing predict_model()
2020-10-20 17:00:16,744:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:16,744:INFO:Checking exceptions
2020-10-20 17:00:16,744:INFO:Preloading libraries
2020-10-20 17:00:16,853:INFO:Initializing predict_model()
2020-10-20 17:00:16,853:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:16,853:INFO:Checking exceptions
2020-10-20 17:00:16,853:INFO:Preloading libraries
2020-10-20 17:00:16,963:INFO:Initializing predict_model()
2020-10-20 17:00:16,963:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:16,963:INFO:Checking exceptions
2020-10-20 17:00:16,963:INFO:Preloading libraries
2020-10-20 17:00:17,072:INFO:Initializing predict_model()
2020-10-20 17:00:17,072:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:17,072:INFO:Checking exceptions
2020-10-20 17:00:17,072:INFO:Preloading libraries
2020-10-20 17:00:17,180:INFO:Initializing predict_model()
2020-10-20 17:00:17,180:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:17,180:INFO:Checking exceptions
2020-10-20 17:00:17,181:INFO:Preloading libraries
2020-10-20 17:00:17,289:INFO:Initializing predict_model()
2020-10-20 17:00:17,290:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:17,290:INFO:Checking exceptions
2020-10-20 17:00:17,290:INFO:Preloading libraries
2020-10-20 17:00:17,400:INFO:Initializing predict_model()
2020-10-20 17:00:17,401:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:17,401:INFO:Checking exceptions
2020-10-20 17:00:17,401:INFO:Preloading libraries
2020-10-20 17:00:17,511:INFO:Initializing predict_model()
2020-10-20 17:00:17,511:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:17,511:INFO:Checking exceptions
2020-10-20 17:00:17,511:INFO:Preloading libraries
2020-10-20 17:00:17,620:INFO:Initializing predict_model()
2020-10-20 17:00:17,620:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:17,620:INFO:Checking exceptions
2020-10-20 17:00:17,620:INFO:Preloading libraries
2020-10-20 17:00:17,729:INFO:Initializing predict_model()
2020-10-20 17:00:17,729:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:17,729:INFO:Checking exceptions
2020-10-20 17:00:17,729:INFO:Preloading libraries
2020-10-20 17:00:17,836:INFO:Initializing predict_model()
2020-10-20 17:00:17,837:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:17,837:INFO:Checking exceptions
2020-10-20 17:00:17,837:INFO:Preloading libraries
2020-10-20 17:00:17,948:INFO:Initializing predict_model()
2020-10-20 17:00:17,948:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:17,948:INFO:Checking exceptions
2020-10-20 17:00:17,948:INFO:Preloading libraries
2020-10-20 17:00:18,057:INFO:Initializing predict_model()
2020-10-20 17:00:18,057:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:18,057:INFO:Checking exceptions
2020-10-20 17:00:18,057:INFO:Preloading libraries
2020-10-20 17:00:18,166:INFO:Initializing predict_model()
2020-10-20 17:00:18,166:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:18,166:INFO:Checking exceptions
2020-10-20 17:00:18,166:INFO:Preloading libraries
2020-10-20 17:00:18,275:INFO:Initializing predict_model()
2020-10-20 17:00:18,275:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:18,275:INFO:Checking exceptions
2020-10-20 17:00:18,275:INFO:Preloading libraries
2020-10-20 17:00:18,383:INFO:Initializing predict_model()
2020-10-20 17:00:18,383:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:18,384:INFO:Checking exceptions
2020-10-20 17:00:18,384:INFO:Preloading libraries
2020-10-20 17:00:18,494:INFO:Initializing predict_model()
2020-10-20 17:00:18,494:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:18,494:INFO:Checking exceptions
2020-10-20 17:00:18,494:INFO:Preloading libraries
2020-10-20 17:00:18,604:INFO:Initializing predict_model()
2020-10-20 17:00:18,604:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:18,604:INFO:Checking exceptions
2020-10-20 17:00:18,604:INFO:Preloading libraries
2020-10-20 17:00:18,713:INFO:Initializing predict_model()
2020-10-20 17:00:18,713:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000021377013E88>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:00:18,713:INFO:Checking exceptions
2020-10-20 17:00:18,713:INFO:Preloading libraries
2020-10-20 17:05:51,442:INFO:Initializing load_model()
2020-10-20 17:05:51,442:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 17:06:10,183:INFO:Initializing predict_model()
2020-10-20 17:06:10,183:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:10,183:INFO:Checking exceptions
2020-10-20 17:06:10,184:INFO:Preloading libraries
2020-10-20 17:06:10,307:INFO:Initializing predict_model()
2020-10-20 17:06:10,307:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:10,307:INFO:Checking exceptions
2020-10-20 17:06:10,307:INFO:Preloading libraries
2020-10-20 17:06:10,416:INFO:Initializing predict_model()
2020-10-20 17:06:10,416:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:10,416:INFO:Checking exceptions
2020-10-20 17:06:10,416:INFO:Preloading libraries
2020-10-20 17:06:10,526:INFO:Initializing predict_model()
2020-10-20 17:06:10,526:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:10,526:INFO:Checking exceptions
2020-10-20 17:06:10,526:INFO:Preloading libraries
2020-10-20 17:06:10,646:INFO:Initializing predict_model()
2020-10-20 17:06:10,646:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:10,646:INFO:Checking exceptions
2020-10-20 17:06:10,646:INFO:Preloading libraries
2020-10-20 17:06:10,780:INFO:Initializing predict_model()
2020-10-20 17:06:10,780:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:10,780:INFO:Checking exceptions
2020-10-20 17:06:10,781:INFO:Preloading libraries
2020-10-20 17:06:10,917:INFO:Initializing predict_model()
2020-10-20 17:06:10,917:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:10,917:INFO:Checking exceptions
2020-10-20 17:06:10,917:INFO:Preloading libraries
2020-10-20 17:06:11,031:INFO:Initializing predict_model()
2020-10-20 17:06:11,031:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:11,031:INFO:Checking exceptions
2020-10-20 17:06:11,031:INFO:Preloading libraries
2020-10-20 17:06:11,140:INFO:Initializing predict_model()
2020-10-20 17:06:11,140:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:11,140:INFO:Checking exceptions
2020-10-20 17:06:11,140:INFO:Preloading libraries
2020-10-20 17:06:11,249:INFO:Initializing predict_model()
2020-10-20 17:06:11,249:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:11,249:INFO:Checking exceptions
2020-10-20 17:06:11,249:INFO:Preloading libraries
2020-10-20 17:06:11,359:INFO:Initializing predict_model()
2020-10-20 17:06:11,359:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:11,359:INFO:Checking exceptions
2020-10-20 17:06:11,359:INFO:Preloading libraries
2020-10-20 17:06:11,469:INFO:Initializing predict_model()
2020-10-20 17:06:11,469:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:11,469:INFO:Checking exceptions
2020-10-20 17:06:11,469:INFO:Preloading libraries
2020-10-20 17:06:11,578:INFO:Initializing predict_model()
2020-10-20 17:06:11,578:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:11,578:INFO:Checking exceptions
2020-10-20 17:06:11,578:INFO:Preloading libraries
2020-10-20 17:06:11,688:INFO:Initializing predict_model()
2020-10-20 17:06:11,688:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:11,688:INFO:Checking exceptions
2020-10-20 17:06:11,688:INFO:Preloading libraries
2020-10-20 17:06:11,798:INFO:Initializing predict_model()
2020-10-20 17:06:11,798:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:11,798:INFO:Checking exceptions
2020-10-20 17:06:11,798:INFO:Preloading libraries
2020-10-20 17:06:11,908:INFO:Initializing predict_model()
2020-10-20 17:06:11,908:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:11,908:INFO:Checking exceptions
2020-10-20 17:06:11,908:INFO:Preloading libraries
2020-10-20 17:06:12,016:INFO:Initializing predict_model()
2020-10-20 17:06:12,016:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:12,016:INFO:Checking exceptions
2020-10-20 17:06:12,016:INFO:Preloading libraries
2020-10-20 17:06:12,125:INFO:Initializing predict_model()
2020-10-20 17:06:12,125:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:12,125:INFO:Checking exceptions
2020-10-20 17:06:12,125:INFO:Preloading libraries
2020-10-20 17:06:12,236:INFO:Initializing predict_model()
2020-10-20 17:06:12,236:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:12,236:INFO:Checking exceptions
2020-10-20 17:06:12,236:INFO:Preloading libraries
2020-10-20 17:06:12,345:INFO:Initializing predict_model()
2020-10-20 17:06:12,345:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:12,345:INFO:Checking exceptions
2020-10-20 17:06:12,345:INFO:Preloading libraries
2020-10-20 17:06:12,455:INFO:Initializing predict_model()
2020-10-20 17:06:12,455:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:12,455:INFO:Checking exceptions
2020-10-20 17:06:12,455:INFO:Preloading libraries
2020-10-20 17:06:12,566:INFO:Initializing predict_model()
2020-10-20 17:06:12,566:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:12,566:INFO:Checking exceptions
2020-10-20 17:06:12,566:INFO:Preloading libraries
2020-10-20 17:06:12,677:INFO:Initializing predict_model()
2020-10-20 17:06:12,677:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:12,677:INFO:Checking exceptions
2020-10-20 17:06:12,677:INFO:Preloading libraries
2020-10-20 17:06:12,787:INFO:Initializing predict_model()
2020-10-20 17:06:12,787:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:12,787:INFO:Checking exceptions
2020-10-20 17:06:12,787:INFO:Preloading libraries
2020-10-20 17:06:12,898:INFO:Initializing predict_model()
2020-10-20 17:06:12,898:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:12,898:INFO:Checking exceptions
2020-10-20 17:06:12,898:INFO:Preloading libraries
2020-10-20 17:06:13,004:INFO:Initializing predict_model()
2020-10-20 17:06:13,004:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:13,004:INFO:Checking exceptions
2020-10-20 17:06:13,004:INFO:Preloading libraries
2020-10-20 17:06:13,113:INFO:Initializing predict_model()
2020-10-20 17:06:13,113:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:13,113:INFO:Checking exceptions
2020-10-20 17:06:13,113:INFO:Preloading libraries
2020-10-20 17:06:13,223:INFO:Initializing predict_model()
2020-10-20 17:06:13,224:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:13,224:INFO:Checking exceptions
2020-10-20 17:06:13,224:INFO:Preloading libraries
2020-10-20 17:06:13,333:INFO:Initializing predict_model()
2020-10-20 17:06:13,333:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:13,333:INFO:Checking exceptions
2020-10-20 17:06:13,334:INFO:Preloading libraries
2020-10-20 17:06:13,446:INFO:Initializing predict_model()
2020-10-20 17:06:13,446:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:13,446:INFO:Checking exceptions
2020-10-20 17:06:13,446:INFO:Preloading libraries
2020-10-20 17:06:13,556:INFO:Initializing predict_model()
2020-10-20 17:06:13,556:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:13,556:INFO:Checking exceptions
2020-10-20 17:06:13,556:INFO:Preloading libraries
2020-10-20 17:06:13,667:INFO:Initializing predict_model()
2020-10-20 17:06:13,667:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:13,667:INFO:Checking exceptions
2020-10-20 17:06:13,667:INFO:Preloading libraries
2020-10-20 17:06:13,777:INFO:Initializing predict_model()
2020-10-20 17:06:13,777:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:13,777:INFO:Checking exceptions
2020-10-20 17:06:13,777:INFO:Preloading libraries
2020-10-20 17:06:13,885:INFO:Initializing predict_model()
2020-10-20 17:06:13,885:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:13,885:INFO:Checking exceptions
2020-10-20 17:06:13,885:INFO:Preloading libraries
2020-10-20 17:06:13,995:INFO:Initializing predict_model()
2020-10-20 17:06:13,995:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:13,995:INFO:Checking exceptions
2020-10-20 17:06:13,995:INFO:Preloading libraries
2020-10-20 17:06:14,105:INFO:Initializing predict_model()
2020-10-20 17:06:14,105:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:14,105:INFO:Checking exceptions
2020-10-20 17:06:14,105:INFO:Preloading libraries
2020-10-20 17:06:14,214:INFO:Initializing predict_model()
2020-10-20 17:06:14,214:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:14,215:INFO:Checking exceptions
2020-10-20 17:06:14,215:INFO:Preloading libraries
2020-10-20 17:06:14,323:INFO:Initializing predict_model()
2020-10-20 17:06:14,323:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:14,324:INFO:Checking exceptions
2020-10-20 17:06:14,324:INFO:Preloading libraries
2020-10-20 17:06:14,434:INFO:Initializing predict_model()
2020-10-20 17:06:14,434:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:14,435:INFO:Checking exceptions
2020-10-20 17:06:14,435:INFO:Preloading libraries
2020-10-20 17:06:14,545:INFO:Initializing predict_model()
2020-10-20 17:06:14,545:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x00000195FA643208>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:06:14,545:INFO:Checking exceptions
2020-10-20 17:06:14,545:INFO:Preloading libraries
2020-10-20 17:17:44,429:INFO:Initializing load_model()
2020-10-20 17:17:44,429:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 17:18:03,495:INFO:Initializing predict_model()
2020-10-20 17:18:03,495:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:03,495:INFO:Checking exceptions
2020-10-20 17:18:03,495:INFO:Preloading libraries
2020-10-20 17:18:03,628:INFO:Initializing predict_model()
2020-10-20 17:18:03,628:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:03,628:INFO:Checking exceptions
2020-10-20 17:18:03,628:INFO:Preloading libraries
2020-10-20 17:18:03,759:INFO:Initializing predict_model()
2020-10-20 17:18:03,759:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:03,759:INFO:Checking exceptions
2020-10-20 17:18:03,759:INFO:Preloading libraries
2020-10-20 17:18:03,889:INFO:Initializing predict_model()
2020-10-20 17:18:03,889:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:03,889:INFO:Checking exceptions
2020-10-20 17:18:03,889:INFO:Preloading libraries
2020-10-20 17:18:04,015:INFO:Initializing predict_model()
2020-10-20 17:18:04,015:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:04,015:INFO:Checking exceptions
2020-10-20 17:18:04,015:INFO:Preloading libraries
2020-10-20 17:18:04,171:INFO:Initializing predict_model()
2020-10-20 17:18:04,171:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:04,171:INFO:Checking exceptions
2020-10-20 17:18:04,171:INFO:Preloading libraries
2020-10-20 17:18:04,301:INFO:Initializing predict_model()
2020-10-20 17:18:04,301:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:04,301:INFO:Checking exceptions
2020-10-20 17:18:04,301:INFO:Preloading libraries
2020-10-20 17:18:04,431:INFO:Initializing predict_model()
2020-10-20 17:18:04,431:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:04,432:INFO:Checking exceptions
2020-10-20 17:18:04,432:INFO:Preloading libraries
2020-10-20 17:18:04,560:INFO:Initializing predict_model()
2020-10-20 17:18:04,561:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:04,561:INFO:Checking exceptions
2020-10-20 17:18:04,561:INFO:Preloading libraries
2020-10-20 17:18:04,688:INFO:Initializing predict_model()
2020-10-20 17:18:04,688:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:04,688:INFO:Checking exceptions
2020-10-20 17:18:04,688:INFO:Preloading libraries
2020-10-20 17:18:04,817:INFO:Initializing predict_model()
2020-10-20 17:18:04,817:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:04,817:INFO:Checking exceptions
2020-10-20 17:18:04,817:INFO:Preloading libraries
2020-10-20 17:18:04,946:INFO:Initializing predict_model()
2020-10-20 17:18:04,946:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:04,947:INFO:Checking exceptions
2020-10-20 17:18:04,947:INFO:Preloading libraries
2020-10-20 17:18:05,078:INFO:Initializing predict_model()
2020-10-20 17:18:05,078:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:05,078:INFO:Checking exceptions
2020-10-20 17:18:05,078:INFO:Preloading libraries
2020-10-20 17:18:05,227:INFO:Initializing predict_model()
2020-10-20 17:18:05,227:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:05,227:INFO:Checking exceptions
2020-10-20 17:18:05,227:INFO:Preloading libraries
2020-10-20 17:18:05,358:INFO:Initializing predict_model()
2020-10-20 17:18:05,358:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:05,358:INFO:Checking exceptions
2020-10-20 17:18:05,358:INFO:Preloading libraries
2020-10-20 17:18:05,488:INFO:Initializing predict_model()
2020-10-20 17:18:05,488:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:05,488:INFO:Checking exceptions
2020-10-20 17:18:05,488:INFO:Preloading libraries
2020-10-20 17:18:05,617:INFO:Initializing predict_model()
2020-10-20 17:18:05,618:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:05,618:INFO:Checking exceptions
2020-10-20 17:18:05,618:INFO:Preloading libraries
2020-10-20 17:18:05,746:INFO:Initializing predict_model()
2020-10-20 17:18:05,746:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:05,746:INFO:Checking exceptions
2020-10-20 17:18:05,746:INFO:Preloading libraries
2020-10-20 17:18:05,875:INFO:Initializing predict_model()
2020-10-20 17:18:05,875:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:05,875:INFO:Checking exceptions
2020-10-20 17:18:05,875:INFO:Preloading libraries
2020-10-20 17:18:06,005:INFO:Initializing predict_model()
2020-10-20 17:18:06,005:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:06,005:INFO:Checking exceptions
2020-10-20 17:18:06,005:INFO:Preloading libraries
2020-10-20 17:18:06,134:INFO:Initializing predict_model()
2020-10-20 17:18:06,134:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:06,134:INFO:Checking exceptions
2020-10-20 17:18:06,134:INFO:Preloading libraries
2020-10-20 17:18:06,263:INFO:Initializing predict_model()
2020-10-20 17:18:06,263:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:06,263:INFO:Checking exceptions
2020-10-20 17:18:06,264:INFO:Preloading libraries
2020-10-20 17:18:06,389:INFO:Initializing predict_model()
2020-10-20 17:18:06,389:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:06,389:INFO:Checking exceptions
2020-10-20 17:18:06,389:INFO:Preloading libraries
2020-10-20 17:18:06,516:INFO:Initializing predict_model()
2020-10-20 17:18:06,517:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:06,517:INFO:Checking exceptions
2020-10-20 17:18:06,517:INFO:Preloading libraries
2020-10-20 17:18:06,657:INFO:Initializing predict_model()
2020-10-20 17:18:06,658:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:06,658:INFO:Checking exceptions
2020-10-20 17:18:06,658:INFO:Preloading libraries
2020-10-20 17:18:06,787:INFO:Initializing predict_model()
2020-10-20 17:18:06,787:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:06,787:INFO:Checking exceptions
2020-10-20 17:18:06,787:INFO:Preloading libraries
2020-10-20 17:18:06,917:INFO:Initializing predict_model()
2020-10-20 17:18:06,917:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:06,917:INFO:Checking exceptions
2020-10-20 17:18:06,917:INFO:Preloading libraries
2020-10-20 17:18:07,048:INFO:Initializing predict_model()
2020-10-20 17:18:07,048:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:07,049:INFO:Checking exceptions
2020-10-20 17:18:07,049:INFO:Preloading libraries
2020-10-20 17:18:07,179:INFO:Initializing predict_model()
2020-10-20 17:18:07,179:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:07,179:INFO:Checking exceptions
2020-10-20 17:18:07,179:INFO:Preloading libraries
2020-10-20 17:18:07,307:INFO:Initializing predict_model()
2020-10-20 17:18:07,308:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:07,308:INFO:Checking exceptions
2020-10-20 17:18:07,308:INFO:Preloading libraries
2020-10-20 17:18:07,438:INFO:Initializing predict_model()
2020-10-20 17:18:07,438:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:07,438:INFO:Checking exceptions
2020-10-20 17:18:07,438:INFO:Preloading libraries
2020-10-20 17:18:07,566:INFO:Initializing predict_model()
2020-10-20 17:18:07,566:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:07,566:INFO:Checking exceptions
2020-10-20 17:18:07,566:INFO:Preloading libraries
2020-10-20 17:18:07,697:INFO:Initializing predict_model()
2020-10-20 17:18:07,697:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:07,697:INFO:Checking exceptions
2020-10-20 17:18:07,697:INFO:Preloading libraries
2020-10-20 17:18:07,827:INFO:Initializing predict_model()
2020-10-20 17:18:07,828:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:07,828:INFO:Checking exceptions
2020-10-20 17:18:07,828:INFO:Preloading libraries
2020-10-20 17:18:07,958:INFO:Initializing predict_model()
2020-10-20 17:18:07,958:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:07,958:INFO:Checking exceptions
2020-10-20 17:18:07,958:INFO:Preloading libraries
2020-10-20 17:18:08,087:INFO:Initializing predict_model()
2020-10-20 17:18:08,087:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:08,088:INFO:Checking exceptions
2020-10-20 17:18:08,088:INFO:Preloading libraries
2020-10-20 17:18:08,219:INFO:Initializing predict_model()
2020-10-20 17:18:08,219:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:08,219:INFO:Checking exceptions
2020-10-20 17:18:08,219:INFO:Preloading libraries
2020-10-20 17:18:08,348:INFO:Initializing predict_model()
2020-10-20 17:18:08,348:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:08,348:INFO:Checking exceptions
2020-10-20 17:18:08,348:INFO:Preloading libraries
2020-10-20 17:18:08,478:INFO:Initializing predict_model()
2020-10-20 17:18:08,478:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:08,478:INFO:Checking exceptions
2020-10-20 17:18:08,478:INFO:Preloading libraries
2020-10-20 17:18:08,609:INFO:Initializing predict_model()
2020-10-20 17:18:08,609:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019585A28348>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:18:08,609:INFO:Checking exceptions
2020-10-20 17:18:08,609:INFO:Preloading libraries
2020-10-20 17:25:27,886:INFO:Initializing load_model()
2020-10-20 17:25:27,886:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 17:25:48,496:INFO:Initializing predict_model()
2020-10-20 17:25:48,496:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:48,496:INFO:Checking exceptions
2020-10-20 17:25:48,496:INFO:Preloading libraries
2020-10-20 17:25:48,634:INFO:Initializing predict_model()
2020-10-20 17:25:48,634:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:48,634:INFO:Checking exceptions
2020-10-20 17:25:48,634:INFO:Preloading libraries
2020-10-20 17:25:48,760:INFO:Initializing predict_model()
2020-10-20 17:25:48,760:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:48,760:INFO:Checking exceptions
2020-10-20 17:25:48,760:INFO:Preloading libraries
2020-10-20 17:25:48,882:INFO:Initializing predict_model()
2020-10-20 17:25:48,882:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:48,882:INFO:Checking exceptions
2020-10-20 17:25:48,882:INFO:Preloading libraries
2020-10-20 17:25:49,018:INFO:Initializing predict_model()
2020-10-20 17:25:49,018:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:49,018:INFO:Checking exceptions
2020-10-20 17:25:49,018:INFO:Preloading libraries
2020-10-20 17:25:49,152:INFO:Initializing predict_model()
2020-10-20 17:25:49,152:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:49,152:INFO:Checking exceptions
2020-10-20 17:25:49,153:INFO:Preloading libraries
2020-10-20 17:25:49,285:INFO:Initializing predict_model()
2020-10-20 17:25:49,285:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:49,285:INFO:Checking exceptions
2020-10-20 17:25:49,285:INFO:Preloading libraries
2020-10-20 17:25:49,413:INFO:Initializing predict_model()
2020-10-20 17:25:49,414:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:49,414:INFO:Checking exceptions
2020-10-20 17:25:49,414:INFO:Preloading libraries
2020-10-20 17:25:49,562:INFO:Initializing predict_model()
2020-10-20 17:25:49,562:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:49,562:INFO:Checking exceptions
2020-10-20 17:25:49,562:INFO:Preloading libraries
2020-10-20 17:25:49,691:INFO:Initializing predict_model()
2020-10-20 17:25:49,691:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:49,691:INFO:Checking exceptions
2020-10-20 17:25:49,691:INFO:Preloading libraries
2020-10-20 17:25:49,809:INFO:Initializing predict_model()
2020-10-20 17:25:49,809:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:49,809:INFO:Checking exceptions
2020-10-20 17:25:49,809:INFO:Preloading libraries
2020-10-20 17:25:49,936:INFO:Initializing predict_model()
2020-10-20 17:25:49,936:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:49,937:INFO:Checking exceptions
2020-10-20 17:25:49,937:INFO:Preloading libraries
2020-10-20 17:25:50,069:INFO:Initializing predict_model()
2020-10-20 17:25:50,069:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:50,069:INFO:Checking exceptions
2020-10-20 17:25:50,069:INFO:Preloading libraries
2020-10-20 17:25:50,193:INFO:Initializing predict_model()
2020-10-20 17:25:50,193:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:50,193:INFO:Checking exceptions
2020-10-20 17:25:50,193:INFO:Preloading libraries
2020-10-20 17:25:50,335:INFO:Initializing predict_model()
2020-10-20 17:25:50,336:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:50,336:INFO:Checking exceptions
2020-10-20 17:25:50,336:INFO:Preloading libraries
2020-10-20 17:25:50,503:INFO:Initializing predict_model()
2020-10-20 17:25:50,503:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:50,504:INFO:Checking exceptions
2020-10-20 17:25:50,504:INFO:Preloading libraries
2020-10-20 17:25:50,659:INFO:Initializing predict_model()
2020-10-20 17:25:50,659:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:50,659:INFO:Checking exceptions
2020-10-20 17:25:50,659:INFO:Preloading libraries
2020-10-20 17:25:50,794:INFO:Initializing predict_model()
2020-10-20 17:25:50,794:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:50,794:INFO:Checking exceptions
2020-10-20 17:25:50,794:INFO:Preloading libraries
2020-10-20 17:25:50,922:INFO:Initializing predict_model()
2020-10-20 17:25:50,922:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:50,922:INFO:Checking exceptions
2020-10-20 17:25:50,922:INFO:Preloading libraries
2020-10-20 17:25:51,051:INFO:Initializing predict_model()
2020-10-20 17:25:51,052:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:51,052:INFO:Checking exceptions
2020-10-20 17:25:51,052:INFO:Preloading libraries
2020-10-20 17:25:51,179:INFO:Initializing predict_model()
2020-10-20 17:25:51,179:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:51,179:INFO:Checking exceptions
2020-10-20 17:25:51,179:INFO:Preloading libraries
2020-10-20 17:25:51,338:INFO:Initializing predict_model()
2020-10-20 17:25:51,338:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:51,338:INFO:Checking exceptions
2020-10-20 17:25:51,338:INFO:Preloading libraries
2020-10-20 17:25:51,470:INFO:Initializing predict_model()
2020-10-20 17:25:51,470:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:51,470:INFO:Checking exceptions
2020-10-20 17:25:51,470:INFO:Preloading libraries
2020-10-20 17:25:51,603:INFO:Initializing predict_model()
2020-10-20 17:25:51,603:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:51,603:INFO:Checking exceptions
2020-10-20 17:25:51,603:INFO:Preloading libraries
2020-10-20 17:25:51,726:INFO:Initializing predict_model()
2020-10-20 17:25:51,727:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:51,727:INFO:Checking exceptions
2020-10-20 17:25:51,727:INFO:Preloading libraries
2020-10-20 17:25:51,849:INFO:Initializing predict_model()
2020-10-20 17:25:51,849:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:51,849:INFO:Checking exceptions
2020-10-20 17:25:51,849:INFO:Preloading libraries
2020-10-20 17:25:52,011:INFO:Initializing predict_model()
2020-10-20 17:25:52,011:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:52,011:INFO:Checking exceptions
2020-10-20 17:25:52,011:INFO:Preloading libraries
2020-10-20 17:25:52,230:INFO:Initializing predict_model()
2020-10-20 17:25:52,230:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:52,230:INFO:Checking exceptions
2020-10-20 17:25:52,230:INFO:Preloading libraries
2020-10-20 17:25:52,383:INFO:Initializing predict_model()
2020-10-20 17:25:52,383:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:52,383:INFO:Checking exceptions
2020-10-20 17:25:52,383:INFO:Preloading libraries
2020-10-20 17:25:52,552:INFO:Initializing predict_model()
2020-10-20 17:25:52,552:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:52,552:INFO:Checking exceptions
2020-10-20 17:25:52,552:INFO:Preloading libraries
2020-10-20 17:25:52,739:INFO:Initializing predict_model()
2020-10-20 17:25:52,739:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:52,739:INFO:Checking exceptions
2020-10-20 17:25:52,739:INFO:Preloading libraries
2020-10-20 17:25:52,925:INFO:Initializing predict_model()
2020-10-20 17:25:52,925:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:52,925:INFO:Checking exceptions
2020-10-20 17:25:52,925:INFO:Preloading libraries
2020-10-20 17:25:53,088:INFO:Initializing predict_model()
2020-10-20 17:25:53,088:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:53,088:INFO:Checking exceptions
2020-10-20 17:25:53,088:INFO:Preloading libraries
2020-10-20 17:25:53,256:INFO:Initializing predict_model()
2020-10-20 17:25:53,256:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:53,256:INFO:Checking exceptions
2020-10-20 17:25:53,256:INFO:Preloading libraries
2020-10-20 17:25:53,436:INFO:Initializing predict_model()
2020-10-20 17:25:53,436:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:53,436:INFO:Checking exceptions
2020-10-20 17:25:53,436:INFO:Preloading libraries
2020-10-20 17:25:53,562:INFO:Initializing predict_model()
2020-10-20 17:25:53,562:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:53,562:INFO:Checking exceptions
2020-10-20 17:25:53,562:INFO:Preloading libraries
2020-10-20 17:25:53,686:INFO:Initializing predict_model()
2020-10-20 17:25:53,686:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:53,686:INFO:Checking exceptions
2020-10-20 17:25:53,686:INFO:Preloading libraries
2020-10-20 17:25:53,811:INFO:Initializing predict_model()
2020-10-20 17:25:53,811:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:53,811:INFO:Checking exceptions
2020-10-20 17:25:53,811:INFO:Preloading libraries
2020-10-20 17:25:53,982:INFO:Initializing predict_model()
2020-10-20 17:25:53,982:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:53,982:INFO:Checking exceptions
2020-10-20 17:25:53,982:INFO:Preloading libraries
2020-10-20 17:25:54,135:INFO:Initializing predict_model()
2020-10-20 17:25:54,135:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019582F379C8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:25:54,135:INFO:Checking exceptions
2020-10-20 17:25:54,135:INFO:Preloading libraries
2020-10-20 17:32:51,317:INFO:Initializing load_model()
2020-10-20 17:32:51,317:INFO:load_model(model_name=../results/single_r/model, platform=None, authentication=None, verbose=True)
2020-10-20 17:33:09,856:INFO:Initializing predict_model()
2020-10-20 17:33:09,856:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:09,856:INFO:Checking exceptions
2020-10-20 17:33:09,856:INFO:Preloading libraries
2020-10-20 17:33:09,988:INFO:Initializing predict_model()
2020-10-20 17:33:09,988:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:09,988:INFO:Checking exceptions
2020-10-20 17:33:09,988:INFO:Preloading libraries
2020-10-20 17:33:10,119:INFO:Initializing predict_model()
2020-10-20 17:33:10,119:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:10,119:INFO:Checking exceptions
2020-10-20 17:33:10,119:INFO:Preloading libraries
2020-10-20 17:33:10,254:INFO:Initializing predict_model()
2020-10-20 17:33:10,254:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:10,254:INFO:Checking exceptions
2020-10-20 17:33:10,254:INFO:Preloading libraries
2020-10-20 17:33:10,389:INFO:Initializing predict_model()
2020-10-20 17:33:10,389:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:10,389:INFO:Checking exceptions
2020-10-20 17:33:10,389:INFO:Preloading libraries
2020-10-20 17:33:10,550:INFO:Initializing predict_model()
2020-10-20 17:33:10,550:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:10,550:INFO:Checking exceptions
2020-10-20 17:33:10,550:INFO:Preloading libraries
2020-10-20 17:33:10,715:INFO:Initializing predict_model()
2020-10-20 17:33:10,715:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:10,715:INFO:Checking exceptions
2020-10-20 17:33:10,715:INFO:Preloading libraries
2020-10-20 17:33:10,859:INFO:Initializing predict_model()
2020-10-20 17:33:10,859:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:10,859:INFO:Checking exceptions
2020-10-20 17:33:10,860:INFO:Preloading libraries
2020-10-20 17:33:10,993:INFO:Initializing predict_model()
2020-10-20 17:33:10,993:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:10,993:INFO:Checking exceptions
2020-10-20 17:33:10,993:INFO:Preloading libraries
2020-10-20 17:33:11,132:INFO:Initializing predict_model()
2020-10-20 17:33:11,133:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:11,133:INFO:Checking exceptions
2020-10-20 17:33:11,133:INFO:Preloading libraries
2020-10-20 17:33:11,263:INFO:Initializing predict_model()
2020-10-20 17:33:11,263:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:11,263:INFO:Checking exceptions
2020-10-20 17:33:11,263:INFO:Preloading libraries
2020-10-20 17:33:11,394:INFO:Initializing predict_model()
2020-10-20 17:33:11,394:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:11,394:INFO:Checking exceptions
2020-10-20 17:33:11,394:INFO:Preloading libraries
2020-10-20 17:33:11,527:INFO:Initializing predict_model()
2020-10-20 17:33:11,527:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:11,527:INFO:Checking exceptions
2020-10-20 17:33:11,527:INFO:Preloading libraries
2020-10-20 17:33:11,661:INFO:Initializing predict_model()
2020-10-20 17:33:11,661:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:11,661:INFO:Checking exceptions
2020-10-20 17:33:11,661:INFO:Preloading libraries
2020-10-20 17:33:11,799:INFO:Initializing predict_model()
2020-10-20 17:33:11,799:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:11,799:INFO:Checking exceptions
2020-10-20 17:33:11,799:INFO:Preloading libraries
2020-10-20 17:33:11,932:INFO:Initializing predict_model()
2020-10-20 17:33:11,932:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:11,932:INFO:Checking exceptions
2020-10-20 17:33:11,933:INFO:Preloading libraries
2020-10-20 17:33:12,069:INFO:Initializing predict_model()
2020-10-20 17:33:12,069:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:12,069:INFO:Checking exceptions
2020-10-20 17:33:12,069:INFO:Preloading libraries
2020-10-20 17:33:12,201:INFO:Initializing predict_model()
2020-10-20 17:33:12,201:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:12,201:INFO:Checking exceptions
2020-10-20 17:33:12,201:INFO:Preloading libraries
2020-10-20 17:33:12,331:INFO:Initializing predict_model()
2020-10-20 17:33:12,331:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:12,331:INFO:Checking exceptions
2020-10-20 17:33:12,331:INFO:Preloading libraries
2020-10-20 17:33:12,462:INFO:Initializing predict_model()
2020-10-20 17:33:12,462:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:12,462:INFO:Checking exceptions
2020-10-20 17:33:12,462:INFO:Preloading libraries
2020-10-20 17:33:12,595:INFO:Initializing predict_model()
2020-10-20 17:33:12,595:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:12,595:INFO:Checking exceptions
2020-10-20 17:33:12,595:INFO:Preloading libraries
2020-10-20 17:33:12,729:INFO:Initializing predict_model()
2020-10-20 17:33:12,729:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:12,729:INFO:Checking exceptions
2020-10-20 17:33:12,729:INFO:Preloading libraries
2020-10-20 17:33:12,879:INFO:Initializing predict_model()
2020-10-20 17:33:12,879:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:12,879:INFO:Checking exceptions
2020-10-20 17:33:12,879:INFO:Preloading libraries
2020-10-20 17:33:13,009:INFO:Initializing predict_model()
2020-10-20 17:33:13,009:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:13,009:INFO:Checking exceptions
2020-10-20 17:33:13,009:INFO:Preloading libraries
2020-10-20 17:33:13,143:INFO:Initializing predict_model()
2020-10-20 17:33:13,143:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:13,143:INFO:Checking exceptions
2020-10-20 17:33:13,143:INFO:Preloading libraries
2020-10-20 17:33:13,273:INFO:Initializing predict_model()
2020-10-20 17:33:13,274:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:13,274:INFO:Checking exceptions
2020-10-20 17:33:13,274:INFO:Preloading libraries
2020-10-20 17:33:13,407:INFO:Initializing predict_model()
2020-10-20 17:33:13,407:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:13,407:INFO:Checking exceptions
2020-10-20 17:33:13,407:INFO:Preloading libraries
2020-10-20 17:33:13,538:INFO:Initializing predict_model()
2020-10-20 17:33:13,538:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:13,538:INFO:Checking exceptions
2020-10-20 17:33:13,538:INFO:Preloading libraries
2020-10-20 17:33:13,670:INFO:Initializing predict_model()
2020-10-20 17:33:13,670:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:13,670:INFO:Checking exceptions
2020-10-20 17:33:13,670:INFO:Preloading libraries
2020-10-20 17:33:13,805:INFO:Initializing predict_model()
2020-10-20 17:33:13,805:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:13,805:INFO:Checking exceptions
2020-10-20 17:33:13,805:INFO:Preloading libraries
2020-10-20 17:33:13,937:INFO:Initializing predict_model()
2020-10-20 17:33:13,937:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:13,937:INFO:Checking exceptions
2020-10-20 17:33:13,937:INFO:Preloading libraries
2020-10-20 17:33:14,069:INFO:Initializing predict_model()
2020-10-20 17:33:14,070:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:14,070:INFO:Checking exceptions
2020-10-20 17:33:14,070:INFO:Preloading libraries
2020-10-20 17:33:14,202:INFO:Initializing predict_model()
2020-10-20 17:33:14,202:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:14,202:INFO:Checking exceptions
2020-10-20 17:33:14,202:INFO:Preloading libraries
2020-10-20 17:33:14,331:INFO:Initializing predict_model()
2020-10-20 17:33:14,332:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:14,332:INFO:Checking exceptions
2020-10-20 17:33:14,332:INFO:Preloading libraries
2020-10-20 17:33:14,462:INFO:Initializing predict_model()
2020-10-20 17:33:14,462:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:14,462:INFO:Checking exceptions
2020-10-20 17:33:14,462:INFO:Preloading libraries
2020-10-20 17:33:14,597:INFO:Initializing predict_model()
2020-10-20 17:33:14,598:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:14,598:INFO:Checking exceptions
2020-10-20 17:33:14,598:INFO:Preloading libraries
2020-10-20 17:33:14,734:INFO:Initializing predict_model()
2020-10-20 17:33:14,734:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:14,734:INFO:Checking exceptions
2020-10-20 17:33:14,734:INFO:Preloading libraries
2020-10-20 17:33:14,873:INFO:Initializing predict_model()
2020-10-20 17:33:14,873:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:14,873:INFO:Checking exceptions
2020-10-20 17:33:14,873:INFO:Preloading libraries
2020-10-20 17:33:15,009:INFO:Initializing predict_model()
2020-10-20 17:33:15,010:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:15,010:INFO:Checking exceptions
2020-10-20 17:33:15,010:INFO:Preloading libraries
2020-10-20 17:33:15,142:INFO:Initializing predict_model()
2020-10-20 17:33:15,142:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(display_types=False,
                                      ml_usecase='regression',
                                      target='target')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='target')),
                ('fix_perfect', Remove_100(target='target')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x0000019586080AC8>]]), probability_threshold=None, encoded_labels=True, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2020-10-20 17:33:15,142:INFO:Checking exceptions
2020-10-20 17:33:15,142:INFO:Preloading libraries
